(undo-tree-save-format-version . 1)
"aa02718e49cad0522de7fc50f895b6122ea6d032"
[nil nil nil nil (25192 6275 372858 0) 0 nil]
([nil nil ((nil rear-nonsticky nil 500 . 501) (nil fontified nil 500 . 501) (nil fontified nil 499 . 500) (nil fontified nil 439 . 499) (nil fontified nil 438 . 439) (nil fontified nil 437 . 438) (nil fontified nil 431 . 437) (nil fontified nil 406 . 431) (nil fontified nil 402 . 406) (nil fontified nil 401 . 402) (nil fontified nil 400 . 401) (nil fontified nil 399 . 400) (nil fontified nil 385 . 399) (nil fontified nil 384 . 385) (nil fontified nil 196 . 384) (nil fontified nil 195 . 196) (nil fontified nil 194 . 195) (nil fontified nil 188 . 194) (nil fontified nil 179 . 188) (nil fontified nil 175 . 179) (nil fontified nil 174 . 175) (nil fontified nil 173 . 174) (nil fontified nil 167 . 173) (nil fontified nil 166 . 167) (nil fontified nil 149 . 166) (nil fontified nil 137 . 149) (nil fontified nil 121 . 137) (nil fontified nil 115 . 121) (nil fontified nil 83 . 115) (nil fontified nil 79 . 83) (nil fontified nil 75 . 79) (nil fontified nil 69 . 75) (nil fontified nil 58 . 69) (nil fontified nil 54 . 58) (nil fontified nil 48 . 54) (nil fontified nil 42 . 48) (nil fontified nil 33 . 42) (nil fontified nil 29 . 33) (nil fontified nil 21 . 29) (nil fontified nil 15 . 21) (15 . 501) (t 25192 2930 795460 13000)) nil (25192 6275 372854 0) 0 nil])
([nil nil ((#("import pytest" 0 6 (fontified t face font-lock-keyword-face) 6 13 (fontified t)) . 15) (undo-tree-id10 . -13) (t 25192 6275 374471 279000)) nil (25192 6280 515690 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 15) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . 1) (undo-tree-id6 . 1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1)) nil (25192 6280 515686 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 293) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (t 25192 6280 517289 702000)) nil (25192 6299 806604 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 308) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1)) nil (25192 6299 806602 0) 0 nil])
([nil nil ((#("    ERC20TokenFactory," 0 22 (fontified t)) . 236)) nil (25192 6299 806599 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 236) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1)) nil (25192 6299 806599 0) 0 nil])
([nil nil ((#("    AddressArray," 0 1 (fontified t ws-butler-chg delete) 1 17 (fontified t)) . 236) (undo-tree-id74 . -17)) nil (25192 6299 806596 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 236) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1)) nil (25192 6299 806595 0) 0 nil])
([nil nil ((#("    ERC20Token," 0 1 (fontified t ws-butler-chg delete) 1 15 (fontified t)) . 236) (undo-tree-id67 . -15)) nil (25192 6299 806589 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 236) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1)) nil (25192 6299 806587 0) 0 nil])
([nil nil ((#("    SafeERC20," 0 1 (fontified t ws-butler-chg delete) 1 14 (fontified t)) . 236) (undo-tree-id58 . -14)) nil (25192 6299 806584 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 236) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1)) nil (25192 6299 806583 0) 0 nil])
([nil nil ((#("    TrustListFactory," 0 1 (fontified t ws-butler-chg delete) 1 21 (fontified t)) . 236) (undo-tree-id49 . -21)) nil (25192 6299 806579 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 236) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1)) nil (25192 6299 806578 0) 0 nil])
([nil nil ((#("    TrustList," 0 1 (fontified t ws-butler-chg delete) 1 14 (fontified t)) . 236) (undo-tree-id42 . -14)) nil (25192 6299 806576 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 236) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1)) nil (25192 6299 806574 0) 0 nil])
([nil nil ((#("    SafeMath," 0 1 (fontified t ws-butler-chg delete) 1 13 (fontified t)) . 236) (undo-tree-id35 . -13)) nil (25192 6299 806571 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 236) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1)) nil (25192 6299 806570 0) 0 nil])
([nil nil ((#("Address," 0 1 (fontified t ws-butler-chg delete) 1 8 (fontified t)) . 236) (undo-tree-id26 . -8) (undo-tree-id27 . -8)) nil (25192 6299 806567 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 236) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1)) nil (25192 6299 806566 0) 0 nil])
([nil nil ((#("    EFCRVVault" 0 1 (fontified t ws-butler-chg delete) 1 14 (fontified t)) . 236) (undo-tree-id19 . -14)) nil (25192 6299 806562 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 236) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . 1) (undo-tree-id17 . 1) (undo-tree-id18 . -1)) nil (25192 6299 806559 0) 0 nil])
([nil nil ((238 . 239) (t 25192 6299 808407 871000)) nil (25192 6310 32877 0) 0 nil])
([nil nil ((312 . 313) (t 25192 6310 34807 14000)) nil (25192 6316 870598 0) 0 nil])
([nil nil ((325 . 326) (t 25192 6316 872430 261000)) nil (25192 6321 363237 0) 0 nil])
([nil nil ((#("aave_lending_pool_v1" 0 20 (fontified t face font-lock-function-name-face)) . 563) (undo-tree-id157 . -20) (undo-tree-id158 . -3) (undo-tree-id159 . -3) (undo-tree-id160 . -20) (t 25192 6321 365049 4000)) nil (25192 6341 589192 0) 0 nil])
([nil nil ((563 . 570)) nil (25192 6341 589190 0) 0 nil])
([nil nil ((#("_" 0 1 (fontified t ws-butler-chg chg face font-lock-function-name-face)) . -571) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (570 . 572)) nil (25192 6341 589185 0) 0 nil])
([nil nil ((#("Contract" 0 8 (fontified t)) . 572) (undo-tree-id213 . -8) (undo-tree-id214 . -8) (t 25192 6341 591094 36000)) nil (25192 6384 406434 0) 0 nil])
([nil nil ((#("Contract(\"0x24a42fD28C976A61Df5D00D0599C34c4f90748c8\")" 0 8 (fontified t) 8 9 (fontified t face (rainbow-delimiters-depth-1-face)) 9 44 (fontified t face font-lock-string-face) 44 45 (fontified t face font-lock-string-face) 45 47 (fontified t face font-lock-string-face) 47 53 (fontified t face font-lock-string-face) 53 54 (fontified t face (rainbow-delimiters-depth-1-face))) . 675) (undo-tree-id211 . -2) (undo-tree-id212 . -3)) nil (25192 6384 406433 0) 0 nil])
([nil nil ((#("FlashloanV1.deploy(aave_lending_pool_v1, {\"from\": accounts[0]})" 0 18 (fontified t) 18 19 (fontified t face (rainbow-delimiters-depth-1-face)) 19 41 (fontified t) 41 42 (fontified t face (rainbow-delimiters-depth-2-face)) 42 48 (fontified t face font-lock-string-face) 48 58 (fontified t) 58 59 (fontified t face (rainbow-delimiters-depth-3-face)) 59 60 (fontified t) 60 61 (fontified t face (rainbow-delimiters-depth-3-face)) 61 62 (fontified t face (rainbow-delimiters-depth-2-face)) 62 63 (fontified t face (rainbow-delimiters-depth-1-face))) . 898)) nil (25192 6384 406431 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 960 . 961) (nil fontified nil 960 . 961) (nil fontified nil 959 . 960) (nil fontified nil 958 . 959) (nil fontified nil 957 . 958) (nil fontified nil 956 . 957) (nil fontified nil 946 . 956) (nil fontified nil 940 . 946) (nil fontified nil 939 . 940) (nil fontified nil 917 . 939) (nil fontified nil 916 . 917) (nil fontified nil 898 . 916) (898 . 961)) nil (25192 6384 406431 0) 0 nil])
([nil nil ((665 . 739)) nil (25192 6384 406429 0) 0 nil])
([nil nil ((#("yield " 0 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t)) . 743) (undo-tree-id199 . -6) (undo-tree-id200 . -6) (undo-tree-id201 . -6) (undo-tree-id202 . -6) (undo-tree-id203 . -6) (undo-tree-id204 . -6) (undo-tree-id205 . -6) (undo-tree-id206 . -6) (undo-tree-id207 . -6) (undo-tree-id208 . -5) (undo-tree-id209 . -6) (undo-tree-id210 . -6)) nil (25192 6384 406428 0) 0 nil])
([nil nil ((#("    " 0 1 (fontified t) 1 4 (fontified t)) . 739) (undo-tree-id161 . -4) (undo-tree-id162 . -4) (undo-tree-id163 . -4) (undo-tree-id164 . -4) (undo-tree-id165 . -4) (undo-tree-id166 . -4) (undo-tree-id167 . -4) (undo-tree-id168 . -4) (undo-tree-id169 . -4) (undo-tree-id170 . -4) (undo-tree-id171 . -4) (undo-tree-id172 . -4) (undo-tree-id173 . -4) (undo-tree-id174 . -4) (undo-tree-id175 . -4) (undo-tree-id176 . -4) (undo-tree-id177 . -4) (undo-tree-id178 . -4) (undo-tree-id179 . -4) (undo-tree-id180 . -4) (undo-tree-id181 . -4) (undo-tree-id182 . -4) (undo-tree-id183 . -4) (undo-tree-id184 . -4) (undo-tree-id185 . -4) (undo-tree-id186 . -4) (undo-tree-id187 . -4) (undo-tree-id188 . -4) (undo-tree-id189 . -4) (undo-tree-id190 . -4) (undo-tree-id191 . -4) (undo-tree-id192 . -4) (undo-tree-id193 . -4) (undo-tree-id194 . -4) (undo-tree-id195 . -4) (undo-tree-id196 . -4) (undo-tree-id197 . -4) (undo-tree-id198 . -4) 743) nil (25192 6384 406419 0) 0 nil])
([nil nil ((#("FlashloanV1" 0 11 (fontified t)) . 675) (undo-tree-id215 . -11) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -2) (undo-tree-id225 . -1) (undo-tree-id226 . -2) (undo-tree-id227 . -2) (undo-tree-id228 . -2) (undo-tree-id229 . -2) (undo-tree-id230 . -2) (undo-tree-id231 . -2) (undo-tree-id232 . -2) (undo-tree-id233 . -2) (undo-tree-id234 . -2) (undo-tree-id235 . -2) (undo-tree-id236 . -2) (undo-tree-id237 . -11) (t 25192 6384 408331 904000)) nil (25192 6387 728644 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 685 . 686) (nil fontified nil 675 . 686) (675 . 686) (t 25192 6387 730688 602000)) nil (25192 6407 823016 0) 0 nil])
([nil nil ((#("F" 0 1 (ws-butler-chg chg fontified t)) . -675) (undo-tree-id387 . -1) (#("l" 0 1 (ws-butler-chg chg fontified t)) . -676) (undo-tree-id388 . -1) (#("a" 0 1 (ws-butler-chg chg fontified t)) . -677) (undo-tree-id389 . -1) (#("s" 0 1 (ws-butler-chg chg fontified t)) . -678) (undo-tree-id390 . -1) (#("h" 0 1 (ws-butler-chg chg fontified t)) . -679) (undo-tree-id391 . -1) (#("l" 0 1 (ws-butler-chg chg fontified t)) . -680) (undo-tree-id392 . -1) (#("o" 0 1 (ws-butler-chg chg fontified t)) . -681) (undo-tree-id393 . -1) (#("a" 0 1 (ws-butler-chg chg fontified t)) . -682) (undo-tree-id394 . -1) (#("n" 0 1 (ws-butler-chg chg fontified t)) . -683) (undo-tree-id395 . -1) (#("V" 0 1 (ws-butler-chg chg fontified t)) . -684) (undo-tree-id396 . -1) (#("1" 0 1 (ws-butler-chg chg fontified t rear-nonsticky t)) . -685) (undo-tree-id397 . -1) 686) nil (25192 6407 823014 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 686 . 687) (nil fontified nil 675 . 687) (675 . 687)) nil (25192 6407 823007 0) 0 nil])
([nil nil ((#("." 0 1 (ws-butler-chg chg fontified t)) . -683) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (#("s" 0 1 (ws-butler-chg chg fontified t)) . -684) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (#("o" 0 1 (ws-butler-chg chg fontified t)) . -685) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (#("l" 0 1 (ws-butler-chg chg fontified t rear-nonsticky t)) . -686) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) 687) nil (25192 6407 823001 0) 0 nil])
([nil nil ((#("aave" 0 4 (fontified t)) . 691) (undo-tree-id400 . -4) (undo-tree-id401 . -3) (undo-tree-id402 . -4) (t 25192 6407 825038 685000)) nil (25192 6415 3389 0) 0 nil])
([nil nil ((#("_lending_pool_v1" 0 1 (fontified t ws-butler-chg delete) 1 16 (fontified t)) . 691) (undo-tree-id398 . -16) (undo-tree-id399 . -16)) nil (25192 6415 3387 0) 0 nil])
([nil nil ((#("," 0 1 (fontified t ws-butler-chg delete)) . 691)) nil (25192 6415 3377 0) 0 nil])
([nil nil ((235 . 240) (t 25192 6415 5222 10000)) nil (25192 6430 56140 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 255 . 256) (nil fontified nil 241 . 256) (nil fontified nil 240 . 241) (240 . 256)) nil (25192 6430 56139 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified t ws-butler-chg chg)) . 236) (undo-tree-id403 . -4) (undo-tree-id404 . -4) (undo-tree-id405 . -4) (undo-tree-id406 . -4) (undo-tree-id407 . -4) (undo-tree-id408 . -4) (undo-tree-id409 . -4) (undo-tree-id410 . -4) (undo-tree-id411 . -4) (undo-tree-id412 . -4) (undo-tree-id413 . -4) (undo-tree-id414 . -4) (undo-tree-id415 . -4) (undo-tree-id416 . -4) (undo-tree-id417 . -4) (undo-tree-id418 . -4) (undo-tree-id419 . -4) (undo-tree-id420 . -4) (undo-tree-id421 . -4) (undo-tree-id422 . -4) (undo-tree-id423 . -4) (undo-tree-id424 . -4) (undo-tree-id425 . -4) (undo-tree-id426 . -4) (undo-tree-id427 . -4) (undo-tree-id428 . -4) (undo-tree-id429 . -4) (undo-tree-id430 . -4) (undo-tree-id431 . -4) (undo-tree-id432 . -4) (undo-tree-id433 . -4) (undo-tree-id434 . -4) (undo-tree-id435 . -4) (undo-tree-id436 . -4) (undo-tree-id437 . -4) (undo-tree-id438 . -4) (undo-tree-id439 . -4) (undo-tree-id440 . -4) (undo-tree-id441 . -4) (undo-tree-id442 . -4) (undo-tree-id443 . -4) (undo-tree-id444 . -4) (undo-tree-id445 . -4) (undo-tree-id446 . -4) (undo-tree-id447 . -4) (undo-tree-id448 . -4) (undo-tree-id449 . -4) (undo-tree-id450 . -4) (undo-tree-id451 . -4) (undo-tree-id452 . -4) (undo-tree-id453 . -4) (undo-tree-id454 . -4) (undo-tree-id455 . -4) (undo-tree-id456 . -4) (undo-tree-id457 . -4) (undo-tree-id458 . -4) (undo-tree-id459 . -4) (undo-tree-id460 . -4) (undo-tree-id461 . -4) (undo-tree-id462 . -4) (undo-tree-id463 . -4) (undo-tree-id464 . -4) (undo-tree-id465 . -4) (undo-tree-id466 . -4) (undo-tree-id467 . -4) (undo-tree-id468 . -4) (undo-tree-id469 . -4) (undo-tree-id470 . -4) (undo-tree-id471 . -4) (undo-tree-id472 . -4) (undo-tree-id473 . -4) (undo-tree-id474 . -4) (undo-tree-id475 . -4) (undo-tree-id476 . -4) (undo-tree-id477 . -4) (undo-tree-id478 . -4) (undo-tree-id479 . -4) (undo-tree-id480 . -4) (undo-tree-id481 . -4) (undo-tree-id482 . -4) (undo-tree-id483 . -4) (undo-tree-id484 . -4) (undo-tree-id485 . -4) (undo-tree-id486 . -4) (undo-tree-id487 . -4) (undo-tree-id488 . -4) (undo-tree-id489 . -4) (undo-tree-id490 . -1) (undo-tree-id491 . -4) (undo-tree-id492 . -4) (undo-tree-id493 . -4) (undo-tree-id494 . -4) (undo-tree-id495 . -4) (undo-tree-id496 . -4) (undo-tree-id497 . -4) (undo-tree-id498 . -4) (undo-tree-id499 . -4) (undo-tree-id500 . -4) (undo-tree-id501 . -4) (undo-tree-id502 . -4) (undo-tree-id503 . -4) (undo-tree-id504 . -4) (undo-tree-id505 . -4) (undo-tree-id506 . -4) (undo-tree-id507 . -4) (undo-tree-id508 . -4) (undo-tree-id509 . -4) (undo-tree-id510 . -4) (undo-tree-id511 . -4) (undo-tree-id512 . -4) (undo-tree-id513 . -4) (undo-tree-id514 . -4) (undo-tree-id515 . -4) (undo-tree-id516 . -4) (undo-tree-id517 . -4) (undo-tree-id518 . -4) (undo-tree-id519 . -4) (undo-tree-id520 . -4) (undo-tree-id521 . -4) (undo-tree-id522 . -4) (undo-tree-id523 . -4) (undo-tree-id524 . -4) (undo-tree-id525 . -4) (undo-tree-id526 . -4) (undo-tree-id527 . -4) (undo-tree-id528 . -4) (undo-tree-id529 . -4) (undo-tree-id530 . -4) (undo-tree-id531 . -4) (undo-tree-id532 . -4) (undo-tree-id533 . -4) (undo-tree-id534 . -4) (undo-tree-id535 . -4) (undo-tree-id536 . -4) (#("_lending_pool_v1" 0 1 (ws-butler-chg chg fontified t) 1 15 (ws-butler-chg chg fontified t) 15 16 (ws-butler-chg chg fontified t rear-nonsticky t)) . 240) (undo-tree-id537 . -16) (undo-tree-id538 . -16) (undo-tree-id539 . -16) (undo-tree-id540 . -16) (undo-tree-id541 . -16) (undo-tree-id542 . -16) (undo-tree-id543 . -16) (undo-tree-id544 . -16) (undo-tree-id545 . -16) (undo-tree-id546 . -16) (undo-tree-id547 . -16) (undo-tree-id548 . -16) (undo-tree-id549 . -16) (undo-tree-id550 . -16) (undo-tree-id551 . -16) (undo-tree-id552 . -16) (undo-tree-id553 . -16) (undo-tree-id554 . -16) (undo-tree-id555 . -16) (undo-tree-id556 . -16) (undo-tree-id557 . -16) (undo-tree-id558 . -16) (undo-tree-id559 . -16) (undo-tree-id560 . -16) (undo-tree-id561 . -16) (undo-tree-id562 . -16) (undo-tree-id563 . -16) (undo-tree-id564 . -16) (undo-tree-id565 . -16) (undo-tree-id566 . -16) (undo-tree-id567 . -16) (undo-tree-id568 . -16) (undo-tree-id569 . -16) (undo-tree-id570 . -16) (undo-tree-id571 . -16) (undo-tree-id572 . -16) (undo-tree-id573 . -16) (undo-tree-id574 . -16) (undo-tree-id575 . -16) (undo-tree-id576 . -16) (undo-tree-id577 . -16) (undo-tree-id578 . -16) (undo-tree-id579 . -16) (undo-tree-id580 . -16) (undo-tree-id581 . -16) (undo-tree-id582 . -16)) nil (25192 6430 56131 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 247 . 248) (nil fontified nil 236 . 248) (236 . 248) (t 25192 6430 58236 546000)) nil (25192 6435 610657 0) 0 nil])
([nil nil ((#(".sol" 0 3 (ws-butler-chg chg fontified t) 3 4 (ws-butler-chg chg fontified t rear-nonsticky t)) . 244) (undo-tree-id583 . -4) (undo-tree-id584 . -4) (undo-tree-id585 . -4) (undo-tree-id586 . -4) (undo-tree-id587 . -4) (undo-tree-id588 . -4) (undo-tree-id589 . -4) (undo-tree-id590 . -4) (undo-tree-id591 . -4) (undo-tree-id592 . -4) (undo-tree-id593 . -4) (undo-tree-id594 . -4) (undo-tree-id595 . -4) (undo-tree-id596 . -4) (undo-tree-id597 . -4) (undo-tree-id598 . -4) (undo-tree-id599 . -4) (undo-tree-id600 . -4) (undo-tree-id601 . -4) (undo-tree-id602 . -4) (undo-tree-id603 . -4) (undo-tree-id604 . -4) (undo-tree-id605 . -4) (undo-tree-id606 . -4) (undo-tree-id607 . -4) (undo-tree-id608 . -4) (undo-tree-id609 . -4) (undo-tree-id610 . -4) (undo-tree-id611 . -4) (undo-tree-id612 . -4) (undo-tree-id613 . -4) (undo-tree-id614 . -4) (undo-tree-id615 . -4) (undo-tree-id616 . -4) (undo-tree-id617 . -4) (undo-tree-id618 . -4) (undo-tree-id619 . -4) (undo-tree-id620 . -3) (undo-tree-id621 . -4) (undo-tree-id622 . -3) (undo-tree-id623 . -3) (undo-tree-id624 . -3) (undo-tree-id625 . -3) (undo-tree-id626 . -3) (undo-tree-id627 . -3) (undo-tree-id628 . -3) (undo-tree-id629 . -3) (undo-tree-id630 . -3) (undo-tree-id631 . -3) (undo-tree-id632 . -3) (undo-tree-id633 . -3) (undo-tree-id634 . -3) (undo-tree-id635 . -3) (undo-tree-id636 . -2) (undo-tree-id637 . -3) (undo-tree-id638 . -2) (undo-tree-id639 . -2) (undo-tree-id640 . -2) (undo-tree-id641 . -2) (undo-tree-id642 . -2) (undo-tree-id643 . -2) (undo-tree-id644 . -2) (undo-tree-id645 . -2) (undo-tree-id646 . -2) (undo-tree-id647 . -2) (undo-tree-id648 . -2) (undo-tree-id649 . -2) (undo-tree-id650 . -2) (undo-tree-id651 . -1) (undo-tree-id652 . -2) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -4)) nil (25192 6435 610654 0) 0 nil])
([nil current ((236 . 240) (244 . 245)) nil (25192 6435 610614 0) 0 nil])
nil
