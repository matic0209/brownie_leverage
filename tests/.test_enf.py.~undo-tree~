(undo-tree-save-format-version . 1)
"54d65cc8616bfa665959fdfc995b90c2e3a99973"
[nil nil nil nil (25203 42222 987919 0) 0 nil]
([nil nil ((792 . 793) (t 25194 13872 424883 183000)) nil (25203 42222 987916 0) 0 nil])
([nil nil ((793 . 794) (t 25203 42222 990192 369000)) nil (25203 43054 67024 0) 0 nil])
([nil nil ((846 . 851) (t 25203 42255 856680 694000)) nil (25203 43054 67023 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 878 . 879) (nil fontified nil 851 . 879) (851 . 879)) nil (25203 43054 67022 0) 0 nil])
([nil nil ((#("tx.events['CountryModified']" 0 9 (fontified t ws-butler-chg chg) 9 10 (face (rainbow-delimiters-depth-1-face) fontified t ws-butler-chg chg) 10 27 (face font-lock-string-face fontified t ws-butler-chg chg) 27 28 (face (rainbow-delimiters-depth-1-face) rear-nonsticky t fontified t ws-butler-chg chg)) . 851) (undo-tree-id2 . -28)) nil (25203 43054 67019 0) 0 nil])
([nil nil ((856 . 858) (#("(" 0 1 (face font-lock-builtin-face ws-butler-chg chg fontified nil)) . -856) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (851 . 857)) nil (25203 43054 67013 0) 0 nil])
([nil nil ((nil fontified nil 884 . 885) (nil fontified nil 867 . 884) (nil fontified nil 866 . 867) (nil fontified nil 857 . 866) (857 . 885) (t 25203 43054 69642 373000)) nil (25203 43066 196823 0) 0 nil])
([nil nil ((#("CountryModified" 0 15 (face font-lock-string-face fontified t ws-butler-chg chg)) . 868) (undo-tree-id3 . -15) (undo-tree-id4 . 15) (undo-tree-id5 . -15) (undo-tree-id6 . -15) (undo-tree-id7 . -15) (undo-tree-id8 . -15) (undo-tree-id9 . -15) (undo-tree-id10 . -15) (undo-tree-id11 . -15) (undo-tree-id12 . -15) (undo-tree-id13 . -14) (undo-tree-id14 . -15) (undo-tree-id15 . -14) (undo-tree-id16 . -14) (undo-tree-id17 . -14) (undo-tree-id18 . -14) (undo-tree-id19 . -14) (undo-tree-id20 . -14) (undo-tree-id21 . -13) (undo-tree-id22 . -14) (undo-tree-id23 . -13) (undo-tree-id24 . -13) (undo-tree-id25 . -13) (undo-tree-id26 . -13) (undo-tree-id27 . -13) (undo-tree-id28 . -13) (undo-tree-id29 . -13) (undo-tree-id30 . -13) (undo-tree-id31 . -13) (undo-tree-id32 . -13) (undo-tree-id33 . -13) (undo-tree-id34 . -13) (undo-tree-id35 . -13) (undo-tree-id36 . -13) (undo-tree-id37 . -13) (undo-tree-id38 . -13) (undo-tree-id39 . -13) (undo-tree-id40 . -13) (undo-tree-id41 . -13) (undo-tree-id42 . -13) (undo-tree-id43 . -15) (undo-tree-id44 . 15) (undo-tree-id45 . -15) 881) nil (25203 43066 196817 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 877 . 878) (nil fontified nil 868 . 878) (868 . 878)) nil (25203 43066 196768 0) 0 nil])
([nil nil ((395 . 400) (t 25203 43066 199092 880000)) nil (25203 43086 557038 0) 0 nil])
([nil nil ((872 . 884) (#("'CFFDeposit'" 0 1 (face font-lock-string-face fontified t) 1 10 (face font-lock-string-face fontified t) 10 11 (face font-lock-string-face fontified t rear-nonsticky t) 11 12 (face font-lock-string-face fontified t)) . 872) (undo-tree-id55 . -1) (t 25203 43086 558962 144000)) nil (25203 52017 378154 0) 0 nil])
([nil nil ((886 . 891) (t 25203 43095 247565 591000)) nil (25203 52017 378152 0) 0 nil])
([nil nil ((891 . 892)) nil (25203 52017 378152 0) 0 nil])
([nil nil ((892 . 894)) nil (25203 52017 378151 0) 0 nil])
([nil nil ((891 . 894) (#("log" 0 3 (ws-butler-chg chg fontified nil)) . -891) (891 . 894) (#("log(text, desc)" 0 15 (ws-butler-chg chg fontified nil)) . -891) (891 . 906) (#("log" 0 3 (ws-butler-chg chg fontified t)) . -891) (undo-tree-id53 . -3) (undo-tree-id54 . -3) 894) nil (25203 52017 378151 0) 0 nil])
([nil nil ((894 . 899)) nil (25203 52017 378149 0) 0 nil])
([nil nil ((#("    " 0 4 (ws-butler-chg chg fontified t)) . -895) (undo-tree-id52 . -4) 899) nil (25203 52017 378148 0) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg chg fontified t)) . -894) (undo-tree-id50 . -1) (undo-tree-id51 . -1) 895) nil (25203 52017 378147 0) 0 nil])
([nil nil ((894 . 935)) nil (25203 52017 378145 0) 0 nil])
([nil nil ((#("deposit" 0 7 (face font-lock-string-face ws-butler-chg chg fontified t)) . 896) (undo-tree-id46 . -7) (undo-tree-id47 . -4) (undo-tree-id48 . -4) (undo-tree-id49 . -7)) nil (25203 52017 378142 0) 0 nil])
([nil nil ((1059 . 1064) (t 25203 52017 380727 438000)) nil (25203 52128 580513 0) 0 nil])
([nil nil ((1064 . 1068)) nil (25203 52128 580512 0) 0 nil])
([nil nil ((1064 . 1070) (#("ass" 0 3 (ws-butler-chg chg fontified nil)) . -1064) (1064 . 1067) (#("assert" 0 6 (ws-butler-chg chg fontified nil)) . -1064) (1064 . 1070) (#("asse" 0 4 (ws-butler-chg chg fontified t)) . -1064) (undo-tree-id325 . -4) (undo-tree-id326 . -4) 1068) nil (25203 52128 580511 0) 0 nil])
([nil nil ((1070 . 1071)) nil (25203 52128 580509 0) 0 nil])
([nil nil ((#("v" 0 1 (ws-butler-chg chg fontified t)) . -1071) (undo-tree-id318 . -1) (#("o" 0 1 (ws-butler-chg chg fontified t)) . -1072) (undo-tree-id319 . -1) (#("l" 0 1 (ws-butler-chg chg fontified t)) . -1073) (undo-tree-id320 . -1) (#("u" 0 1 (ws-butler-chg chg fontified t)) . -1074) (undo-tree-id321 . -1) (#("m" 0 1 (ws-butler-chg chg fontified t)) . -1075) (undo-tree-id322 . -1) (#("n" 0 1 (ws-butler-chg chg fontified t)) . -1076) (undo-tree-id323 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t)) . -1077) (undo-tree-id324 . -1) (1071 . 1097)) nil (25203 52128 580507 0) 0 nil])
([nil nil ((886 . 891)) nil (25203 52128 580503 0) 0 nil])
([nil nil ((896 . 903) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -896) (undo-tree-id317 . -1) (891 . 897)) nil (25203 52128 580502 0) 0 nil])
([nil nil ((#("t" 0 1 (rear-nonsticky t fontified t ws-butler-chg chg)) . -909) (undo-tree-id316 . -1) (nil rear-nonsticky nil 909 . 910) (nil fontified nil 903 . 910) (903 . 910)) nil (25203 52128 580501 0) 0 nil])
([nil nil ((#("d" 0 1 (fontified t ws-butler-chg chg)) . -903) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -904) (undo-tree-id311 . -1) (#("p" 0 1 (fontified t ws-butler-chg chg)) . -905) (undo-tree-id312 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg)) . -906) (undo-tree-id313 . -1) (#("s" 0 1 (fontified t ws-butler-chg chg)) . -907) (undo-tree-id314 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg)) . -908) (undo-tree-id315 . -1) 909) nil (25203 52128 580499 0) 0 nil])
([nil nil ((903 . 926)) nil (25203 52128 580495 0) 0 nil])
([nil nil ((#("log(\"\", str(tx.events[\"CFFDeposit\"]))" 0 3 (fontified t) 3 4 (face (rainbow-delimiters-depth-1-face) fontified t) 4 5 (face font-lock-string-face fontified t) 5 6 (face font-lock-string-face fontified t) 6 8 (fontified t) 8 11 (face font-lock-builtin-face fontified t) 11 12 (face (rainbow-delimiters-depth-2-face) fontified t) 12 21 (fontified t) 21 22 (face (rainbow-delimiters-depth-3-face) fontified t) 22 34 (face font-lock-string-face fontified t) 34 35 (face (rainbow-delimiters-depth-3-face) fontified t) 35 36 (face (rainbow-delimiters-depth-2-face) fontified t) 36 37 (face (rainbow-delimiters-depth-1-face) fontified t)) . 931) (undo-tree-id204 . -5) (undo-tree-id205 . -5) (undo-tree-id206 . -5) (undo-tree-id207 . -5) (undo-tree-id208 . -18) (undo-tree-id209 . -35) (undo-tree-id210 . -35) (undo-tree-id211 . -35) (undo-tree-id212 . -35) (undo-tree-id213 . -35) (undo-tree-id214 . -35) (undo-tree-id215 . -34) (undo-tree-id216 . -35) (undo-tree-id217 . -34) (undo-tree-id218 . -35) (undo-tree-id219 . -34) (undo-tree-id220 . -35) (undo-tree-id221 . -34) (undo-tree-id222 . -35) (undo-tree-id223 . -33) (undo-tree-id224 . -34) (undo-tree-id225 . -33) (undo-tree-id226 . -34) (undo-tree-id227 . -34) (undo-tree-id228 . -35) (undo-tree-id229 . -34) (undo-tree-id230 . -35) (undo-tree-id231 . -21) (undo-tree-id232 . -22) (undo-tree-id233 . -35) (undo-tree-id234 . -35) (undo-tree-id235 . -35) (undo-tree-id236 . -35) (undo-tree-id237 . -35) (undo-tree-id238 . -35) (undo-tree-id239 . -35) (undo-tree-id240 . -35) (undo-tree-id241 . -35) (undo-tree-id242 . -35) (undo-tree-id243 . -35) (undo-tree-id244 . -35) (undo-tree-id245 . -35) (undo-tree-id246 . -35) (undo-tree-id247 . -35) (undo-tree-id248 . -35) (undo-tree-id249 . -35) (undo-tree-id250 . -35) (undo-tree-id251 . -35) (undo-tree-id252 . -35) (undo-tree-id253 . -35) (undo-tree-id254 . -35) (undo-tree-id255 . -35) (undo-tree-id256 . -35) (undo-tree-id257 . -35) (undo-tree-id258 . -35) (undo-tree-id259 . -35) (undo-tree-id260 . -35) (undo-tree-id261 . 14) (undo-tree-id262 . -33) (undo-tree-id263 . -35) (undo-tree-id264 . -35) (undo-tree-id265 . -35) (undo-tree-id266 . -35) (undo-tree-id267 . -35) (undo-tree-id268 . -34) (undo-tree-id269 . -35) (undo-tree-id270 . -34) (undo-tree-id271 . -35) (undo-tree-id272 . -34) (undo-tree-id273 . -35) (undo-tree-id274 . -34) (undo-tree-id275 . -35) (undo-tree-id276 . -33) (undo-tree-id277 . -34) (undo-tree-id278 . -33) (undo-tree-id279 . -34) (undo-tree-id280 . -34) (undo-tree-id281 . -35) (undo-tree-id282 . -34) (undo-tree-id283 . -35) (undo-tree-id284 . -21) (undo-tree-id285 . -22) (undo-tree-id286 . -35) (undo-tree-id287 . -35) (undo-tree-id288 . -35) (undo-tree-id289 . -35) (undo-tree-id290 . -35) (undo-tree-id291 . -35) (undo-tree-id292 . -35) (undo-tree-id293 . -35) (undo-tree-id294 . -35) (undo-tree-id295 . -35) (undo-tree-id296 . -35) (undo-tree-id297 . -35) (undo-tree-id298 . -35) (undo-tree-id299 . -35) (undo-tree-id300 . -35) (undo-tree-id301 . -35) (undo-tree-id302 . -35) (undo-tree-id303 . -37) (undo-tree-id304 . -37) (undo-tree-id305 . -37) (undo-tree-id306 . -37) (undo-tree-id307 . -37) (undo-tree-id308 . -37)) nil (25203 52128 580492 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 927) (undo-tree-id56 . -4) (undo-tree-id57 . -4) (undo-tree-id58 . -4) (undo-tree-id59 . -4) (undo-tree-id60 . -4) (undo-tree-id61 . -4) (undo-tree-id62 . -4) (undo-tree-id63 . -4) (undo-tree-id64 . -4) (undo-tree-id65 . -4) (undo-tree-id66 . -4) (undo-tree-id67 . -4) (undo-tree-id68 . -4) (undo-tree-id69 . -4) (undo-tree-id70 . -4) (undo-tree-id71 . -4) (undo-tree-id72 . -4) (undo-tree-id73 . -4) (undo-tree-id74 . -4) (undo-tree-id75 . -4) (undo-tree-id76 . -4) (undo-tree-id77 . -4) (undo-tree-id78 . -4) (undo-tree-id79 . -4) (undo-tree-id80 . -4) (undo-tree-id81 . -4) (undo-tree-id82 . -4) (undo-tree-id83 . -4) (undo-tree-id84 . -4) (undo-tree-id85 . -4) (undo-tree-id86 . -4) (undo-tree-id87 . -4) (undo-tree-id88 . -4) (undo-tree-id89 . -4) (undo-tree-id90 . -4) (undo-tree-id91 . -4) (undo-tree-id92 . -4) (undo-tree-id93 . -4) (undo-tree-id94 . -4) (undo-tree-id95 . -4) (undo-tree-id96 . -4) (undo-tree-id97 . -4) (undo-tree-id98 . -4) (undo-tree-id99 . -4) (undo-tree-id100 . -4) (undo-tree-id101 . -4) (undo-tree-id102 . -4) (undo-tree-id103 . -4) (undo-tree-id104 . -4) (undo-tree-id105 . -4) (undo-tree-id106 . -4) (undo-tree-id107 . -4) (undo-tree-id108 . -4) (undo-tree-id109 . -4) (undo-tree-id110 . -4) (undo-tree-id111 . -4) (undo-tree-id112 . -4) (undo-tree-id113 . -4) (undo-tree-id114 . -4) (undo-tree-id115 . -4) (undo-tree-id116 . -4) (undo-tree-id117 . -4) (undo-tree-id118 . -4) (undo-tree-id119 . -4) (undo-tree-id120 . -4) (undo-tree-id121 . -4) (undo-tree-id122 . -4) (undo-tree-id123 . -4) (undo-tree-id124 . -4) (undo-tree-id125 . -4) (undo-tree-id126 . -4) (undo-tree-id127 . -4) (undo-tree-id128 . -4) (undo-tree-id129 . -4) (undo-tree-id130 . -4) (undo-tree-id131 . -4) (undo-tree-id132 . -4) (undo-tree-id133 . -4) (undo-tree-id134 . -4) (undo-tree-id135 . -4) (undo-tree-id136 . -4) (undo-tree-id137 . -4) (undo-tree-id138 . -4) (undo-tree-id139 . -4) (undo-tree-id140 . -4) (undo-tree-id141 . -4) (undo-tree-id142 . -4) (undo-tree-id143 . -4) (undo-tree-id144 . -4) (undo-tree-id145 . -4) (undo-tree-id146 . -4) (undo-tree-id147 . -4) (undo-tree-id148 . -4) (undo-tree-id149 . -4) (undo-tree-id150 . -4) (undo-tree-id151 . -4) (undo-tree-id152 . -4) (undo-tree-id153 . -4) (undo-tree-id154 . -4) (undo-tree-id155 . -4) (undo-tree-id156 . -4) (undo-tree-id157 . -4) (undo-tree-id158 . -4) (undo-tree-id159 . -4) (undo-tree-id160 . -4) (undo-tree-id161 . -4) (undo-tree-id162 . -4) (undo-tree-id163 . -4) (undo-tree-id164 . -4) (undo-tree-id165 . -4) (undo-tree-id166 . -4) (undo-tree-id167 . -4) (undo-tree-id168 . -4) (undo-tree-id169 . -4) (undo-tree-id170 . -4) (undo-tree-id171 . -4) (undo-tree-id172 . -4) (undo-tree-id173 . -4) (undo-tree-id174 . -4) (undo-tree-id175 . -4) (undo-tree-id176 . -4) (undo-tree-id177 . -4) (undo-tree-id178 . -4) (undo-tree-id179 . -4) (undo-tree-id180 . -4) (undo-tree-id181 . -4) (undo-tree-id182 . -4) (undo-tree-id183 . -4) (undo-tree-id184 . -4) (undo-tree-id185 . -4) (undo-tree-id186 . -4) (undo-tree-id187 . -4) (undo-tree-id188 . -4) (undo-tree-id189 . -4) (undo-tree-id190 . -4) (undo-tree-id191 . -4) (undo-tree-id192 . -4) (undo-tree-id193 . -4) (undo-tree-id194 . -4) (undo-tree-id195 . -4) (undo-tree-id196 . -4) (undo-tree-id197 . -4) (undo-tree-id198 . -4) (undo-tree-id199 . -4) (undo-tree-id200 . -4) (undo-tree-id201 . -4) (undo-tree-id202 . -4) (undo-tree-id203 . -4) 931) nil (25203 52128 580439 0) 0 nil])
([nil nil ((927 . 928) (926 . 928) (#("[" 0 1 (ws-butler-chg chg face (rainbow-delimiters-depth-1-face) fontified nil)) . -926) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (926 . 927) (t 25203 52128 582641 479000)) nil (25203 52213 808800 0) 0 nil])
([nil nil ((886 . 891) (t 25203 52213 811928 628000)) nil (25203 52228 839866 0) 0 nil])
([nil nil ((891 . 893)) nil (25203 52228 839865 0) 0 nil])
([nil nil ((893 . 960)) nil (25203 52228 839865 0) 0 nil])
([nil nil ((#("tx.events[\"CFFDeposit\"][0][\"args\"][\"value\"] == Wei(\"10 ether\")" 0 9 (ws-butler-chg chg fontified t) 9 10 (face (rainbow-delimiters-depth-1-face) ws-butler-chg chg fontified t) 10 22 (face font-lock-string-face ws-butler-chg chg fontified t) 22 23 (face (rainbow-delimiters-depth-1-face) ws-butler-chg chg fontified t) 23 24 (face (rainbow-delimiters-depth-1-face) ws-butler-chg chg fontified t) 24 25 (ws-butler-chg chg fontified t) 25 26 (face (rainbow-delimiters-depth-1-face) ws-butler-chg chg fontified t) 26 27 (face (rainbow-delimiters-depth-1-face) ws-butler-chg chg fontified t) 27 33 (face font-lock-string-face ws-butler-chg chg fontified t) 33 34 (face (rainbow-delimiters-depth-1-face) ws-butler-chg chg fontified t) 34 35 (face (rainbow-delimiters-depth-1-face) ws-butler-chg chg fontified t) 35 42 (face font-lock-string-face ws-butler-chg chg fontified t) 42 43 (face (rainbow-delimiters-depth-1-face) ws-butler-chg chg fontified t) 43 50 (ws-butler-chg chg fontified t) 50 51 (face (rainbow-delimiters-depth-1-face) ws-butler-chg chg fontified t) 51 61 (face font-lock-string-face ws-butler-chg chg fontified t) 61 62 (face (rainbow-delimiters-depth-1-face) ws-butler-chg chg fontified t)) . 898) (undo-tree-id331 . -62) (undo-tree-id332 . -6) (undo-tree-id333 . -5) (undo-tree-id334 . -6) (undo-tree-id335 . -5) (undo-tree-id336 . -4) (undo-tree-id337 . -5) (undo-tree-id338 . -4) (undo-tree-id339 . -4) (undo-tree-id340 . -4) (undo-tree-id341 . -4) (undo-tree-id342 . -4) (undo-tree-id343 . -4) (undo-tree-id344 . -3) (undo-tree-id345 . -4) (undo-tree-id346 . -3) (undo-tree-id347 . -3) (undo-tree-id348 . -3) (undo-tree-id349 . -3) (undo-tree-id350 . -3) (undo-tree-id351 . -3) (undo-tree-id352 . -2) (undo-tree-id353 . -3) (undo-tree-id354 . -2) (undo-tree-id355 . -2) (undo-tree-id356 . -2) (undo-tree-id357 . -2) (undo-tree-id358 . -2) (undo-tree-id359 . -2) (undo-tree-id360 . -1) (undo-tree-id361 . -2) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -62) (undo-tree-id370 . -62) (undo-tree-id371 . -62) (undo-tree-id372 . -62) (undo-tree-id373 . -62) (undo-tree-id374 . -62)) nil (25203 52228 839863 0) 0 nil])
([nil nil ((901 . 903) (#("(" 0 1 (face font-lock-builtin-face ws-butler-chg chg fontified nil)) . -901) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (898 . 902)) nil (25203 52228 839842 0) 0 nil])
([nil nil ((902 . 906) (t 25203 52228 841744 38000)) nil (25203 52234 733217 0) 0 nil])
([nil nil ((906 . 931) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 906) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . 1)) nil (25203 52234 733213 0) 0 nil])
([nil nil ((1033 . 1038) (t 25203 52234 736132 760000)) nil (25203 52250 788052 0) 0 nil])
([nil nil ((1038 . 1041) (#("e" 0 1 (ws-butler-chg chg fontified t)) . -1038) (undo-tree-id438 . -1) (#("v" 0 1 (ws-butler-chg chg fontified t)) . -1039) (undo-tree-id439 . -1) (1038 . 1040)) nil (25203 52250 788051 0) 0 nil])
([nil nil ((#("    " 0 4 (ws-butler-chg chg fontified t)) . 1034) (undo-tree-id378 . -4) (undo-tree-id379 . -4) (undo-tree-id380 . -4) (undo-tree-id381 . -4) (undo-tree-id382 . -4) (undo-tree-id383 . -4) (undo-tree-id384 . -4) (undo-tree-id385 . -4) (undo-tree-id386 . -4) (undo-tree-id387 . -4) (undo-tree-id388 . -4) (undo-tree-id389 . -4) (undo-tree-id390 . -4) (undo-tree-id391 . -4) (undo-tree-id392 . -4) (undo-tree-id393 . -4) (undo-tree-id394 . -4) (undo-tree-id395 . -4) (undo-tree-id396 . -4) (undo-tree-id397 . -1) (undo-tree-id398 . -4) (undo-tree-id399 . -4) (undo-tree-id400 . -4) (undo-tree-id401 . -4) (undo-tree-id402 . -4) (undo-tree-id403 . -4) (undo-tree-id404 . -4) (undo-tree-id405 . -4) (undo-tree-id406 . -4) (#("a" 0 1 (ws-butler-chg chg fontified t)) . -1038) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (#("s" 0 1 (face font-lock-keyword-face ws-butler-chg chg fontified t)) . -1039) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (#("s" 0 1 (ws-butler-chg chg fontified t)) . -1040) (undo-tree-id436 . -1) (undo-tree-id437 . -1) 1041) nil (25203 52250 788045 0) 0 nil])
([nil current ((#("e" 0 1 (fontified t ws-butler-chg chg)) . -1119) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (#("v" 0 1 (fontified t ws-butler-chg chg)) . -1120) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -1121) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (#("n" 0 1 (fontified t ws-butler-chg chg)) . -1122) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -1123) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (1119 . 1124) (t 25203 52250 790610 559000)) nil (25203 53244 46778 0) 0 nil])
nil
