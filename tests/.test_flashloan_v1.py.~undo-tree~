(undo-tree-save-format-version . 1)
"e89b403e612da0de14aa998571e6be0a67907067"
[nil nil nil nil (25192 6568 977439 0) 0 nil]
([nil nil ((nil rear-nonsticky nil 804 . 805) (nil fontified nil 804 . 805) (nil fontified nil 803 . 804) (nil fontified nil 706 . 803) (nil fontified nil 705 . 706) (nil fontified nil 680 . 705) (nil fontified nil 679 . 680) (nil fontified nil 676 . 679) (nil fontified nil 674 . 676) (nil fontified nil 673 . 674) (nil fontified nil 666 . 673) (nil fontified nil 657 . 666) (nil fontified nil 647 . 657) (nil fontified nil 637 . 647) (nil fontified nil 636 . 637) (nil fontified nil 631 . 636) (nil fontified nil 625 . 631) (nil fontified nil 624 . 625) (nil fontified nil 622 . 624) (nil fontified nil 611 . 622) (nil fontified nil 610 . 611) (nil fontified nil 607 . 610) (nil fontified nil 606 . 607) (nil fontified nil 603 . 606) (nil fontified nil 602 . 603) (nil fontified nil 601 . 602) (nil fontified nil 451 . 601) (nil fontified nil 450 . 451) (nil fontified nil 449 . 450) (nil fontified nil 443 . 449) (nil fontified nil 434 . 443) (nil fontified nil 430 . 434) (nil fontified nil 427 . 430) (nil fontified nil 421 . 427) (nil fontified nil 411 . 421) (nil fontified nil 407 . 411) (nil fontified nil 380 . 407) (nil fontified nil 374 . 380) (nil fontified nil 349 . 374) (nil fontified nil 345 . 349) (nil fontified nil 341 . 345) (nil fontified nil 335 . 341) (nil fontified nil 326 . 335) (nil fontified nil 322 . 326) (nil fontified nil 314 . 322) (nil fontified nil 308 . 314) (308 . 805) (t 25192 2930 796048 226000)) nil (25192 6568 977434 0) 0 nil])
([nil nil ((#("deploy_safeerc20,deploy_addressArray,deploy_tl,gett_token_tl,deploy_ef,deploy_vault,addExtraToken" 0 97 (fontified t)) . 706) (undo-tree-id25 . -97) (undo-tree-id26 . -95) (undo-tree-id27 . -95) (undo-tree-id28 . -97) (t 25192 6568 979101 895000)) nil (25192 6592 417525 0) 0 nil])
([nil nil ((706 . 709)) nil (25192 6592 417523 0) 0 nil])
([nil nil ((706 . 714) (#("st" 0 2 (fontified nil ws-butler-chg chg)) . -706) (706 . 708) (#("strategy()" 0 10 (fontified nil ws-butler-chg chg)) . -706) (706 . 716) (#("str" 0 3 (fontified t ws-butler-chg chg face font-lock-builtin-face)) . -706) (undo-tree-id20 . -3) (undo-tree-id21 . -3) (undo-tree-id22 . -3) (undo-tree-id23 . -2) (undo-tree-id24 . -3) 709) nil (25192 6592 417825 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil ws-butler-chg delete face (rainbow-delimiters-depth-1-face))) . 715) (714 . 715) (#(" " 0 1 (fontified nil ws-butler-chg chg)) . -714) (714 . 715) (#(")" 0 1 (fontified nil ws-butler-chg chg)) . -714) (714 . 715)) nil (25192 6609 704541 0) 0 nil] [nil nil ((#("):

def" 0 1 (fontified t ws-butler-chg delete face (rainbow-delimiters-depth-1-face)) 1 2 (fontified t rear-nonsticky t) 2 3 (fontified t) 3 4 (fontified t) 4 7 (fontified t face font-lock-keyword-face)) . 714) (undo-tree-id0 . -3) (undo-tree-id1 . -3) (undo-tree-id2 . -4) (undo-tree-id3 . -4) (undo-tree-id4 . -3) (undo-tree-id5 . -2) (undo-tree-id6 . -2) (undo-tree-id7 . 7) (undo-tree-id8 . 5) (undo-tree-id9 . -4) (undo-tree-id10 . -4) (undo-tree-id11 . -4) (undo-tree-id12 . -4) (undo-tree-id13 . -4) (undo-tree-id14 . -4) (undo-tree-id15 . -4) (undo-tree-id16 . -4) (undo-tree-id17 . -3) (undo-tree-id18 . -3) (undo-tree-id19 . -7)) ((nil ws-butler-chg delete 721 . 722) (714 . 721)) (25192 6592 417515 0) 0 nil])
([nil nil ((716 . 927)) nil (25192 6609 704540 0) 0 nil])
nil
([nil nil ((927 . 932)) nil (25192 6609 704539 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified t ws-butler-chg chg)) . 928) (undo-tree-id29 . -4) (undo-tree-id30 . -4) (undo-tree-id31 . -4) (undo-tree-id32 . -4) (undo-tree-id33 . -4) (undo-tree-id34 . -4) (undo-tree-id35 . -4) (undo-tree-id36 . -4) (undo-tree-id37 . -4) (undo-tree-id38 . -4) (undo-tree-id39 . -4) (undo-tree-id40 . -4) (undo-tree-id41 . -4) (undo-tree-id42 . -4) (undo-tree-id43 . -4) (undo-tree-id44 . -4) (undo-tree-id45 . -4) (undo-tree-id46 . -4) (undo-tree-id47 . -4) (undo-tree-id48 . -4) (undo-tree-id49 . -4) (undo-tree-id50 . -4) (undo-tree-id51 . -4) (undo-tree-id52 . -4) (undo-tree-id53 . -4) (undo-tree-id54 . -4) (undo-tree-id55 . -4) (undo-tree-id56 . -4) (undo-tree-id57 . -4) (undo-tree-id58 . -4) (undo-tree-id59 . -4) (undo-tree-id60 . -4) (undo-tree-id61 . -4) (undo-tree-id62 . -4) (undo-tree-id63 . -4) (undo-tree-id64 . -4) (undo-tree-id65 . -4) (undo-tree-id66 . -4) (undo-tree-id67 . -4) (undo-tree-id68 . -4) (undo-tree-id69 . -4) (undo-tree-id70 . -4) (undo-tree-id71 . -4) (undo-tree-id72 . -4) (undo-tree-id73 . -4) (undo-tree-id74 . -4) (undo-tree-id75 . -4) (undo-tree-id76 . -4) (undo-tree-id77 . -4) (undo-tree-id78 . -4) (undo-tree-id79 . -4) (undo-tree-id80 . -4) (undo-tree-id81 . -4) (undo-tree-id82 . -4) (undo-tree-id83 . -4) (undo-tree-id84 . -4) (undo-tree-id85 . -4) (undo-tree-id86 . -4) (undo-tree-id87 . -4) (undo-tree-id88 . -4) (undo-tree-id89 . -4) (undo-tree-id90 . -4) (undo-tree-id91 . -4) (undo-tree-id92 . -4) (undo-tree-id93 . -4) (undo-tree-id94 . -4) (undo-tree-id95 . -4) (undo-tree-id96 . -4) (undo-tree-id97 . -4) (undo-tree-id98 . -4) (undo-tree-id99 . -4) (undo-tree-id100 . -4) (undo-tree-id101 . -4) (undo-tree-id102 . -4) (undo-tree-id103 . -4) (undo-tree-id104 . -4) (undo-tree-id105 . -4) (undo-tree-id106 . -4) (undo-tree-id107 . -4) (undo-tree-id108 . -4) (undo-tree-id109 . -4) (undo-tree-id110 . -4) (undo-tree-id111 . -4) (undo-tree-id112 . -4) (undo-tree-id113 . -4) (undo-tree-id114 . -4) (undo-tree-id115 . -4) (undo-tree-id116 . -4) 932) nil (25192 6609 704535 0) 0 nil])
([nil nil ((#("get_latest_price()" 0 16 (fontified t) 16 17 (fontified t face (rainbow-delimiters-depth-1-face)) 17 18 (fontified t face (rainbow-delimiters-depth-1-face))) . 835) (t 25192 6609 706496 97000)) nil (25192 6623 515890 0) 0 nil])
([nil nil ((451 . 456) (t 25192 6623 517825 580000)) nil (25192 6942 208763 0) 0 nil])
([nil nil ((456 . 459)) nil (25192 6942 208762 0) 0 nil])
([nil nil ((459 . 464)) nil (25192 6942 208758 0) 0 nil])
([nil nil ((#("price = strategy." 0 5 (fontified t face font-lock-variable-name-face) 5 17 (fontified t)) . 831) (undo-tree-id452 . -17) (undo-tree-id453 . -17) (undo-tree-id454 . -17) (undo-tree-id455 . -17) (undo-tree-id456 . -17) (undo-tree-id457 . -17) (undo-tree-id458 . -17) (undo-tree-id459 . -17) (undo-tree-id460 . -17) (undo-tree-id461 . -17) (undo-tree-id462 . -17) (undo-tree-id463 . -17) (undo-tree-id464 . -17) (undo-tree-id465 . -17) (undo-tree-id466 . -17) (undo-tree-id467 . -17) (t 25192 6942 212045 203000)) nil (25192 7057 879648 0) 0 nil])
([nil nil ((#("def test_eth_flashloan(accounts, ETH, flashloan_v1):" 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t) 4 22 (fontified t face font-lock-function-name-face) 22 23 (fontified t face (rainbow-delimiters-depth-1-face)) 23 40 (fontified t) 40 50 (fontified t) 50 51 (fontified t face (rainbow-delimiters-depth-1-face)) 51 52 (fontified t)) . 908) (undo-tree-id448 . -19) (undo-tree-id449 . -19) (undo-tree-id450 . -23) (undo-tree-id451 . -52)) nil (25192 7057 879642 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 908) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1)) nil (25192 7057 879640 0) 0 nil])
([nil nil ((#("    \"\"\"" 0 1 (fontified t ws-butler-chg delete) 1 4 (fontified t) 4 5 (fontified t syntax-table (15) face font-lock-string-face) 5 7 (fontified t face font-lock-string-face)) . 908)) nil (25192 7057 879636 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 908) (undo-tree-id441 . -1)) nil (25192 7057 879636 0) 0 nil])
([nil nil ((#("    Test a flashloan that borrows Ethereum." 0 1 (fontified t ws-butler-chg delete) 1 43 (fontified t)) . 908) (undo-tree-id440 . -14)) nil (25192 7057 879635 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 908) (undo-tree-id439 . -1)) nil (25192 7057 879634 0) 0 nil])
([nil nil ((#("    \"\"\"" 0 1 (fontified t ws-butler-chg delete) 1 4 (fontified t) 4 5 (fontified t syntax-table (15) face font-lock-string-face) 5 6 (fontified t face font-lock-string-face) 6 7 (fontified t face font-lock-string-face)) . 908)) nil (25192 7057 879633 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 908) (undo-tree-id438 . -1)) nil (25192 7057 879632 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 908) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1)) nil (25192 7057 879631 0) 0 nil])
([nil nil ((#("    # transfer ether to the flashloan contract" 0 1 (fontified t ws-butler-chg delete) 1 4 (fontified t) 4 6 (fontified t face font-lock-comment-delimiter-face) 6 46 (fontified t face font-lock-comment-face)) . 908)) nil (25192 7057 879625 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 908) (undo-tree-id432 . -1) (undo-tree-id433 . -1)) nil (25192 7057 879625 0) 0 nil])
([nil nil ((#("    accounts[0].transfer(flashloan_v1, \"2 ether\")" 0 1 (fontified t ws-butler-chg delete) 1 12 (fontified t) 12 13 (fontified t face (rainbow-delimiters-depth-1-face)) 13 14 (fontified t) 14 15 (fontified t face (rainbow-delimiters-depth-1-face)) 15 24 (fontified t) 24 25 (fontified t face (rainbow-delimiters-depth-1-face)) 25 30 (fontified t) 30 39 (fontified t) 39 48 (fontified t face font-lock-string-face) 48 49 (fontified t face (rainbow-delimiters-depth-1-face))) . 908)) nil (25192 7057 879623 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 908) (undo-tree-id431 . -1)) nil (25192 7057 879623 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 908) (undo-tree-id430 . -1)) nil (25192 7057 879622 0) 0 nil])
([nil nil ((#("    flashloan_v1.flashloan(ETH, {\"from\": accounts[0]})" 0 1 (fontified t ws-butler-chg delete) 1 26 (fontified t) 26 27 (fontified t face (rainbow-delimiters-depth-1-face)) 27 32 (fontified t) 32 33 (fontified t face (rainbow-delimiters-depth-2-face)) 33 39 (fontified t face font-lock-string-face) 39 49 (fontified t) 49 50 (fontified t face (rainbow-delimiters-depth-3-face)) 50 51 (fontified t) 51 52 (fontified t face (rainbow-delimiters-depth-3-face)) 52 53 (fontified t face (rainbow-delimiters-depth-2-face)) 53 54 (fontified t face (rainbow-delimiters-depth-1-face))) . 908)) nil (25192 7057 879621 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 908) (undo-tree-id429 . -1)) nil (25192 7057 879620 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 908) (undo-tree-id428 . -1)) nil (25192 7057 879619 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 908) (undo-tree-id427 . -1)) nil (25192 7057 879618 0) 0 nil])
([nil nil ((#("def test_dai_flashloan(Contract, accounts, DAI, flashloan_v1):" 0 1 (fontified t ws-butler-chg delete face font-lock-keyword-face) 1 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t) 4 22 (fontified t face font-lock-function-name-face) 22 23 (fontified t face (rainbow-delimiters-depth-1-face)) 23 60 (fontified t) 60 61 (fontified t face (rainbow-delimiters-depth-1-face)) 61 62 (fontified t)) . 908) (undo-tree-id423 . -23) (undo-tree-id424 . -62) (undo-tree-id425 . -33) (undo-tree-id426 . -62)) nil (25192 7057 879617 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 908) (undo-tree-id422 . -1)) nil (25192 7057 879615 0) 0 nil])
([nil nil ((#("    \"\"\"" 0 1 (fontified t ws-butler-chg delete) 1 4 (fontified t) 4 5 (fontified t syntax-table (15) face font-lock-string-face) 5 6 (fontified t face font-lock-string-face) 6 7 (fontified t face font-lock-string-face)) . 908) (undo-tree-id406 . -7) (undo-tree-id407 . -7) (undo-tree-id408 . -7) (undo-tree-id409 . -7) (undo-tree-id410 . -7) (undo-tree-id411 . -7) (undo-tree-id412 . -7) (undo-tree-id413 . -7) (undo-tree-id414 . -7) (undo-tree-id415 . -7) (undo-tree-id416 . -7) (undo-tree-id417 . -7) (undo-tree-id418 . -7) (undo-tree-id419 . -7) (undo-tree-id420 . -7) (undo-tree-id421 . -7)) nil (25192 7057 879614 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 908) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1)) nil (25192 7057 879607 0) 0 nil])
([nil nil ((#("    Test a flashloan that borrows DAI." 0 1 (fontified t ws-butler-chg delete) 1 38 (fontified t)) . 908)) nil (25192 7057 879605 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 908) (undo-tree-id402 . -1)) nil (25192 7057 879604 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 908) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1)) nil (25192 7057 879603 0) 0 nil])
([nil nil ((#("    To use a different asset, swap DAI with any of the fixture names in " 0 1 (fontified t ws-butler-chg delete) 1 39 (fontified t) 39 43 (fontified t face font-lock-keyword-face) 43 44 (fontified t) 44 47 (fontified t face font-lock-builtin-face) 47 69 (fontified t) 69 71 (fontified t face font-lock-keyword-face) 71 72 (fontified t)) . 908)) nil (25192 7057 879601 0) 0 nil])
([nil nil ((#("`tests/conftest.py`" 0 1 (fontified t ws-butler-chg delete) 1 19 (fontified t)) . 908) (undo-tree-id397 . -7) (undo-tree-id398 . -19)) nil (25192 7057 879600 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 908) (undo-tree-id396 . -1)) nil (25192 7057 879599 0) 0 nil])
([nil nil ((#("    \"\"\"" 0 1 (fontified t ws-butler-chg delete) 1 4 (fontified t) 4 5 (fontified t syntax-table (15) face font-lock-string-face) 5 6 (fontified t face font-lock-string-face) 6 7 (fontified t face font-lock-string-face)) . 908)) nil (25192 7057 879598 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 908) (undo-tree-id395 . -1)) nil (25192 7057 879598 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 908) (undo-tree-id394 . -1)) nil (25192 7057 879597 0) 0 nil])
([nil nil ((#("    # purchase DAI on uniswap" 0 1 (fontified t ws-butler-chg delete) 1 4 (fontified t) 4 6 (fontified t face font-lock-comment-delimiter-face) 6 18 (fontified t face font-lock-comment-face) 18 29 (fontified t face font-lock-comment-face)) . 908)) nil (25192 7057 879596 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 908) (undo-tree-id393 . -1)) nil (25192 7057 879595 0) 0 nil])
([nil nil ((#("    uniswap_dai = " 0 1 (fontified t ws-butler-chg delete) 1 4 (fontified t) 4 15 (fontified t face font-lock-variable-name-face) 15 18 (fontified t)) . 908)) nil (25192 7057 879594 0) 0 nil])
([nil nil ((#("Contract.from_explorer(\"0x2a1530C4C41db0B0b2bB646CB5Eb1A67b7158667\")" 0 1 (fontified t ws-butler-chg delete) 1 22 (fontified t) 22 23 (fontified t face (rainbow-delimiters-depth-1-face)) 23 24 (fontified t face font-lock-string-face) 24 67 (fontified t face font-lock-string-face) 67 68 (fontified t face (rainbow-delimiters-depth-1-face))) . 908) (undo-tree-id386 . -27) (undo-tree-id387 . -27) (undo-tree-id388 . -27) (undo-tree-id389 . -27) (undo-tree-id390 . -27) (undo-tree-id391 . -61) (undo-tree-id392 . -68)) nil (25192 7057 879593 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 908) (undo-tree-id385 . -1)) nil (25192 7057 879590 0) 0 nil])
([nil nil ((#("    uniswap_dai.ethToTokenSwapInput(" 0 1 (fontified t ws-butler-chg delete) 1 35 (fontified t) 35 36 (fontified t face (rainbow-delimiters-depth-1-face))) . 908)) nil (25192 7057 879589 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 908) (undo-tree-id384 . -1)) nil (25192 7057 879588 0) 0 nil])
([nil nil ((#("        1, 10000000000, {\"from\": accounts[0], \"value\": \"2 ether\"}" 0 1 (fontified t ws-butler-chg delete) 1 24 (fontified t) 24 25 (fontified t face (rainbow-delimiters-depth-1-face)) 25 31 (fontified t face font-lock-string-face) 31 41 (fontified t) 41 42 (fontified t face (rainbow-delimiters-depth-2-face)) 42 43 (fontified t) 43 44 (fontified t face (rainbow-delimiters-depth-2-face)) 44 46 (fontified t) 46 53 (fontified t face font-lock-string-face) 53 55 (fontified t) 55 64 (fontified t face font-lock-string-face) 64 65 (fontified t face (rainbow-delimiters-depth-1-face))) . 908)) nil (25192 7057 879587 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 908) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1)) nil (25192 7057 879586 0) 0 nil])
([nil nil ((#("    )" 0 1 (fontified t ws-butler-chg delete) 1 4 (fontified t) 4 5 (fontified t face (rainbow-delimiters-unmatched-face))) . 908) (undo-tree-id371 . -5) (undo-tree-id372 . -5) (undo-tree-id373 . -5) (undo-tree-id374 . -5) (undo-tree-id375 . -5) (undo-tree-id376 . -5) (undo-tree-id377 . -5) (undo-tree-id378 . -5) (undo-tree-id379 . -5) (undo-tree-id380 . -5)) nil (25192 7057 879584 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 908) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1)) nil (25192 7057 879580 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 908) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1)) nil (25192 7057 879578 0) 0 nil])
([nil nil ((#("    # transfer DAI to the flashloan contract" 0 1 (fontified t ws-butler-chg delete) 1 3 (fontified t) 3 4 (fontified t) 4 6 (fontified t face font-lock-comment-delimiter-face) 6 44 (fontified t face font-lock-comment-face)) . 908) (undo-tree-id362 . -44)) nil (25192 7057 879575 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 908) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1)) nil (25192 7057 879574 0) 0 nil])
([nil nil ((#("    balance = DAI.balanceOf(accounts[0])" 0 1 (fontified t ws-butler-chg delete) 1 4 (fontified t) 4 11 (fontified t face font-lock-variable-name-face) 11 27 (fontified t) 27 28 (fontified t face (rainbow-delimiters-depth-1-face)) 28 36 (fontified t) 36 37 (fontified t face (rainbow-delimiters-depth-2-face)) 37 38 (fontified t) 38 39 (fontified t face (rainbow-delimiters-depth-2-face)) 39 40 (fontified t face (rainbow-delimiters-depth-1-face))) . 908) (undo-tree-id357 . -40)) nil (25192 7057 879571 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 908) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1)) nil (25192 7057 879570 0) 0 nil])
([nil nil ((#("    DAI.transfer(flashloan_v1, balance, {\"from\": accounts[0]})" 0 1 (fontified t ws-butler-chg delete) 1 16 (fontified t) 16 17 (fontified t face (rainbow-delimiters-depth-1-face)) 17 40 (fontified t) 40 41 (fontified t face (rainbow-delimiters-depth-2-face)) 41 47 (fontified t face font-lock-string-face) 47 57 (fontified t) 57 58 (fontified t face (rainbow-delimiters-depth-3-face)) 58 59 (fontified t) 59 60 (fontified t face (rainbow-delimiters-depth-3-face)) 60 61 (fontified t face (rainbow-delimiters-depth-2-face)) 61 62 (fontified t face (rainbow-delimiters-depth-1-face))) . 908) (undo-tree-id350 . -4) (undo-tree-id351 . -4) (undo-tree-id352 . -62)) nil (25192 7057 879568 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 908) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1)) nil (25192 7057 879566 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 908) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1)) nil (25192 7057 879564 0) 0 nil])
([nil nil ((#("    flashloan_v1.flashloan(DAI, {\"from\": accounts[0]})" 0 1 (fontified t ws-butler-chg delete) 1 26 (fontified t) 26 27 (fontified t face (rainbow-delimiters-depth-1-face)) 27 32 (fontified t) 32 33 (fontified t face (rainbow-delimiters-depth-2-face)) 33 39 (fontified t face font-lock-string-face) 39 49 (fontified t) 49 50 (fontified t face (rainbow-delimiters-depth-3-face)) 50 51 (fontified t) 51 52 (fontified t face (rainbow-delimiters-depth-3-face)) 52 53 (fontified t face (rainbow-delimiters-depth-2-face)) 53 54 (fontified t face (rainbow-delimiters-depth-1-face))) . 908) (undo-tree-id339 . -4) (undo-tree-id340 . -4) (undo-tree-id341 . -54)) nil (25192 7057 879561 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 908) (undo-tree-id337 . -1) (undo-tree-id338 . -1)) nil (25192 7057 879559 0) 0 nil])
([nil nil ((#("

" 0 1 (fontified t) 1 2 (fontified t)) . 902) (undo-tree-id117 . -2) (undo-tree-id118 . -2) (undo-tree-id119 . -2) (undo-tree-id120 . -2) (undo-tree-id121 . -2) (undo-tree-id122 . -2) (undo-tree-id123 . -2) (undo-tree-id124 . -2) (undo-tree-id125 . -2) (undo-tree-id126 . -2) (undo-tree-id127 . -2) (undo-tree-id128 . -2) (undo-tree-id129 . -2) (undo-tree-id130 . -2) (undo-tree-id131 . -2) (undo-tree-id132 . -2) (undo-tree-id133 . -2) (undo-tree-id134 . -2) (undo-tree-id135 . -2) (undo-tree-id136 . -2) (undo-tree-id137 . -2) (undo-tree-id138 . -2) (undo-tree-id139 . -2) (undo-tree-id140 . -2) (undo-tree-id141 . -2) (undo-tree-id142 . -2) (undo-tree-id143 . -2) (undo-tree-id144 . -2) (undo-tree-id145 . -2) (undo-tree-id146 . -2) (undo-tree-id147 . -2) (undo-tree-id148 . -2) (undo-tree-id149 . -2) (undo-tree-id150 . -2) (undo-tree-id151 . -2) (undo-tree-id152 . -2) (undo-tree-id153 . -2) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -2) (undo-tree-id157 . -2) (undo-tree-id158 . -2) (undo-tree-id159 . -2) (undo-tree-id160 . -2) (undo-tree-id161 . -2) (undo-tree-id162 . -2) (undo-tree-id163 . -2) (undo-tree-id164 . -2) (undo-tree-id165 . -2) (undo-tree-id166 . -2) (undo-tree-id167 . -2) (undo-tree-id168 . -2) (undo-tree-id169 . -2) (undo-tree-id170 . -2) (undo-tree-id171 . -2) (undo-tree-id172 . -2) (undo-tree-id173 . -2) (undo-tree-id174 . -2) (undo-tree-id175 . -2) (undo-tree-id176 . -2) (undo-tree-id177 . -2) (undo-tree-id178 . -2) (undo-tree-id179 . -2) (undo-tree-id180 . -2) (undo-tree-id181 . -2) (undo-tree-id182 . -2) (undo-tree-id183 . -2) (undo-tree-id184 . -2) (undo-tree-id185 . -2) (undo-tree-id186 . -2) (undo-tree-id187 . -2) (undo-tree-id188 . -2) (undo-tree-id189 . -2) (undo-tree-id190 . -2) (undo-tree-id191 . -2) (undo-tree-id192 . -2) (undo-tree-id193 . -2) (undo-tree-id194 . -2) (undo-tree-id195 . -2) (undo-tree-id196 . -2) (undo-tree-id197 . -2) (undo-tree-id198 . -2) (undo-tree-id199 . -2) (undo-tree-id200 . -2) (undo-tree-id201 . -2) (undo-tree-id202 . -2) (undo-tree-id203 . -2) (undo-tree-id204 . -2) (undo-tree-id205 . -2) (undo-tree-id206 . -2) (undo-tree-id207 . -2) (undo-tree-id208 . -2) (undo-tree-id209 . -2) (undo-tree-id210 . -2) (undo-tree-id211 . -2) (undo-tree-id212 . -2) (undo-tree-id213 . -2) (undo-tree-id214 . -2) (undo-tree-id215 . -2) (undo-tree-id216 . -2) (undo-tree-id217 . -2) (undo-tree-id218 . -2) (undo-tree-id219 . -2) (undo-tree-id220 . -2) (undo-tree-id221 . -2) (undo-tree-id222 . -2) (undo-tree-id223 . -2) (undo-tree-id224 . -2) (undo-tree-id225 . -2) (undo-tree-id226 . -2) (undo-tree-id227 . -2) (undo-tree-id228 . -2) (undo-tree-id229 . -2) (undo-tree-id230 . -2) (undo-tree-id231 . -2) (undo-tree-id232 . -2) (undo-tree-id233 . -2) (undo-tree-id234 . -2) (undo-tree-id235 . -2) (undo-tree-id236 . -2) (undo-tree-id237 . -2) (undo-tree-id238 . -2) (undo-tree-id239 . -2) (undo-tree-id240 . -2) (undo-tree-id241 . -2) (undo-tree-id242 . -2) (undo-tree-id243 . -2) (undo-tree-id244 . -2) (undo-tree-id245 . -2) (undo-tree-id246 . -2) (undo-tree-id247 . -2) (undo-tree-id248 . -2) (undo-tree-id249 . -2) (undo-tree-id250 . -2) (undo-tree-id251 . -2) (undo-tree-id252 . -2) (undo-tree-id253 . -2) (undo-tree-id254 . -2) (undo-tree-id255 . -2) (undo-tree-id256 . -2) (undo-tree-id257 . -2) (undo-tree-id258 . -2) (undo-tree-id259 . -2) (undo-tree-id260 . -2) (undo-tree-id261 . -2) (undo-tree-id262 . -2) (undo-tree-id263 . -2) (undo-tree-id264 . -2) (undo-tree-id265 . -2) (undo-tree-id266 . -2) (undo-tree-id267 . -2) (undo-tree-id268 . -2) (undo-tree-id269 . -2) (undo-tree-id270 . -2) (undo-tree-id271 . -2) (undo-tree-id272 . -2) (undo-tree-id273 . -2) (undo-tree-id274 . -2) (undo-tree-id275 . -2) (undo-tree-id276 . -2) (undo-tree-id277 . -2) (undo-tree-id278 . -2) (undo-tree-id279 . -2) (undo-tree-id280 . -2) (undo-tree-id281 . -2) (undo-tree-id282 . -2) (undo-tree-id283 . -2) (undo-tree-id284 . -2) (undo-tree-id285 . -2) (undo-tree-id286 . -2) (undo-tree-id287 . -2) (undo-tree-id288 . -2) (undo-tree-id289 . -2) (undo-tree-id290 . -2) (undo-tree-id291 . -2) (undo-tree-id292 . -2) (undo-tree-id293 . -2) (undo-tree-id294 . -2) (undo-tree-id295 . -2) (undo-tree-id296 . -2) (undo-tree-id297 . -2) (undo-tree-id298 . -2) (undo-tree-id299 . -2) (undo-tree-id300 . -2) (undo-tree-id301 . -1) (undo-tree-id302 . -2) (undo-tree-id303 . -1) (undo-tree-id304 . -2) (undo-tree-id305 . -1) (undo-tree-id306 . -2) (undo-tree-id307 . -1) (undo-tree-id308 . -2) (undo-tree-id309 . -1) (undo-tree-id310 . -2) (undo-tree-id311 . -2) (undo-tree-id312 . -2) (undo-tree-id313 . -2) (undo-tree-id314 . -2) (undo-tree-id315 . -2) (undo-tree-id316 . -2) (undo-tree-id317 . -2) (undo-tree-id318 . -2) (undo-tree-id319 . -2) (#("    " 0 4 (fontified t)) . 827) (undo-tree-id320 . -4) (undo-tree-id321 . -4) (undo-tree-id322 . -4) (undo-tree-id323 . -4) (undo-tree-id324 . -4) (undo-tree-id325 . -4) (undo-tree-id326 . -4) (undo-tree-id327 . -4) (undo-tree-id328 . -4) (undo-tree-id329 . -4) (undo-tree-id330 . -4) (undo-tree-id331 . -4) (undo-tree-id332 . -4) (undo-tree-id333 . -4) (undo-tree-id334 . -4) (undo-tree-id335 . -4) (undo-tree-id336 . -4) 908) nil (25192 7057 879552 0) 0 nil])
([nil nil ((#("assert isinstance(price, int)" 0 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t) 7 17 (fontified t face font-lock-builtin-face) 17 18 (fontified t face (rainbow-delimiters-depth-1-face)) 18 25 (fontified t) 25 28 (fontified t face font-lock-builtin-face) 28 29 (fontified t face (rainbow-delimiters-depth-1-face))) . 872) (t 25192 7057 883344 111000)) nil (25192 7092 843540 0) 0 nil])
([nil nil ((#("# check that the price is a number" 0 2 (fontified t face font-lock-comment-delimiter-face) 2 34 (fontified t face font-lock-comment-face)) . 833)) nil (25192 7092 843539 0) 0 nil])
([nil nil ((826 . 831)) nil (25192 7092 843538 0) 0 nil])
([nil nil ((#("




" 0 1 (fontified nil ws-butler-chg delete) 1 2 (fontified t) 2 3 (fontified t) 3 4 (ws-butler-chg delete fontified nil) 4 5 (ws-butler-chg delete fontified nil)) . 827) (undo-tree-id468 . -5) (undo-tree-id469 . -5) (undo-tree-id470 . -5) (undo-tree-id471 . -5) (undo-tree-id472 . -5) (undo-tree-id473 . -5) (undo-tree-id474 . -5) (undo-tree-id475 . -5) (undo-tree-id476 . -5) (undo-tree-id477 . -5) (undo-tree-id478 . -5) (undo-tree-id479 . -5) (undo-tree-id480 . -5) (undo-tree-id481 . -5) (undo-tree-id482 . -5) (undo-tree-id483 . -5) (undo-tree-id484 . -5) (undo-tree-id485 . -5) (undo-tree-id486 . -5) (undo-tree-id487 . -5) (undo-tree-id488 . -5) (undo-tree-id489 . -5) (undo-tree-id490 . -5) (undo-tree-id491 . -5) (undo-tree-id492 . -5) (undo-tree-id493 . -5) (undo-tree-id494 . -5) (undo-tree-id495 . -5) (undo-tree-id496 . -5) (undo-tree-id497 . -5) (undo-tree-id498 . -5) (undo-tree-id499 . -5) (undo-tree-id500 . -5) (undo-tree-id501 . -5) (undo-tree-id502 . -5) (undo-tree-id503 . -5) (undo-tree-id504 . -5) (undo-tree-id505 . -4) (undo-tree-id506 . -4) (undo-tree-id507 . -2) (undo-tree-id508 . -2) (undo-tree-id509 . -3) (undo-tree-id510 . -3) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -5) (undo-tree-id514 . -5) (undo-tree-id515 . -5) (undo-tree-id516 . -5) (undo-tree-id517 . -5) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -5) (undo-tree-id535 . -5) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -4) (undo-tree-id539 . -4) (undo-tree-id540 . -3) (undo-tree-id541 . -3) (undo-tree-id542 . -3) (undo-tree-id543 . -3) (undo-tree-id544 . -4) (undo-tree-id545 . -4) (#("    " 0 4 (fontified t)) . 831) (undo-tree-id546 . -4) (#("    " 0 4 (fontified t)) . 830) (undo-tree-id547 . -4) (#("    " 0 4 (fontified t ws-butler-chg chg)) . 827) (undo-tree-id548 . -4)) nil (25192 7092 843534 0) 0 nil])
([nil nil ((#("ERC20TokenFactory," 0 18 (fontified t)) . 522) (t 25192 7092 845936 939000)) nil (25192 7228 869397 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 522) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1)) nil (25192 7228 869396 0) 0 nil])
([nil nil ((#("    AddressArray," 0 1 (fontified t ws-butler-chg delete) 1 17 (fontified t)) . 522)) nil (25192 7228 869394 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 522) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1)) nil (25192 7228 869394 0) 0 nil])
([nil nil ((#("    ERC20Token," 0 1 (fontified t ws-butler-chg delete) 1 15 (fontified t)) . 522)) nil (25192 7228 869392 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 522) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1)) nil (25192 7228 869391 0) 0 nil])
([nil nil ((#("    TrustListFactory," 0 1 (fontified t ws-butler-chg delete) 1 21 (fontified t)) . 522)) nil (25192 7228 869390 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 522) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1)) nil (25192 7228 869389 0) 0 nil])
([nil nil ((#("    TrustList," 0 1 (fontified t ws-butler-chg delete) 1 14 (fontified t)) . 522)) nil (25192 7228 869387 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 518) (undo-tree-id549 . -4) (undo-tree-id550 . -4) (undo-tree-id551 . -4) (undo-tree-id552 . -4) (undo-tree-id553 . -4) (undo-tree-id554 . -4) (undo-tree-id555 . -4) (undo-tree-id556 . -4) (undo-tree-id557 . -4) (undo-tree-id558 . -4) (undo-tree-id559 . -4) (undo-tree-id560 . -4) (undo-tree-id561 . -4) (undo-tree-id562 . -4) (undo-tree-id563 . -4) (undo-tree-id564 . -4) (undo-tree-id565 . -4) (undo-tree-id566 . -4) (undo-tree-id567 . -4) (undo-tree-id568 . -4) (undo-tree-id569 . -4) (undo-tree-id570 . -4) (undo-tree-id571 . -4) (undo-tree-id572 . -4) (undo-tree-id573 . -4) (undo-tree-id574 . -4) (undo-tree-id575 . -4) (undo-tree-id576 . -4) (undo-tree-id577 . -4) 522) nil (25192 7228 869383 0) 0 nil])
([nil nil ((517 . 522) (t 25192 7228 871749 111000)) nil (25192 7236 896716 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 538 . 539) (nil fontified nil 522 . 539) (522 . 539)) nil (25192 7236 896712 0) 0 nil])
([nil nil ((755 . 760) (t 25192 7236 899275 972000)) nil (25192 7277 337056 0) 0 nil])
([nil nil ((760 . 766)) nil (25192 7277 337055 0) 0 nil])
([nil nil ((760 . 777) (#("va" 0 2 (fontified nil ws-butler-chg chg)) . -760) (760 . 762) (#("VariableDebtToken" 0 17 (fontified nil ws-butler-chg chg)) . -760) (760 . 777) (#("variab" 0 6 (fontified t ws-butler-chg chg)) . -760) (undo-tree-id602 . -6) (undo-tree-id603 . -6) 766) nil (25192 7277 337054 0) 0 nil])
([nil nil ((#("V" 0 1 (fontified t ws-butler-chg chg)) . -760) (undo-tree-id601 . -1) 761) nil (25192 7277 337052 0) 0 nil])
([nil nil ((#("D" 0 1 (fontified t ws-butler-chg chg)) . -768) (undo-tree-id600 . -1) (760 . 761)) nil (25192 7277 337050 0) 0 nil])
([nil nil ((#("T" 0 1 (fontified t ws-butler-chg chg)) . -772) (undo-tree-id599 . -1) (768 . 769)) nil (25192 7277 337049 0) 0 nil])
([nil nil ((772 . 773)) nil (25192 7277 337048 0) 0 nil])
([nil nil ((777 . 779) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -777) (undo-tree-id598 . -1) (777 . 778)) nil (25192 7277 337047 0) 0 nil])
([nil nil ((779 . 784)) nil (25192 7277 337046 0) 0 nil])
([nil nil ((784 . 814)) nil (25192 7277 337045 0) 0 nil])
([nil nil ((#("VariableDebtToken" 0 17 (fontified t ws-butler-chg chg face font-lock-string-face)) . 795) (undo-tree-id590 . -17) (undo-tree-id591 . 17) (undo-tree-id592 . -17) (undo-tree-id593 . -15) (undo-tree-id594 . -15) (undo-tree-id595 . -17) (undo-tree-id596 . 17) (undo-tree-id597 . -17)) nil (25192 7277 337042 0) 0 nil])
([nil nil ((798 . 799) 795 (t 25192 7277 339609 972000)) nil (25192 7280 891814 0) 0 nil])
([nil nil ((799 . 800) 798) nil (25192 7280 891813 0) 0 nil])
([nil nil ((#("

" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg)) . 798) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . 1) (undo-tree-id624 . 1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) 799) nil (25192 7280 891808 0) 0 nil])
([nil nil ((798 . 799) (t 25192 7280 894339 553000)) nil (25192 7292 15580 0) 0 nil])
([nil nil ((799 . 800) 798) nil (25192 7292 15579 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 817 . 818) (nil fontified nil 795 . 818) (795 . 818)) nil (25192 7292 15578 0) 0 nil])
([nil nil ((#("

" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg)) . 821) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -2) 818) nil (25192 7292 15574 0) 0 nil])
([nil nil ((821 . 822) (t 25192 7292 18516 397000)) nil (25192 7308 260423 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . 821) (undo-tree-id710 . 1) (undo-tree-id711 . 1) (undo-tree-id712 . -1)) nil (25192 7308 260419 0) 0 nil])
([nil nil ((821 . 822) (t 25192 7308 301676 161000)) nil (25192 7322 937136 0) 0 nil])
([nil nil ((820 . 825)) nil (25192 7322 937135 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 948 . 949) (nil fontified nil 948 . 949) (nil fontified nil 947 . 948) (nil fontified nil 938 . 947) (nil fontified nil 933 . 938) (nil fontified nil 917 . 933) (nil fontified nil 916 . 917) (nil fontified nil 915 . 916) (nil fontified nil 914 . 915) (nil fontified nil 907 . 914) (nil fontified nil 894 . 907) (nil fontified nil 893 . 894) (nil fontified nil 875 . 893) (nil fontified nil 874 . 875) (nil fontified nil 851 . 874) (nil fontified nil 850 . 851) (nil fontified nil 825 . 850) (825 . 949)) nil (25192 7322 937134 0) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg chg fontified t)) . 950) 949) nil (25192 7322 937128 0) 0 nil])
([nil nil ((822 . 826) (#("            " 0 4 (fontified nil) 4 12 (fontified nil)) . 821) (undo-tree-id713 . -4) (undo-tree-id714 . -12) (undo-tree-id715 . -4) (undo-tree-id716 . -4) (undo-tree-id717 . -10) (undo-tree-id718 . -10) (undo-tree-id719 . -10) (undo-tree-id720 . -10) (undo-tree-id721 . -10) (undo-tree-id722 . -10) (undo-tree-id723 . -10) (undo-tree-id724 . -11) (undo-tree-id725 . -10) (undo-tree-id726 . -11) (undo-tree-id727 . -11) (undo-tree-id728 . -11) (undo-tree-id729 . -11) (undo-tree-id730 . -11) (undo-tree-id731 . -11) (undo-tree-id732 . -12) (undo-tree-id733 . -11) (undo-tree-id734 . -12) (undo-tree-id735 . -12) (undo-tree-id736 . -12) (undo-tree-id737 . -12) (undo-tree-id738 . -12) (undo-tree-id739 . -11) (undo-tree-id740 . -12) (undo-tree-id741 . -12) (undo-tree-id742 . -12) (undo-tree-id743 . -12) (undo-tree-id744 . -12) (undo-tree-id745 . -12) (undo-tree-id746 . -12) (undo-tree-id747 . -12) (833 . 834) (t 25192 7322 939804 607000)) nil (25192 7325 925097 0) 0 nil])
([nil nil ((#("VariableDebtToken" 0 17 (fontified t)) . 826) (t 25192 7325 927852 58000)) nil (25192 7340 838036 0) 0 nil])
([nil nil ((#("(" 0 1 (fontified t ws-butler-chg delete face (rainbow-delimiters-depth-1-face))) . 826) (undo-tree-id758 . 1) (undo-tree-id759 . -1)) nil (25192 7340 838035 0) 0 nil])
([nil nil ((#("variableDebtWethAddress" 0 1 (fontified t ws-butler-chg delete) 1 23 (fontified t)) . 826) (undo-tree-id754 . -23) (undo-tree-id755 . -10) (undo-tree-id756 . -10) (undo-tree-id757 . -23)) nil (25192 7340 838033 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified t ws-butler-chg delete face (rainbow-delimiters-unmatched-face))) . -826) (undo-tree-id748 . -1) (undo-tree-id749 . 1) (undo-tree-id750 . -1) (undo-tree-id751 . 1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) 827) nil (25192 7340 838030 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 842 . 843) (nil fontified nil 840 . 843) (nil fontified nil 839 . 840) (nil fontified nil 836 . 839) (nil fontified nil 835 . 836) (nil fontified nil 828 . 835) (nil fontified nil 827 . 828) (nil fontified nil 826 . 827) (826 . 843)) nil (25192 7340 838016 0) 0 nil])
([nil nil ((884 . 893) (#(")," 0 1 (fontified t face (rainbow-delimiters-depth-2-face)) 1 2 (fontified t)) . 884) (t 25192 7340 840848 535000)) nil (25192 7354 753101 0) 0 nil])
([nil nil ((#("strateg" 0 1 (fontified t) 1 7 (fontified t ws-butler-chg chg)) . -883) (undo-tree-id764 . -7) 890) nil (25192 7354 753100 0) 0 nil])
([nil nil ((#("address(" 0 7 (fontified t) 7 8 (fontified t face (rainbow-delimiters-depth-2-face))) . -875) (undo-tree-id762 . -8) (undo-tree-id763 . -8) 883) nil (25192 7354 753098 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified t ws-butler-chg delete face (rainbow-delimiters-depth-1-face))) . 875) (#("y" 0 1 (fontified t ws-butler-chg delete)) . 875) (undo-tree-id761 . -1)) nil (25192 7354 753096 0) 0 nil])
([nil nil ((875 . 892) (#("," 0 1 (fontified t ws-butler-chg delete)) . 875) (undo-tree-id760 . -1)) nil (25192 7354 753092 0) 0 nil])
([nil nil ((#("3 ether" 0 2 (fontified t) 2 7 (fontified t)) . 905) (undo-tree-id765 . -7) (undo-tree-id766 . -7) (t 25192 7354 755931 453000)) nil (25192 7365 139269 0) 0 nil])
([nil nil ((906 . 913) (905 . 907) (#("\"" 0 1 (fontified nil ws-butler-chg chg)) . -905) (905 . 906)) nil (25192 7365 139259 0) 0 nil])
([nil nil ((914 . 949) (t 25192 7365 142443 193000)) nil (25192 7371 119976 0) 0 nil])
([nil nil ((#(";" 0 1 (rear-nonsticky t fontified t)) . -959) (undo-tree-id767 . -1) (undo-tree-id768 . -1) 960 (t 25192 7371 122738 591000)) nil (25192 7378 206643 0) 0 nil])
([nil nil ((#("variableDebtWethAddress" 0 22 (fontified t face font-lock-string-face) 22 23 (fontified t rear-nonsticky t face font-lock-string-face)) . 795) (undo-tree-id769 . -23) (undo-tree-id770 . 23) (undo-tree-id771 . -23) (undo-tree-id772 . -23) (undo-tree-id773 . -23) (undo-tree-id774 . -23) (undo-tree-id775 . -23) (undo-tree-id776 . -23) (undo-tree-id777 . -23) (undo-tree-id778 . -23) (undo-tree-id779 . -23) (undo-tree-id780 . -23) (undo-tree-id781 . -23) (undo-tree-id782 . -23) (undo-tree-id783 . -23) (undo-tree-id784 . -23) (undo-tree-id785 . -23) (undo-tree-id786 . -23) (undo-tree-id787 . -23) (undo-tree-id788 . -23) (undo-tree-id789 . -23) (undo-tree-id790 . -23) (undo-tree-id791 . -23) (undo-tree-id792 . -23) (undo-tree-id793 . -23) (undo-tree-id794 . -23) (undo-tree-id795 . -23) (undo-tree-id796 . -22) (undo-tree-id797 . -23) (undo-tree-id798 . -22) (undo-tree-id799 . -22) (undo-tree-id800 . -22) (undo-tree-id801 . -22) (undo-tree-id802 . -22) (undo-tree-id803 . -22) (undo-tree-id804 . -22) (undo-tree-id805 . -22) (undo-tree-id806 . -22) (undo-tree-id807 . -22) (undo-tree-id808 . -22) (undo-tree-id809 . -22) (undo-tree-id810 . -22) (undo-tree-id811 . -22) (undo-tree-id812 . -22) (undo-tree-id813 . -22) (undo-tree-id814 . -22) (undo-tree-id815 . -21) (undo-tree-id816 . -22) (undo-tree-id817 . -21) (undo-tree-id818 . -21) (undo-tree-id819 . -21) (undo-tree-id820 . -21) (undo-tree-id821 . -21) (undo-tree-id822 . -21) (undo-tree-id823 . -21) (undo-tree-id824 . -20) (undo-tree-id825 . -21) (undo-tree-id826 . -20) (undo-tree-id827 . -20) (undo-tree-id828 . -20) (undo-tree-id829 . -20) (undo-tree-id830 . -20) (undo-tree-id831 . -20) (undo-tree-id832 . -20) (undo-tree-id833 . -20) (undo-tree-id834 . -20) (undo-tree-id835 . -20) (undo-tree-id836 . -20) (undo-tree-id837 . -20) (undo-tree-id838 . -20) (undo-tree-id839 . -20) (undo-tree-id840 . -20) (undo-tree-id841 . -20) (undo-tree-id842 . -20) (undo-tree-id843 . -20) (undo-tree-id844 . -23) (undo-tree-id845 . 23) (undo-tree-id846 . -23) 815 (t 25192 7378 209384 465000)) nil (25192 7395 907942 0) 0 nil])
([nil nil ((nil fontified nil 811 . 812) (nil fontified nil 809 . 811) (nil fontified nil 808 . 809) (nil fontified nil 805 . 808) (nil fontified nil 804 . 805) (nil fontified nil 797 . 804) (nil fontified nil 796 . 797) (nil fontified nil 795 . 796) (795 . 812)) nil (25192 7395 907902 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -778) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) 779 (t 25192 7395 911060 606000)) nil (25192 7403 993891 0) 0 nil])
([nil nil ((952 . 957) (t 25192 7403 997026 774000)) nil (25192 7427 899998 0) 0 nil])
([nil nil ((966 . 968) (#("[" 0 1 (fontified nil ws-butler-chg chg)) . -966) (957 . 967)) nil (25192 7427 899994 0) 0 nil])
([nil nil ((968 . 973) (t 25192 7427 902543 570000)) nil (25192 7450 916663 0) 0 nil])
([nil nil ((973 . 975)) nil (25192 7450 916662 0) 0 nil])
([nil nil ((975 . 980)) nil (25192 7450 916662 0) 0 nil])
([nil nil ((980 . 986) (#("append(object)" 0 14 (fontified nil ws-butler-chg chg)) . -980) (980 . 994)) nil (25192 7450 916660 0) 0 nil])
([nil nil ((986 . 988) (#("(" 0 1 (fontified nil ws-butler-chg chg)) . -986) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (986 . 987)) nil (25192 7450 916657 0) 0 nil])
([nil nil ((987 . 989) (#("\"" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face) ws-butler-chg chg)) . -987) (987 . 988) (t 25192 7450 919219 831000)) nil (25192 8066 499151 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1029 . 1030) (nil fontified nil 1029 . 1030) (nil fontified nil 988 . 1029) (988 . 1030)) nil (25192 8066 499150 0) 0 nil])
([nil nil ((1033 . 1034)) nil (25192 8066 499149 0) 0 nil])
([nil nil ((1032 . 1037)) nil (25192 8066 499149 0) 0 nil])
([nil nil ((1038 . 1043)) nil (25192 8066 499148 0) 0 nil])
([nil nil ((451 . 456)) nil (25192 8066 499148 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 458 . 459) (nil fontified nil 456 . 459) (456 . 459)) nil (25192 8066 499147 0) 0 nil])
([nil nil ((#("i" 0 1 (ws-butler-chg chg fontified t rear-nonsticky t)) . -458) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) 459) nil (25192 8066 499145 0) 0 nil])
([nil nil ((458 . 460)) nil (25192 8066 499120 0) 0 nil])
([nil nil ((#("


" 0 1 (fontified nil ws-butler-chg delete) 1 2 (ws-butler-chg chg fontified t) 2 3 (ws-butler-chg delete fontified nil)) . 1042) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -2) (undo-tree-id930 . -2) (#("    " 0 4 (ws-butler-chg chg fontified t)) . 1044) (undo-tree-id931 . -4) (#("    " 0 4 (ws-butler-chg chg fontified t)) . 1042) (undo-tree-id932 . -4) (undo-tree-id933 . -4) (undo-tree-id934 . -4) (undo-tree-id935 . -4) (undo-tree-id936 . -4) (undo-tree-id937 . -4) (undo-tree-id938 . -4) (undo-tree-id939 . -4) (undo-tree-id940 . -4) (undo-tree-id941 . -4) (undo-tree-id942 . -4) (undo-tree-id943 . -4) 460) nil (25192 8066 499115 0) 0 nil])
([nil nil ((#("\"3 ether" 0 8 (fontified t face font-lock-string-face)) . 907) (undo-tree-id1089 . -8) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -8) (t 25192 8066 503105 947000)) nil (25192 8086 983599 0) 0 nil])
([nil nil ((907 . 909)) nil (25192 8086 983597 0) 0 nil])
([nil nil ((909 . 910)) nil (25192 8086 983597 0) 0 nil])
([nil nil ((907 . 910) (#("We" 0 2 (fontified nil ws-butler-chg chg)) . -907) (907 . 909) (#("Wei" 0 3 (fontified t ws-butler-chg chg)) . -907) (undo-tree-id1004 . -2) (undo-tree-id1005 . -3) (undo-tree-id1006 . -3) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -2) (undo-tree-id1017 . -2) (undo-tree-id1018 . -1) (undo-tree-id1019 . -2) (undo-tree-id1020 . -2) (undo-tree-id1021 . -2) (undo-tree-id1022 . -2) (undo-tree-id1023 . -2) (undo-tree-id1024 . -2) (undo-tree-id1025 . -2) (undo-tree-id1026 . -2) (undo-tree-id1027 . -2) (undo-tree-id1028 . -2) (undo-tree-id1029 . -2) (undo-tree-id1030 . -2) (undo-tree-id1031 . -2) (undo-tree-id1032 . -2) (undo-tree-id1033 . -2) (undo-tree-id1034 . -2) (undo-tree-id1035 . -2) (undo-tree-id1036 . -2) (undo-tree-id1037 . -2) (undo-tree-id1038 . -2) (undo-tree-id1039 . -2) (undo-tree-id1040 . -2) (undo-tree-id1041 . -2) (undo-tree-id1042 . -2) (undo-tree-id1043 . -2) (undo-tree-id1044 . -2) (undo-tree-id1045 . -2) (undo-tree-id1046 . -2) (undo-tree-id1047 . -2) (undo-tree-id1048 . -2) (undo-tree-id1049 . -2) (undo-tree-id1050 . -2) (undo-tree-id1051 . -2) (undo-tree-id1052 . -2) (undo-tree-id1053 . -2) (undo-tree-id1054 . -2) (undo-tree-id1055 . -2) (undo-tree-id1056 . -2) (undo-tree-id1057 . -2) (undo-tree-id1058 . -2) (undo-tree-id1059 . -2) (undo-tree-id1060 . -3) (undo-tree-id1061 . -3) (undo-tree-id1062 . -3) (undo-tree-id1063 . -3) (undo-tree-id1064 . -3) (undo-tree-id1065 . -3) (undo-tree-id1066 . -3) (undo-tree-id1067 . -2) (undo-tree-id1068 . -3) (undo-tree-id1069 . -3) (undo-tree-id1070 . -3) (undo-tree-id1071 . -3) (undo-tree-id1072 . -3) (undo-tree-id1073 . -3) (undo-tree-id1074 . -3) (undo-tree-id1075 . -3) (undo-tree-id1076 . -3) (undo-tree-id1077 . -3) (undo-tree-id1078 . -3) (undo-tree-id1079 . -3) (undo-tree-id1080 . -3) (undo-tree-id1081 . -3) (undo-tree-id1082 . -3) (undo-tree-id1083 . -3) (undo-tree-id1084 . -3) (undo-tree-id1085 . -3) (undo-tree-id1086 . -3) (undo-tree-id1087 . -3) (undo-tree-id1088 . -3) 910) nil (25192 8086 983594 0) 0 nil])
([nil nil ((910 . 912) (#("(" 0 1 (fontified nil ws-butler-chg chg)) . -910) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (910 . 911)) nil (25192 8086 983557 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 918 . 919) (nil fontified nil 911 . 919) (911 . 919) (t 25192 8086 987234 766000)) nil (25192 8093 890819 0) 0 nil])
([nil nil ((919 . 956) (#(")\"," 0 1 (fontified t face font-lock-string-face) 1 2 (fontified t face font-lock-string-face) 2 3 (fontified t)) . 919)) nil (25192 8093 890813 0) 0 nil])
([nil nil ((#("{'from': accounts[0]}" 0 1 (fontified t face (rainbow-delimiters-depth-2-face)) 1 7 (fontified t face font-lock-string-face) 7 17 (fontified t) 17 18 (fontified t face (rainbow-delimiters-depth-3-face)) 18 19 (fontified t) 19 20 (fontified t face (rainbow-delimiters-depth-3-face)) 20 21 (fontified t face (rainbow-delimiters-depth-2-face))) . 935) (undo-tree-id1328 . -21) (undo-tree-id1329 . -21) (undo-tree-id1330 . 21) (undo-tree-id1331 . -1) (undo-tree-id1332 . 1) (undo-tree-id1333 . -21) (undo-tree-id1334 . -21) (undo-tree-id1335 . -21) (undo-tree-id1336 . -21) (undo-tree-id1337 . -21) (undo-tree-id1338 . -21) (undo-tree-id1339 . -21) (undo-tree-id1340 . -21) (undo-tree-id1341 . -21) (undo-tree-id1342 . -21) (undo-tree-id1343 . -21) (undo-tree-id1344 . -21) (undo-tree-id1345 . -21) (undo-tree-id1346 . -21) (undo-tree-id1347 . -21) (undo-tree-id1348 . -21) (undo-tree-id1349 . -21) (undo-tree-id1350 . -21) (undo-tree-id1351 . -21) (undo-tree-id1352 . -21) (undo-tree-id1353 . -21) (undo-tree-id1354 . -21) (undo-tree-id1355 . -21) (undo-tree-id1356 . -21) (undo-tree-id1357 . -21) (undo-tree-id1358 . -21) (undo-tree-id1359 . -21) (undo-tree-id1360 . -21) (undo-tree-id1361 . -21) (undo-tree-id1362 . -21) (undo-tree-id1363 . -21) (undo-tree-id1364 . -21) (undo-tree-id1365 . -21) (undo-tree-id1366 . -21) (undo-tree-id1367 . -21) (undo-tree-id1368 . -21) (undo-tree-id1369 . -21) (undo-tree-id1370 . -21) (undo-tree-id1371 . -21) (undo-tree-id1372 . -21) (undo-tree-id1373 . -21) (undo-tree-id1374 . -21) (undo-tree-id1375 . -21) (undo-tree-id1376 . -21) (undo-tree-id1377 . -21) (undo-tree-id1378 . -21) (undo-tree-id1379 . -21) (undo-tree-id1380 . -21) (undo-tree-id1381 . -21) (undo-tree-id1382 . -21) (undo-tree-id1383 . -21) (undo-tree-id1384 . -21) (undo-tree-id1385 . -21) (undo-tree-id1386 . -20) (undo-tree-id1387 . -21) (undo-tree-id1388 . -20) (undo-tree-id1389 . -21) (undo-tree-id1390 . -20) (undo-tree-id1391 . -21) (undo-tree-id1392 . -20) (undo-tree-id1393 . -21) (undo-tree-id1394 . -6) (undo-tree-id1395 . -7) (undo-tree-id1396 . -6) (undo-tree-id1397 . -7) (undo-tree-id1398 . -20) (undo-tree-id1399 . -21) (undo-tree-id1400 . -20) (undo-tree-id1401 . -21) (undo-tree-id1402 . -1) (undo-tree-id1403 . -21) (undo-tree-id1404 . -21) (undo-tree-id1405 . -21) (undo-tree-id1406 . -21) (undo-tree-id1407 . -21) (undo-tree-id1408 . -21) (undo-tree-id1409 . -21) (undo-tree-id1410 . -21) (undo-tree-id1411 . -21) (undo-tree-id1412 . -21) (undo-tree-id1413 . -21) (undo-tree-id1414 . -21) (undo-tree-id1415 . -21) (undo-tree-id1416 . -21) (undo-tree-id1417 . -21) (undo-tree-id1418 . -21) (undo-tree-id1419 . -21) (undo-tree-id1420 . -21) (undo-tree-id1421 . -21) (undo-tree-id1422 . -21) (undo-tree-id1423 . -21) (undo-tree-id1424 . -21) (undo-tree-id1425 . -21) (undo-tree-id1426 . -21) (undo-tree-id1427 . -21) (undo-tree-id1428 . -21) (undo-tree-id1429 . -21) (undo-tree-id1430 . -21) (undo-tree-id1431 . -21) (undo-tree-id1432 . -21) (undo-tree-id1433 . -21) (undo-tree-id1434 . -21) (undo-tree-id1435 . -21) (undo-tree-id1436 . -21) (undo-tree-id1437 . -21) (undo-tree-id1438 . -21) (undo-tree-id1439 . -21) (undo-tree-id1440 . -21) (undo-tree-id1441 . -21) (undo-tree-id1442 . -21) (undo-tree-id1443 . -21) (undo-tree-id1444 . -21) (undo-tree-id1445 . -21) (undo-tree-id1446 . -21) (undo-tree-id1447 . -21) (undo-tree-id1448 . -20) (undo-tree-id1449 . -21) (undo-tree-id1450 . -20) (undo-tree-id1451 . -21) (undo-tree-id1452 . -20) (undo-tree-id1453 . -21) (undo-tree-id1454 . -20) (undo-tree-id1455 . -21) (undo-tree-id1456 . -6) (undo-tree-id1457 . -7) (undo-tree-id1458 . -6) (undo-tree-id1459 . -7) (undo-tree-id1460 . -20) (undo-tree-id1461 . -21) (undo-tree-id1462 . -20) (undo-tree-id1463 . -21) (undo-tree-id1464 . -1) (undo-tree-id1465 . -21) (undo-tree-id1466 . -21) (undo-tree-id1467 . -21) (undo-tree-id1468 . -21) (undo-tree-id1469 . -21) (undo-tree-id1470 . -21) (undo-tree-id1471 . -21) (undo-tree-id1472 . -21) (undo-tree-id1473 . -21) (undo-tree-id1474 . -21) (undo-tree-id1475 . -21) (undo-tree-id1476 . -21) (undo-tree-id1477 . -21) (undo-tree-id1478 . -20) (undo-tree-id1479 . -21) (undo-tree-id1480 . -20) (undo-tree-id1481 . -21) (undo-tree-id1482 . -20) (undo-tree-id1483 . -21) (undo-tree-id1484 . -20) (undo-tree-id1485 . -21) (undo-tree-id1486 . -6) (undo-tree-id1487 . -7) (undo-tree-id1488 . -6) (undo-tree-id1489 . -7) (undo-tree-id1490 . -20) (undo-tree-id1491 . -21) (undo-tree-id1492 . -20) (undo-tree-id1493 . -21) (undo-tree-id1494 . -1) (undo-tree-id1495 . -21) (undo-tree-id1496 . -21) (undo-tree-id1497 . -21) (undo-tree-id1498 . -21) (undo-tree-id1499 . -21) (undo-tree-id1500 . -21) (undo-tree-id1501 . -21) (undo-tree-id1502 . -21) (undo-tree-id1503 . -21) (undo-tree-id1504 . -21) (undo-tree-id1505 . -21) (undo-tree-id1506 . -21) (undo-tree-id1507 . -21) (undo-tree-id1508 . -21) (undo-tree-id1509 . -21) (undo-tree-id1510 . -21) (undo-tree-id1511 . -21) (undo-tree-id1512 . -21) (undo-tree-id1513 . -21) (undo-tree-id1514 . -21) (undo-tree-id1515 . -21) (undo-tree-id1516 . -21) (undo-tree-id1517 . -21) (undo-tree-id1518 . -21) (undo-tree-id1519 . -21) (undo-tree-id1520 . -21) (undo-tree-id1521 . -21) (undo-tree-id1522 . -21) (undo-tree-id1523 . -21) (undo-tree-id1524 . -21) (undo-tree-id1525 . -21) (undo-tree-id1526 . -1) (undo-tree-id1527 . -2) (undo-tree-id1528 . 21) (undo-tree-id1529 . -1) (undo-tree-id1530 . 20) (undo-tree-id1531 . -20) (undo-tree-id1532 . 1) (undo-tree-id1533 . -21) (undo-tree-id1534 . -21) (t 25192 8093 893758 701000)) nil (25192 8099 353916 0) 0 nil])
([nil nil ((#("            " 0 12 (fontified t)) . 923) (undo-tree-id1093 . -12) (undo-tree-id1094 . -12) (undo-tree-id1095 . -12) (undo-tree-id1096 . -12) (undo-tree-id1097 . -12) (undo-tree-id1098 . -12) (undo-tree-id1099 . -12) (undo-tree-id1100 . -12) (undo-tree-id1101 . -12) (undo-tree-id1102 . -12) (undo-tree-id1103 . -12) (undo-tree-id1104 . -12) (undo-tree-id1105 . -12) (undo-tree-id1106 . -12) (undo-tree-id1107 . -12) (undo-tree-id1108 . -12) (undo-tree-id1109 . -12) (undo-tree-id1110 . -12) (undo-tree-id1111 . -12) (undo-tree-id1112 . -12) (undo-tree-id1113 . -12) (undo-tree-id1114 . -12) (undo-tree-id1115 . -12) (undo-tree-id1116 . -12) (undo-tree-id1117 . -12) (undo-tree-id1118 . -12) (undo-tree-id1119 . -12) (undo-tree-id1120 . -12) (undo-tree-id1121 . -12) (undo-tree-id1122 . -12) (undo-tree-id1123 . -12) (undo-tree-id1124 . -12) (undo-tree-id1125 . -12) (undo-tree-id1126 . -12) (undo-tree-id1127 . -12) (undo-tree-id1128 . -12) (undo-tree-id1129 . -12) (undo-tree-id1130 . -12) (undo-tree-id1131 . -12) (undo-tree-id1132 . -12) (undo-tree-id1133 . -12) (undo-tree-id1134 . -12) (undo-tree-id1135 . -12) (undo-tree-id1136 . -12) (undo-tree-id1137 . -12) (undo-tree-id1138 . -12) (undo-tree-id1139 . -12) (undo-tree-id1140 . -12) (undo-tree-id1141 . -12) (undo-tree-id1142 . -12) (undo-tree-id1143 . -12) (undo-tree-id1144 . -12) (undo-tree-id1145 . -12) (undo-tree-id1146 . -12) (undo-tree-id1147 . -12) (undo-tree-id1148 . -12) (undo-tree-id1149 . -12) (undo-tree-id1150 . -12) (undo-tree-id1151 . -12) (undo-tree-id1152 . -12) (undo-tree-id1153 . -12) (undo-tree-id1154 . -12) (undo-tree-id1155 . -12) (undo-tree-id1156 . -12) (undo-tree-id1157 . -12) (undo-tree-id1158 . -12) (undo-tree-id1159 . -12) (undo-tree-id1160 . -12) (undo-tree-id1161 . -12) (undo-tree-id1162 . -12) (undo-tree-id1163 . -12) (undo-tree-id1164 . -12) (undo-tree-id1165 . -12) (undo-tree-id1166 . -12) (undo-tree-id1167 . -12) (undo-tree-id1168 . -12) (undo-tree-id1169 . -12) (undo-tree-id1170 . -12) (undo-tree-id1171 . -12) (undo-tree-id1172 . -12) (undo-tree-id1173 . -12) (undo-tree-id1174 . -12) (undo-tree-id1175 . -12) (undo-tree-id1176 . -12) (undo-tree-id1177 . -12) (undo-tree-id1178 . -12) (undo-tree-id1179 . -12) (undo-tree-id1180 . -12) (undo-tree-id1181 . -12) (undo-tree-id1182 . -12) (undo-tree-id1183 . -12) (undo-tree-id1184 . -12) (undo-tree-id1185 . -12) (undo-tree-id1186 . -12) (undo-tree-id1187 . -12) (undo-tree-id1188 . -12) (undo-tree-id1189 . -12) (undo-tree-id1190 . -12) (undo-tree-id1191 . -12) (undo-tree-id1192 . -12) (undo-tree-id1193 . -12) (undo-tree-id1194 . -12) (undo-tree-id1195 . -12) (undo-tree-id1196 . -12) (undo-tree-id1197 . -12) (undo-tree-id1198 . -12) (undo-tree-id1199 . -12) (undo-tree-id1200 . -12) (undo-tree-id1201 . -12) (undo-tree-id1202 . -12) (undo-tree-id1203 . -12) (undo-tree-id1204 . -12) (undo-tree-id1205 . -12) (undo-tree-id1206 . -12) (undo-tree-id1207 . -12) (undo-tree-id1208 . -12) (undo-tree-id1209 . -12) (undo-tree-id1210 . -12) (undo-tree-id1211 . -12) (undo-tree-id1212 . -12) (undo-tree-id1213 . -12) (undo-tree-id1214 . -12) (undo-tree-id1215 . -12) (undo-tree-id1216 . -12) (undo-tree-id1217 . -12) (undo-tree-id1218 . -12) (undo-tree-id1219 . -12) (undo-tree-id1220 . -12) (undo-tree-id1221 . -12) (undo-tree-id1222 . -12) (undo-tree-id1223 . -12) (undo-tree-id1224 . -12) (undo-tree-id1225 . -12) (undo-tree-id1226 . -12) (undo-tree-id1227 . -12) (undo-tree-id1228 . -12) (undo-tree-id1229 . -12) (undo-tree-id1230 . -12) (undo-tree-id1231 . -12) (undo-tree-id1232 . -12) (undo-tree-id1233 . -12) (undo-tree-id1234 . -12) (undo-tree-id1235 . -12) (undo-tree-id1236 . -12) (undo-tree-id1237 . -12) (undo-tree-id1238 . -12) (undo-tree-id1239 . -12) (undo-tree-id1240 . -12) (undo-tree-id1241 . -12) (undo-tree-id1242 . -12) (undo-tree-id1243 . -12) (undo-tree-id1244 . -12) (undo-tree-id1245 . -12) (undo-tree-id1246 . -12) (undo-tree-id1247 . -12) (undo-tree-id1248 . -12) (undo-tree-id1249 . -12) (undo-tree-id1250 . -12) (undo-tree-id1251 . -12) (undo-tree-id1252 . -12) (undo-tree-id1253 . -12) (undo-tree-id1254 . -12) (undo-tree-id1255 . -12) (undo-tree-id1256 . -12) (undo-tree-id1257 . -12) (undo-tree-id1258 . -12) (undo-tree-id1259 . -12) (undo-tree-id1260 . -12) (undo-tree-id1261 . -12) (undo-tree-id1262 . -12) (undo-tree-id1263 . -12) (undo-tree-id1264 . -12) (undo-tree-id1265 . -12) (undo-tree-id1266 . -12) (undo-tree-id1267 . -12) (undo-tree-id1268 . -12) (undo-tree-id1269 . -12) (undo-tree-id1270 . -12) (undo-tree-id1271 . -12) (undo-tree-id1272 . -12) (undo-tree-id1273 . -12) (undo-tree-id1274 . -12) (undo-tree-id1275 . -12) (undo-tree-id1276 . -12) (undo-tree-id1277 . -12) (undo-tree-id1278 . -12) (undo-tree-id1279 . -12) (undo-tree-id1280 . -12) (undo-tree-id1281 . -12) (undo-tree-id1282 . -12) (undo-tree-id1283 . -12) (undo-tree-id1284 . -12) (undo-tree-id1285 . -12) (undo-tree-id1286 . -12) (undo-tree-id1287 . -12) (undo-tree-id1288 . -12) (undo-tree-id1289 . -12) (undo-tree-id1290 . -12) (undo-tree-id1291 . -12) (undo-tree-id1292 . -12) (undo-tree-id1293 . -12) (undo-tree-id1294 . -12) (undo-tree-id1295 . -12) (undo-tree-id1296 . -12) (undo-tree-id1297 . -12) (undo-tree-id1298 . -12) (undo-tree-id1299 . -12) (undo-tree-id1300 . -12) (undo-tree-id1301 . -12) (undo-tree-id1302 . -12) (undo-tree-id1303 . -12) (undo-tree-id1304 . -12) (undo-tree-id1305 . -12) (undo-tree-id1306 . -12) (undo-tree-id1307 . -12) (undo-tree-id1308 . -12) (undo-tree-id1309 . -12) (undo-tree-id1310 . -12) (undo-tree-id1311 . -12) (undo-tree-id1312 . -12) (undo-tree-id1313 . -12) (undo-tree-id1314 . -12) (undo-tree-id1315 . -12) (undo-tree-id1316 . -12) (undo-tree-id1317 . -12) (undo-tree-id1318 . -12) (undo-tree-id1319 . -12) (undo-tree-id1320 . -12) (undo-tree-id1321 . -12) (undo-tree-id1322 . -12) (undo-tree-id1323 . -12) (undo-tree-id1324 . -12) (undo-tree-id1325 . -12) (undo-tree-id1326 . -12) (undo-tree-id1327 . -12) 935) nil (25192 8099 353828 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 923) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1) (t 25192 8099 356954 72000)) nil (25192 8101 766292 0) 0 nil])
([nil nil ((1046 . 1051) (t 25192 8101 769267 866000)) nil (25192 8154 608897 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1147 . 1148) (nil fontified nil 1140 . 1148) (nil fontified nil 1139 . 1140) (nil fontified nil 1128 . 1139) (nil fontified nil 1127 . 1128) (nil fontified nil 1126 . 1127) (nil fontified nil 1109 . 1126) (nil fontified nil 1105 . 1109) (nil fontified nil 1101 . 1105) (nil fontified nil 1100 . 1101) (nil fontified nil 1093 . 1100) (nil fontified nil 1089 . 1093) (nil fontified nil 1087 . 1089) (nil fontified nil 1082 . 1087) (nil fontified nil 1079 . 1082) (nil fontified nil 1071 . 1079) (nil fontified nil 1066 . 1071) (nil fontified nil 1063 . 1066) (nil fontified nil 1062 . 1063) (nil fontified nil 1055 . 1062) (nil fontified nil 1051 . 1055) (1051 . 1148)) nil (25192 8154 608896 0) 0 nil])
([nil nil ((#("n" 0 1 (ws-butler-chg chg fontified t)) . -1069) (undo-tree-id1635 . -1) (#("t" 0 1 (ws-butler-chg chg fontified t)) . -1070) (undo-tree-id1636 . -1) 1071) nil (25192 8154 608893 0) 0 nil])
([nil nil ((#("u" 0 1 (ws-butler-chg chg fontified t)) . -1055) (undo-tree-id1621 . -1) (#("i" 0 1 (ws-butler-chg chg fontified t)) . -1056) (undo-tree-id1622 . -1) (#("n" 0 1 (ws-butler-chg chg fontified t)) . -1057) (undo-tree-id1623 . -1) (#("t" 0 1 (ws-butler-chg chg fontified t)) . -1058) (undo-tree-id1624 . -1) (#("2" 0 1 (ws-butler-chg chg fontified t)) . -1059) (undo-tree-id1625 . -1) (#("5" 0 1 (ws-butler-chg chg fontified t)) . -1060) (undo-tree-id1626 . -1) (#("6" 0 1 (ws-butler-chg chg fontified t)) . -1061) (undo-tree-id1627 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -1062) (undo-tree-id1628 . -1) (#("c" 0 1 (ws-butler-chg chg fontified t)) . -1063) (undo-tree-id1629 . -1) (#("o" 0 1 (ws-butler-chg chg fontified t)) . -1064) (undo-tree-id1630 . -1) (#("n" 0 1 (ws-butler-chg chg fontified t)) . -1065) (undo-tree-id1631 . -1) (#("s" 0 1 (ws-butler-chg chg fontified t)) . -1066) (undo-tree-id1632 . -1) (#("t" 0 1 (ws-butler-chg chg fontified t)) . -1067) (undo-tree-id1633 . -1) (#("a" 0 1 (ws-butler-chg chg fontified t)) . -1068) (undo-tree-id1634 . -1) 1069) nil (25192 8154 608890 0) 0 nil])
([nil nil ((#("        " 0 4 (fontified t ws-butler-chg chg) 4 8 (ws-butler-chg chg fontified t)) . -1047) (undo-tree-id1618 . -4) (undo-tree-id1619 . -8) (undo-tree-id1620 . -4) 1055) nil (25192 8154 608882 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . -1046) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) 1047) nil (25192 8154 608880 0) 0 nil])
([nil nil ((1048 . 1051) (1046 . 1047)) nil (25192 8154 608877 0) 0 nil])
([nil nil ((1051 . 1055)) nil (25192 8154 608876 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1136) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) (undo-tree-id1585 . -1) (undo-tree-id1586 . -1) (undo-tree-id1587 . -1) (undo-tree-id1588 . -1) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) (undo-tree-id1595 . -1) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1) (undo-tree-id1599 . -1) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (1066 . 1068) (#("(" 0 1 (ws-butler-chg chg fontified nil)) . -1066) (1063 . 1067)) nil (25192 8154 608871 0) 0 nil])
([nil nil ((1067 . 1069) (#("\"" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face) ws-butler-chg chg)) . -1067) (1067 . 1068) (t 25192 8154 612062 671000)) nil (25192 8158 994650 0) 0 nil])
([nil nil ((#("1 ether;" 0 1 (fontified t) 1 2 (fontified t) 2 7 (fontified t) 7 8 (fontified t)) . 1070)) nil (25192 8158 994649 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1075 . 1076) (nil fontified nil 1075 . 1076) (nil fontified nil 1070 . 1075) (nil fontified nil 1069 . 1070) (nil fontified nil 1068 . 1069) (1068 . 1076)) nil (25192 8158 994648 0) 0 nil])
([nil nil ((#(";" 0 1 (ws-butler-chg chg fontified t rear-nonsticky t face font-lock-string-face)) . -1075) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) 1076) nil (25192 8158 994645 0) 0 nil])
([nil nil ((#("uint256" 0 7 (fontified t)) . 1082) (undo-tree-id1642 . -7) (t 25192 8158 998130 213000)) nil (25192 8169 16541 0) 0 nil])
([nil nil ((#(" constant" 0 1 (fontified t ws-butler-chg delete) 1 5 (fontified t) 5 9 (fontified t)) . 1082) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) (undo-tree-id1641 . -9)) nil (25192 8169 16539 0) 0 nil])
([nil nil ((1082 . 1085)) nil (25192 8169 16526 0) 0 nil])
([nil nil ((1123 . 1128) (t 25192 8169 19776 659000)) nil (25192 8174 279021 0) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified nil ws-butler-chg delete)) . 1124) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) (undo-tree-id1645 . -1) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) (undo-tree-id1654 . -1) (undo-tree-id1655 . -1) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) (undo-tree-id1661 . -1) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) (undo-tree-id1670 . -1) (undo-tree-id1671 . -1) (undo-tree-id1672 . -1) (undo-tree-id1673 . -1) (undo-tree-id1674 . -1) (undo-tree-id1675 . -1) (undo-tree-id1676 . -1) (undo-tree-id1677 . -1) (undo-tree-id1678 . -1) (undo-tree-id1679 . -1) (undo-tree-id1680 . -1) (undo-tree-id1681 . -1) (undo-tree-id1682 . -1) (undo-tree-id1683 . -1) (undo-tree-id1684 . -1) (undo-tree-id1685 . -1) (undo-tree-id1686 . -1) (undo-tree-id1687 . -1) (undo-tree-id1688 . -1) (undo-tree-id1689 . -1) (undo-tree-id1690 . -1) (undo-tree-id1691 . -1) (undo-tree-id1692 . -1) (undo-tree-id1693 . -1) (undo-tree-id1694 . -1) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) (undo-tree-id1697 . -1) (undo-tree-id1698 . -1) (undo-tree-id1699 . -1) (undo-tree-id1700 . -1) (undo-tree-id1701 . -1) (undo-tree-id1702 . -1) (undo-tree-id1703 . -1) (undo-tree-id1704 . -1) (undo-tree-id1705 . -1) (undo-tree-id1706 . -1) (undo-tree-id1707 . -1) (undo-tree-id1708 . -1) (undo-tree-id1709 . -1) (undo-tree-id1710 . -1) (undo-tree-id1711 . -1) (undo-tree-id1712 . -1) (undo-tree-id1713 . -1) (undo-tree-id1714 . 1) (undo-tree-id1715 . 1) (#("    " 0 4 (fontified t ws-butler-chg chg)) . 1124) (undo-tree-id1716 . -4) (undo-tree-id1717 . -4) (undo-tree-id1718 . -4) (undo-tree-id1719 . -4) (undo-tree-id1720 . -4) (undo-tree-id1721 . -4) (undo-tree-id1722 . -4) (undo-tree-id1723 . -4) (undo-tree-id1724 . -4) (undo-tree-id1725 . -4) (undo-tree-id1726 . -4) (undo-tree-id1727 . -4) (undo-tree-id1728 . -4) (undo-tree-id1729 . -4) (undo-tree-id1730 . -4) (undo-tree-id1731 . -4) (undo-tree-id1732 . -4) (undo-tree-id1733 . -4) (undo-tree-id1734 . -4) (undo-tree-id1735 . -4) (undo-tree-id1736 . -4) (undo-tree-id1737 . -4) (undo-tree-id1738 . -4) (undo-tree-id1739 . -4) (undo-tree-id1740 . -4) (undo-tree-id1741 . -4) (undo-tree-id1742 . -4) (undo-tree-id1743 . -4) (undo-tree-id1744 . -4) (undo-tree-id1745 . -4) (undo-tree-id1746 . -4) (undo-tree-id1747 . -4) (undo-tree-id1748 . -4) (undo-tree-id1749 . -4) (undo-tree-id1750 . -4) (undo-tree-id1751 . -4) (undo-tree-id1752 . -4) (undo-tree-id1753 . -4) (undo-tree-id1754 . -4) (undo-tree-id1755 . -4) (undo-tree-id1756 . -4) (undo-tree-id1757 . -4) (undo-tree-id1758 . -4) (undo-tree-id1759 . -4) (undo-tree-id1760 . -4) (undo-tree-id1761 . -4) (undo-tree-id1762 . -4) (undo-tree-id1763 . -4) (undo-tree-id1764 . -4) (undo-tree-id1765 . -4) (undo-tree-id1766 . -4) (undo-tree-id1767 . -4) (undo-tree-id1768 . -4) (undo-tree-id1769 . -4) (undo-tree-id1770 . -4) (undo-tree-id1771 . -4) (undo-tree-id1772 . -4) (undo-tree-id1773 . -4) (undo-tree-id1774 . -4) (undo-tree-id1775 . -4) (undo-tree-id1776 . -4) (undo-tree-id1777 . -4) (undo-tree-id1778 . -4) (undo-tree-id1779 . -4) (undo-tree-id1780 . -4) (undo-tree-id1781 . -4) (undo-tree-id1782 . -4) (undo-tree-id1783 . -4) (undo-tree-id1784 . -4) (undo-tree-id1785 . -4) (undo-tree-id1786 . -4) (undo-tree-id1787 . -4) (undo-tree-id1788 . -4) (undo-tree-id1789 . -4) (undo-tree-id1790 . -4) (undo-tree-id1791 . -4) (undo-tree-id1792 . -4) (undo-tree-id1793 . -4) (undo-tree-id1794 . -4) (undo-tree-id1795 . -4) (undo-tree-id1796 . -4) (undo-tree-id1797 . -4) (undo-tree-id1798 . -4) (undo-tree-id1799 . -4) (undo-tree-id1800 . -4) (undo-tree-id1801 . -4) (undo-tree-id1802 . -4) (undo-tree-id1803 . -4) (undo-tree-id1804 . -4) (undo-tree-id1805 . -4) (undo-tree-id1806 . -4) (undo-tree-id1807 . -4) (undo-tree-id1808 . -4) (undo-tree-id1809 . -4) (undo-tree-id1810 . -4) (undo-tree-id1811 . -4) (undo-tree-id1812 . -4) (undo-tree-id1813 . -4) (undo-tree-id1814 . -4) (undo-tree-id1815 . -4) (undo-tree-id1816 . -4) (undo-tree-id1817 . -4) (undo-tree-id1818 . -4) (undo-tree-id1819 . -4) (undo-tree-id1820 . -4) (undo-tree-id1821 . -4) (undo-tree-id1822 . -4) (undo-tree-id1823 . -4) (undo-tree-id1824 . -4) (undo-tree-id1825 . -4) (undo-tree-id1826 . -4) (undo-tree-id1827 . -4) (undo-tree-id1828 . -4) (undo-tree-id1829 . -4) (undo-tree-id1830 . -4)) nil (25192 8174 279015 0) 0 nil])
([nil nil ((1124 . 1125) (t 25192 8174 282025 642000)) nil (25192 8219 69406 0) 0 nil])
([nil nil ((1123 . 1128)) nil (25192 8219 69406 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1134 . 1135) (nil fontified nil 1128 . 1135) (1128 . 1135)) nil (25192 8219 69405 0) 0 nil])
([nil nil ((1138 . 1140) (#("[" 0 1 (fontified nil ws-butler-chg chg)) . -1138) (1135 . 1139)) nil (25192 8219 69404 0) 0 nil])
([nil nil ((#("]" 0 1 (fontified nil ws-butler-chg chg face (rainbow-delimiters-depth-1-face))) . 1140) (undo-tree-id1831 . -1) (1139 . 1140)) nil (25192 8219 69403 0) 0 nil])
([nil nil ((1140 . 1145)) nil (25192 8219 69397 0) 0 nil])
([nil nil ((1145 . 1147)) nil (25192 8219 69396 0) 0 nil])
([nil nil ((1147 . 1175)) nil (25192 8219 69395 0) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg chg fontified t)) . 1176) 1175) nil (25192 8219 69391 0) 0 nil])
([nil nil ((1175 . 1180) (t 25192 8219 72707 564000)) nil (25192 8224 306834 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil ws-butler-chg delete)) . 1176) (undo-tree-id1832 . -1) (undo-tree-id1833 . -1) (undo-tree-id1834 . -1) (undo-tree-id1835 . -1) (undo-tree-id1836 . -1) (undo-tree-id1837 . -1) (undo-tree-id1838 . -1) (undo-tree-id1839 . -1) (undo-tree-id1840 . -1) (undo-tree-id1841 . -1) (undo-tree-id1842 . -1) (undo-tree-id1843 . -1) (undo-tree-id1844 . -1) (undo-tree-id1845 . -1) (undo-tree-id1846 . -1) (undo-tree-id1847 . -1) (undo-tree-id1848 . -1) (undo-tree-id1849 . -1) (undo-tree-id1850 . -1) (undo-tree-id1851 . -1) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1) (undo-tree-id1854 . -1) (undo-tree-id1855 . -1) (undo-tree-id1856 . -1) (undo-tree-id1857 . -1) (undo-tree-id1858 . -1) (undo-tree-id1859 . -1) (undo-tree-id1860 . -1) (undo-tree-id1861 . -1) (undo-tree-id1862 . -1) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1) (undo-tree-id1865 . -1) (undo-tree-id1866 . -1) (undo-tree-id1867 . -1) (undo-tree-id1868 . -1) (undo-tree-id1869 . -1) (undo-tree-id1870 . -1) (undo-tree-id1871 . -1) (undo-tree-id1872 . -1) (undo-tree-id1873 . -1) (undo-tree-id1874 . -1) (undo-tree-id1875 . -1) (undo-tree-id1876 . -1) (undo-tree-id1877 . -1) (undo-tree-id1878 . -1) (undo-tree-id1879 . -1) (undo-tree-id1880 . -1) (undo-tree-id1881 . -1) (undo-tree-id1882 . -1) (undo-tree-id1883 . -1) (undo-tree-id1884 . -1) (undo-tree-id1885 . -1) (undo-tree-id1886 . -1) (undo-tree-id1887 . -1) (undo-tree-id1888 . -1) (undo-tree-id1889 . -1) (undo-tree-id1890 . -1) (undo-tree-id1891 . -1) (undo-tree-id1892 . -1) (undo-tree-id1893 . -1) (undo-tree-id1894 . -1) (undo-tree-id1895 . -1) (undo-tree-id1896 . -1) (undo-tree-id1897 . -1) (undo-tree-id1898 . -1) (undo-tree-id1899 . -1) (undo-tree-id1900 . -1) (undo-tree-id1901 . -1) (undo-tree-id1902 . -1) (undo-tree-id1903 . -1) (undo-tree-id1904 . -1) (undo-tree-id1905 . -1) (undo-tree-id1906 . 1) (undo-tree-id1907 . 1) (undo-tree-id1908 . 1) (#("    " 0 4 (fontified t ws-butler-chg chg)) . 1176) (undo-tree-id1909 . -4) (undo-tree-id1910 . -4) (undo-tree-id1911 . -4) (undo-tree-id1912 . -4) (undo-tree-id1913 . -4) (undo-tree-id1914 . -4) (undo-tree-id1915 . -4) (undo-tree-id1916 . -4) (undo-tree-id1917 . -4) (undo-tree-id1918 . -4) (undo-tree-id1919 . -4) (undo-tree-id1920 . -4) (undo-tree-id1921 . -4) (undo-tree-id1922 . -4) (undo-tree-id1923 . -4) (undo-tree-id1924 . -4) (undo-tree-id1925 . -4) (undo-tree-id1926 . -4) (undo-tree-id1927 . -4) (undo-tree-id1928 . -4) (undo-tree-id1929 . -4) (undo-tree-id1930 . -4) (undo-tree-id1931 . -4) (undo-tree-id1932 . -4) (undo-tree-id1933 . -4) (undo-tree-id1934 . -4) (undo-tree-id1935 . -4) (undo-tree-id1936 . -4) (undo-tree-id1937 . -4) (undo-tree-id1938 . -4) (undo-tree-id1939 . -4) (undo-tree-id1940 . -4) (undo-tree-id1941 . -4) (undo-tree-id1942 . -4) (undo-tree-id1943 . -4) (undo-tree-id1944 . -4) (undo-tree-id1945 . -4) (undo-tree-id1946 . -4) (undo-tree-id1947 . -4) (undo-tree-id1948 . -4) (undo-tree-id1949 . -4) (undo-tree-id1950 . -4) (undo-tree-id1951 . -4) (undo-tree-id1952 . -4) (undo-tree-id1953 . -4) (undo-tree-id1954 . -4) (undo-tree-id1955 . -4) (undo-tree-id1956 . -4) (undo-tree-id1957 . -4) (undo-tree-id1958 . -4) (undo-tree-id1959 . -4) (undo-tree-id1960 . -4) (undo-tree-id1961 . -4) (undo-tree-id1962 . -4) (undo-tree-id1963 . -4) (undo-tree-id1964 . -4) (undo-tree-id1965 . -4) (undo-tree-id1966 . -4) (undo-tree-id1967 . -4) (undo-tree-id1968 . -4) (undo-tree-id1969 . -4) (undo-tree-id1970 . -4) (undo-tree-id1971 . -4) (undo-tree-id1972 . -4) (undo-tree-id1973 . -4) (undo-tree-id1974 . -4) (undo-tree-id1975 . -4) (undo-tree-id1976 . -4) (undo-tree-id1977 . -4) (undo-tree-id1978 . -4) (undo-tree-id1979 . -4) (undo-tree-id1980 . -4) (undo-tree-id1981 . -4) (undo-tree-id1982 . -4) (undo-tree-id1983 . -4) (undo-tree-id1984 . -4) (undo-tree-id1985 . -4) (undo-tree-id1986 . -4) (undo-tree-id1987 . -4) (undo-tree-id1988 . -4) (undo-tree-id1989 . -4) (undo-tree-id1990 . -4) (undo-tree-id1991 . -4) (undo-tree-id1992 . -4) (undo-tree-id1993 . -4) (undo-tree-id1994 . -4) (undo-tree-id1995 . -4) (undo-tree-id1996 . -4) (undo-tree-id1997 . -4) (undo-tree-id1998 . -4) (undo-tree-id1999 . -4) (undo-tree-id2000 . -4)) nil (25192 8224 306828 0) 0 nil])
([nil nil ((1176 . 1177) (t 25192 8224 309853 56000)) nil (25192 8259 871259 0) 0 nil])
([nil nil ((1176 . 1181)) nil (25192 8259 871259 0) 0 nil])
([nil nil ((1181 . 1183)) nil (25192 8259 871258 0) 0 nil])
([nil nil ((1181 . 1193) (#("st" 0 2 (fontified nil ws-butler-chg chg)) . -1181) (1181 . 1183) (#("staticmethod" 0 12 (fontified nil ws-butler-chg chg)) . -1181) (1181 . 1193) (#("st" 0 2 (fontified t ws-butler-chg chg)) . -1181) (undo-tree-id2072 . -2) (undo-tree-id2073 . -2) 1183) nil (25192 8259 871258 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t ws-butler-chg chg)) . -1183) (undo-tree-id2052 . -1) (undo-tree-id2053 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -1184) (undo-tree-id2054 . -1) (undo-tree-id2055 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg)) . -1185) (undo-tree-id2056 . -1) (undo-tree-id2057 . -1) (#("c" 0 1 (fontified t ws-butler-chg chg)) . -1186) (undo-tree-id2058 . -1) (undo-tree-id2059 . -1) (#("m" 0 1 (fontified t ws-butler-chg chg)) . -1187) (undo-tree-id2060 . -1) (undo-tree-id2061 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -1188) (undo-tree-id2062 . -1) (undo-tree-id2063 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -1189) (undo-tree-id2064 . -1) (undo-tree-id2065 . -1) (#("h" 0 1 (fontified t ws-butler-chg chg)) . -1190) (undo-tree-id2066 . -1) (undo-tree-id2067 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg)) . -1191) (undo-tree-id2068 . -1) (undo-tree-id2069 . -1) (#("d" 0 1 (fontified t ws-butler-chg chg face font-lock-builtin-face)) . -1192) (undo-tree-id2070 . -1) (undo-tree-id2071 . -1) 1193) nil (25192 8259 871254 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t ws-butler-chg chg)) . -1181) (undo-tree-id2043 . -1) (undo-tree-id2044 . -1) (undo-tree-id2045 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -1182) (undo-tree-id2046 . -1) (undo-tree-id2047 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg face font-lock-builtin-face)) . -1183) (undo-tree-id2048 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg)) . -1184) (undo-tree-id2049 . -1) (#("g" 0 1 (fontified t ws-butler-chg chg)) . -1185) (undo-tree-id2050 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -1186) (undo-tree-id2051 . -1) (1183 . 1187)) nil (25192 8259 871241 0) 0 nil])
([nil nil ((1181 . 1290)) nil (25192 8259 871236 0) 0 nil])
([nil nil ((#("getLatestPrice" 0 14 (fontified t ws-butler-chg chg)) . 1190) (undo-tree-id2001 . -14) (undo-tree-id2002 . -14) (undo-tree-id2003 . -1) (undo-tree-id2004 . -1) (undo-tree-id2005 . -1) (undo-tree-id2006 . -1) (undo-tree-id2007 . -1) (undo-tree-id2008 . -1) (undo-tree-id2009 . -1) (undo-tree-id2010 . -1) (undo-tree-id2011 . -2) (undo-tree-id2012 . -1) (undo-tree-id2013 . -2) (undo-tree-id2014 . -2) (undo-tree-id2015 . -2) (undo-tree-id2016 . -2) (undo-tree-id2017 . -2) (undo-tree-id2018 . -2) (undo-tree-id2019 . -2) (undo-tree-id2020 . -3) (undo-tree-id2021 . -2) (undo-tree-id2022 . -3) (undo-tree-id2023 . -3) (undo-tree-id2024 . -3) (undo-tree-id2025 . -3) (undo-tree-id2026 . -3) (undo-tree-id2027 . -3) (undo-tree-id2028 . -3) (undo-tree-id2029 . -4) (undo-tree-id2030 . -3) (undo-tree-id2031 . -4) (undo-tree-id2032 . -4) (undo-tree-id2033 . -4) (undo-tree-id2034 . -4) (undo-tree-id2035 . -4) (undo-tree-id2036 . -4) (undo-tree-id2037 . -4) (undo-tree-id2038 . -4) (undo-tree-id2039 . -4) (undo-tree-id2040 . -4) (undo-tree-id2041 . -4) (undo-tree-id2042 . -14)) nil (25192 8259 871234 0) 0 nil])
([nil nil ((1190 . 1192)) nil (25192 8259 871208 0) 0 nil])
([nil nil ((1267 . 1268) (t 25192 8259 875193 695000)) nil (25192 8272 705052 0) 0 nil])
([nil nil ((1268 . 1270) (#("\"" 0 1 (fontified nil ws-butler-chg chg)) . -1268) (1268 . 1269)) nil (25192 8272 705051 0) 0 nil])
([nil nil ((1269 . 1292) (#("\"}" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face) 1 2 (fontified t ws-butler-chg delete face (rainbow-delimiters-depth-2-face))) . 1269) (undo-tree-id2117 . 2) (undo-tree-id2118 . 2) (undo-tree-id2119 . -1)) nil (25192 8272 705050 0) 0 nil])
([nil nil ((#("1" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1282) (undo-tree-id2074 . -1) (undo-tree-id2075 . -1) (undo-tree-id2076 . -1) (undo-tree-id2077 . -1) (undo-tree-id2078 . -1) (undo-tree-id2079 . -1) (undo-tree-id2080 . -1) (undo-tree-id2081 . -1) (undo-tree-id2082 . -1) (undo-tree-id2083 . -1) (undo-tree-id2084 . -1) (undo-tree-id2085 . -1) (undo-tree-id2086 . -1) (undo-tree-id2087 . -1) (undo-tree-id2088 . -1) (undo-tree-id2089 . -1) (undo-tree-id2090 . -1) (undo-tree-id2091 . -1) (undo-tree-id2092 . -1) (undo-tree-id2093 . -1) (undo-tree-id2094 . -1) (undo-tree-id2095 . -1) (undo-tree-id2096 . -1) (undo-tree-id2097 . -1) (undo-tree-id2098 . -1) (undo-tree-id2099 . -1) (undo-tree-id2100 . -1) (undo-tree-id2101 . -1) (undo-tree-id2102 . -1) (undo-tree-id2103 . -1) (undo-tree-id2104 . -1) (undo-tree-id2105 . -1) (undo-tree-id2106 . -1) (undo-tree-id2107 . -1) (undo-tree-id2108 . -1) (undo-tree-id2109 . -1) (undo-tree-id2110 . -1) (undo-tree-id2111 . -1) (undo-tree-id2112 . -1) (undo-tree-id2113 . -1) (undo-tree-id2114 . -1) (undo-tree-id2115 . -1) (undo-tree-id2116 . -1) 1283) nil (25192 8272 705047 0) 0 nil])
([nil nil ((1282 . 1283)) nil (25192 8272 705020 0) 0 nil])
([nil nil ((#("3" 0 1 (fontified t face font-lock-string-face)) . -1282) (undo-tree-id2120 . -1) (undo-tree-id2121 . -1) (undo-tree-id2122 . -1) (undo-tree-id2123 . -1) (undo-tree-id2124 . -1) (undo-tree-id2125 . -1) (undo-tree-id2126 . -1) (undo-tree-id2127 . -1) (undo-tree-id2128 . -1) (undo-tree-id2129 . -1) (undo-tree-id2130 . -1) (undo-tree-id2131 . -1) (undo-tree-id2132 . -1) (undo-tree-id2133 . -1) (undo-tree-id2134 . -1) (undo-tree-id2135 . -1) (undo-tree-id2136 . -1) (undo-tree-id2137 . -1) (undo-tree-id2138 . -1) (undo-tree-id2139 . -1) (undo-tree-id2140 . -1) (undo-tree-id2141 . -1) (undo-tree-id2142 . -1) (t 25192 8272 708834 493000)) nil (25192 8318 147921 0) 0 nil])
([nil nil ((1282 . 1283)) nil (25192 8318 147902 0) 0 nil])
([nil nil ((1302 . 1307) (t 25192 8318 151438 116000)) nil (25192 8330 732321 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified nil ws-butler-chg delete)) . 1303) (undo-tree-id2143 . -1) (#("    " 0 4 (fontified t ws-butler-chg chg)) . 1303) (undo-tree-id2144 . -4) (undo-tree-id2145 . -4) (undo-tree-id2146 . -4) (undo-tree-id2147 . -4) (undo-tree-id2148 . -4) (undo-tree-id2149 . -4) (undo-tree-id2150 . -4) (undo-tree-id2151 . -4) (undo-tree-id2152 . -4) (undo-tree-id2153 . -4) (undo-tree-id2154 . -4) (undo-tree-id2155 . -4) (undo-tree-id2156 . -4) (undo-tree-id2157 . -4) (undo-tree-id2158 . -4) (undo-tree-id2159 . -4) (undo-tree-id2160 . -4) (undo-tree-id2161 . -4) (undo-tree-id2162 . -4) (undo-tree-id2163 . -4) (undo-tree-id2164 . -4) (undo-tree-id2165 . -4) (undo-tree-id2166 . -4) (undo-tree-id2167 . -4) (undo-tree-id2168 . -4) (undo-tree-id2169 . -4) (undo-tree-id2170 . -4) (undo-tree-id2171 . -4) (undo-tree-id2172 . -4) (undo-tree-id2173 . -4) (undo-tree-id2174 . -4) (undo-tree-id2175 . -4) (undo-tree-id2176 . -4) (undo-tree-id2177 . -4) (undo-tree-id2178 . -4) (undo-tree-id2179 . -4) (undo-tree-id2180 . -4) (undo-tree-id2181 . -4) (undo-tree-id2182 . -4) (undo-tree-id2183 . -4) (undo-tree-id2184 . -4) (undo-tree-id2185 . -4) (undo-tree-id2186 . -4) (undo-tree-id2187 . -4) (undo-tree-id2188 . -4) (undo-tree-id2189 . -4) (undo-tree-id2190 . -4) (undo-tree-id2191 . -4) (undo-tree-id2192 . -4) (undo-tree-id2193 . -4) (undo-tree-id2194 . -4) (undo-tree-id2195 . -4) (undo-tree-id2196 . -4) (undo-tree-id2197 . -4) (undo-tree-id2198 . -4) (undo-tree-id2199 . -4) (undo-tree-id2200 . -4) (undo-tree-id2201 . -4) (undo-tree-id2202 . -4) (undo-tree-id2203 . -4) (undo-tree-id2204 . -4) (undo-tree-id2205 . -4) (undo-tree-id2206 . -4) (undo-tree-id2207 . -4) (undo-tree-id2208 . -4) (undo-tree-id2209 . -4) (undo-tree-id2210 . -4) (undo-tree-id2211 . -4) (undo-tree-id2212 . -4) (undo-tree-id2213 . -4) (undo-tree-id2214 . -4) (undo-tree-id2215 . -4) (undo-tree-id2216 . -4) (undo-tree-id2217 . -4) (undo-tree-id2218 . -4) (undo-tree-id2219 . -4) (undo-tree-id2220 . -4) (undo-tree-id2221 . -4) (undo-tree-id2222 . -4) (undo-tree-id2223 . -4) (undo-tree-id2224 . -4) (undo-tree-id2225 . -4) (undo-tree-id2226 . -4) (undo-tree-id2227 . -4) (undo-tree-id2228 . -4) (undo-tree-id2229 . -4) (undo-tree-id2230 . -4) (undo-tree-id2231 . -4) (undo-tree-id2232 . -4) (undo-tree-id2233 . -4) (undo-tree-id2234 . -4) (undo-tree-id2235 . -4)) nil (25192 8330 732316 0) 0 nil])
([nil nil ((1302 . 1307) (t 25192 8330 735784 433000)) nil (25192 8448 959216 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1604 . 1605) (nil fontified nil 1603 . 1605) (nil fontified nil 1602 . 1603) (nil fontified nil 1601 . 1602) (nil fontified nil 1597 . 1601) (nil fontified nil 1596 . 1597) (nil fontified nil 1589 . 1596) (nil fontified nil 1588 . 1589) (nil fontified nil 1569 . 1588) (nil fontified nil 1568 . 1569) (nil fontified nil 1557 . 1568) (nil fontified nil 1556 . 1557) (nil fontified nil 1548 . 1556) (nil fontified nil 1547 . 1548) (nil fontified nil 1525 . 1547) (nil fontified nil 1518 . 1525) (nil fontified nil 1500 . 1518) (nil fontified nil 1493 . 1500) (nil fontified nil 1451 . 1493) (nil fontified nil 1444 . 1451) (nil fontified nil 1410 . 1444) (nil fontified nil 1403 . 1410) (nil fontified nil 1376 . 1403) (nil fontified nil 1369 . 1376) (nil fontified nil 1357 . 1369) (nil fontified nil 1336 . 1357) (nil fontified nil 1329 . 1336) (nil fontified nil 1320 . 1329) (nil fontified nil 1316 . 1320) (nil fontified nil 1315 . 1316) (nil fontified nil 1307 . 1315) (1307 . 1605)) nil (25192 8448 959215 0) 0 nil])
([nil nil ((1304 . 1308) (#("            " 0 4 (fontified nil ws-butler-chg chg) 4 12 (ws-butler-chg chg fontified nil)) . 1303) (undo-tree-id2243 . -4) (undo-tree-id2244 . -12) (undo-tree-id2245 . -4) (undo-tree-id2246 . -12) (undo-tree-id2247 . -12) (undo-tree-id2248 . -12) (undo-tree-id2249 . -12) (undo-tree-id2250 . -12) (undo-tree-id2251 . -12) (undo-tree-id2252 . -12) (undo-tree-id2253 . -12) (undo-tree-id2254 . -12) (undo-tree-id2255 . -12) (undo-tree-id2256 . -12) (undo-tree-id2257 . -12) (undo-tree-id2258 . -12) (undo-tree-id2259 . -12) (undo-tree-id2260 . -12) (undo-tree-id2261 . -12) (undo-tree-id2262 . -12) (undo-tree-id2263 . -12) (undo-tree-id2264 . -12) (undo-tree-id2265 . -12) (undo-tree-id2266 . -12) (undo-tree-id2267 . -12) (undo-tree-id2268 . -12) (undo-tree-id2269 . -12) (undo-tree-id2270 . -12) (undo-tree-id2271 . -12) (undo-tree-id2272 . -12) (undo-tree-id2273 . -12) (undo-tree-id2274 . -12) (1315 . 1316)) nil (25192 8448 959210 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1598) (undo-tree-id2236 . -1) (undo-tree-id2237 . -1) (undo-tree-id2238 . -1) (undo-tree-id2239 . -1) (undo-tree-id2240 . -1) (undo-tree-id2241 . -1) (undo-tree-id2242 . -1) 1308) nil (25192 8448 959195 0) 0 nil])
([nil nil ((#("uint256" 0 7 (fontified t)) . 1322) (undo-tree-id2302 . -7) (undo-tree-id2303 . -7) (t 25192 8448 963562 171000)) nil (25192 8485 773069 0) 0 nil])
([nil nil ((#("uint256" 0 7 (fontified t)) . 1355) (undo-tree-id2300 . -7) (undo-tree-id2301 . -7)) nil (25192 8485 773067 0) 0 nil])
([nil nil ((#("uint256" 0 7 (fontified t)) . 1382) (undo-tree-id2298 . -7) (undo-tree-id2299 . -7)) nil (25192 8485 773066 0) 0 nil])
([nil nil ((#("uint256" 0 7 (fontified t)) . 1416) (undo-tree-id2296 . -7) (undo-tree-id2297 . -7)) nil (25192 8485 773065 0) 0 nil])
([nil nil ((#("uint256" 0 7 (fontified t)) . 1458) (undo-tree-id2294 . -7) (undo-tree-id2295 . -7)) nil (25192 8485 773063 0) 0 nil])
([nil nil ((#("uint256" 0 7 (fontified t)) . 1476) (undo-tree-id2292 . -7) (undo-tree-id2293 . -7)) nil (25192 8485 773062 0) 0 nil])
([nil nil ((1305 . 1309) (#("    " 0 4 (fontified nil)) . 1304) (undo-tree-id2289 . -4) (undo-tree-id2290 . -4) (undo-tree-id2291 . -4) (1308 . 1309)) nil (25192 8485 773061 0) 0 nil])
([nil nil ((1304 . 1311)) nil (25192 8485 773058 0) 0 nil])
([nil nil ((1311 . 1331)) nil (25192 8485 773058 0) 0 nil])
([nil nil ((1304 . 1309)) nil (25192 8485 773057 0) 0 nil])
([nil nil ((#("aave" 0 4 (fontified t ws-butler-chg chg face font-lock-string-face)) . 1330) (undo-tree-id2275 . -4) (undo-tree-id2276 . 4) (undo-tree-id2277 . -4) (undo-tree-id2278 . -4) (undo-tree-id2279 . -3) (undo-tree-id2280 . -4) (undo-tree-id2281 . -3) (undo-tree-id2282 . -3) (undo-tree-id2283 . -3) (undo-tree-id2284 . -3) (undo-tree-id2285 . -3) (undo-tree-id2286 . -4) (undo-tree-id2287 . 4) (undo-tree-id2288 . -4) 1333) nil (25192 8485 773056 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1340 . 1341) (nil fontified nil 1330 . 1341) (1330 . 1341)) nil (25192 8485 773040 0) 0 nil])
([nil nil ((#("I" 0 1 (fontified t)) . -1542) (undo-tree-id2384 . -1) (undo-tree-id2385 . -1) (undo-tree-id2386 . -1) (undo-tree-id2387 . -1) (undo-tree-id2388 . -1) (undo-tree-id2389 . -1) (undo-tree-id2390 . -1) (undo-tree-id2391 . -1) (undo-tree-id2392 . -1) (undo-tree-id2393 . -1) (undo-tree-id2394 . -1) (undo-tree-id2395 . -1) (undo-tree-id2396 . -1) (undo-tree-id2397 . -1) (undo-tree-id2398 . -1) (undo-tree-id2399 . -1) (undo-tree-id2400 . -1) (undo-tree-id2401 . -1) (undo-tree-id2402 . -1) (undo-tree-id2403 . -1) (undo-tree-id2404 . -1) (undo-tree-id2405 . -1) (undo-tree-id2406 . -1) (undo-tree-id2407 . -1) (undo-tree-id2408 . -1) (undo-tree-id2409 . -1) (undo-tree-id2410 . -1) (undo-tree-id2411 . -1) (undo-tree-id2412 . -1) (undo-tree-id2413 . -1) (undo-tree-id2414 . -1) (undo-tree-id2415 . -1) (undo-tree-id2416 . -1) (undo-tree-id2417 . -1) (undo-tree-id2418 . -1) (undo-tree-id2419 . -1) (undo-tree-id2420 . -1) (undo-tree-id2421 . -1) (undo-tree-id2422 . -1) (undo-tree-id2423 . -1) (undo-tree-id2424 . -1) (undo-tree-id2425 . -1) (undo-tree-id2426 . -1) (undo-tree-id2427 . -1) (undo-tree-id2428 . -1) (undo-tree-id2429 . -1) (undo-tree-id2430 . -1) (undo-tree-id2431 . -1) (undo-tree-id2432 . -1) (undo-tree-id2433 . -1) (undo-tree-id2434 . -1) (undo-tree-id2435 . -1) (undo-tree-id2436 . -1) (undo-tree-id2437 . -1) (undo-tree-id2438 . -1) (undo-tree-id2439 . -1) (undo-tree-id2440 . -1) (undo-tree-id2441 . -1) (undo-tree-id2442 . -1) (undo-tree-id2443 . -1) (undo-tree-id2444 . -1) (undo-tree-id2445 . -1) (undo-tree-id2446 . -1) (undo-tree-id2447 . -1) (undo-tree-id2448 . -1) (undo-tree-id2449 . -1) (undo-tree-id2450 . -1) (undo-tree-id2451 . -1) (undo-tree-id2452 . -1) (undo-tree-id2453 . -1) (undo-tree-id2454 . -1) (undo-tree-id2455 . -1) (undo-tree-id2456 . -1) (undo-tree-id2457 . -1) (undo-tree-id2458 . -1) (undo-tree-id2459 . -1) (undo-tree-id2460 . -1) (undo-tree-id2461 . -1) (undo-tree-id2462 . -1) (undo-tree-id2463 . -1) (undo-tree-id2464 . -1) (undo-tree-id2465 . -1) (undo-tree-id2466 . -1) (undo-tree-id2467 . -1) (undo-tree-id2468 . -1) (undo-tree-id2469 . -1) (undo-tree-id2470 . -1) (undo-tree-id2471 . -1) (undo-tree-id2472 . -1) (undo-tree-id2473 . -1) (undo-tree-id2474 . -1) (undo-tree-id2475 . -1) (undo-tree-id2476 . -1) (undo-tree-id2477 . -1) (undo-tree-id2478 . -1) (undo-tree-id2479 . -1) (undo-tree-id2480 . -1) (undo-tree-id2481 . -1) (undo-tree-id2482 . -1) (undo-tree-id2483 . -1) (undo-tree-id2484 . -1) (undo-tree-id2485 . -1) (undo-tree-id2486 . -1) (undo-tree-id2487 . -1) (undo-tree-id2488 . -1) (undo-tree-id2489 . -1) (undo-tree-id2490 . -1) (undo-tree-id2491 . -1) (undo-tree-id2492 . -1) (undo-tree-id2493 . -1) (#("A" 0 1 (fontified t)) . -1543) (undo-tree-id2494 . -1) (undo-tree-id2495 . -1) (undo-tree-id2496 . -1) (undo-tree-id2497 . -1) (undo-tree-id2498 . -1) (undo-tree-id2499 . -1) (undo-tree-id2500 . -1) (undo-tree-id2501 . -1) (undo-tree-id2502 . -1) (undo-tree-id2503 . -1) (undo-tree-id2504 . -1) (undo-tree-id2505 . -1) (undo-tree-id2506 . -1) (undo-tree-id2507 . -1) (undo-tree-id2508 . -1) (undo-tree-id2509 . -1) (undo-tree-id2510 . -1) (undo-tree-id2511 . -1) (undo-tree-id2512 . -1) (undo-tree-id2513 . -1) (undo-tree-id2514 . -1) (undo-tree-id2515 . -1) (undo-tree-id2516 . -1) (undo-tree-id2517 . -1) (undo-tree-id2518 . -1) (undo-tree-id2519 . -1) (undo-tree-id2520 . -1) (undo-tree-id2521 . -1) (undo-tree-id2522 . -1) (undo-tree-id2523 . -1) (undo-tree-id2524 . -1) (undo-tree-id2525 . -1) (undo-tree-id2526 . -1) (undo-tree-id2527 . -1) (undo-tree-id2528 . -1) (undo-tree-id2529 . -1) (undo-tree-id2530 . -1) (undo-tree-id2531 . -1) (undo-tree-id2532 . -1) (undo-tree-id2533 . -1) (undo-tree-id2534 . -1) (undo-tree-id2535 . -1) (undo-tree-id2536 . -1) (undo-tree-id2537 . -1) (undo-tree-id2538 . -1) (undo-tree-id2539 . -1) (undo-tree-id2540 . -1) (undo-tree-id2541 . -1) (undo-tree-id2542 . -1) (undo-tree-id2543 . -1) (undo-tree-id2544 . -1) (undo-tree-id2545 . -1) (undo-tree-id2546 . -1) (undo-tree-id2547 . -1) (undo-tree-id2548 . -1) (undo-tree-id2549 . -1) (undo-tree-id2550 . -1) (undo-tree-id2551 . -1) (undo-tree-id2552 . -1) (undo-tree-id2553 . -1) (undo-tree-id2554 . -1) (undo-tree-id2555 . -1) (undo-tree-id2556 . -1) (undo-tree-id2557 . -1) (undo-tree-id2558 . -1) (undo-tree-id2559 . -1) (undo-tree-id2560 . -1) (undo-tree-id2561 . -1) (undo-tree-id2562 . -1) (undo-tree-id2563 . -1) (undo-tree-id2564 . -1) (undo-tree-id2565 . -1) (undo-tree-id2566 . -1) (undo-tree-id2567 . -1) (undo-tree-id2568 . -1) (undo-tree-id2569 . -1) (undo-tree-id2570 . -1) (undo-tree-id2571 . -1) (undo-tree-id2572 . -1) (undo-tree-id2573 . -1) (undo-tree-id2574 . -1) (undo-tree-id2575 . -1) (undo-tree-id2576 . -1) (undo-tree-id2577 . -1) (undo-tree-id2578 . -1) (undo-tree-id2579 . -1) (undo-tree-id2580 . -1) (undo-tree-id2581 . -1) (undo-tree-id2582 . -1) (undo-tree-id2583 . -1) (undo-tree-id2584 . -1) (undo-tree-id2585 . -1) (undo-tree-id2586 . -1) (undo-tree-id2587 . -1) (undo-tree-id2588 . -1) (undo-tree-id2589 . -1) (undo-tree-id2590 . -1) (undo-tree-id2591 . -1) (undo-tree-id2592 . -1) (undo-tree-id2593 . -1) (#("A" 0 1 (fontified t)) . -1544) (undo-tree-id2594 . -1) (undo-tree-id2595 . -1) (undo-tree-id2596 . -1) (undo-tree-id2597 . -1) (undo-tree-id2598 . -1) (undo-tree-id2599 . -1) (undo-tree-id2600 . -1) (undo-tree-id2601 . -1) (undo-tree-id2602 . -1) (undo-tree-id2603 . -1) (undo-tree-id2604 . -1) (undo-tree-id2605 . -1) (undo-tree-id2606 . -1) (undo-tree-id2607 . -1) (undo-tree-id2608 . -1) (undo-tree-id2609 . -1) (undo-tree-id2610 . -1) (undo-tree-id2611 . -1) (undo-tree-id2612 . -1) (undo-tree-id2613 . -1) (undo-tree-id2614 . -1) (undo-tree-id2615 . -1) (undo-tree-id2616 . -1) (undo-tree-id2617 . -1) (undo-tree-id2618 . -1) (undo-tree-id2619 . -1) (undo-tree-id2620 . -1) (undo-tree-id2621 . -1) (undo-tree-id2622 . -1) (undo-tree-id2623 . -1) (undo-tree-id2624 . -1) (undo-tree-id2625 . -1) (undo-tree-id2626 . -1) (undo-tree-id2627 . -1) (undo-tree-id2628 . -1) (undo-tree-id2629 . -1) (undo-tree-id2630 . -1) (undo-tree-id2631 . -1) (undo-tree-id2632 . -1) (undo-tree-id2633 . -1) (undo-tree-id2634 . -1) (undo-tree-id2635 . -1) (undo-tree-id2636 . -1) (undo-tree-id2637 . -1) (undo-tree-id2638 . -1) (undo-tree-id2639 . -1) (undo-tree-id2640 . -1) (undo-tree-id2641 . -1) (undo-tree-id2642 . -1) (undo-tree-id2643 . -1) (undo-tree-id2644 . -1) (undo-tree-id2645 . -1) (undo-tree-id2646 . -1) (undo-tree-id2647 . -1) (undo-tree-id2648 . -1) (undo-tree-id2649 . -1) (undo-tree-id2650 . -1) (undo-tree-id2651 . -1) (undo-tree-id2652 . -1) (undo-tree-id2653 . -1) (undo-tree-id2654 . -1) (undo-tree-id2655 . -1) (undo-tree-id2656 . -1) (undo-tree-id2657 . -1) (undo-tree-id2658 . -1) (undo-tree-id2659 . -1) (undo-tree-id2660 . -1) (undo-tree-id2661 . -1) (undo-tree-id2662 . -1) (undo-tree-id2663 . -1) (undo-tree-id2664 . -1) (undo-tree-id2665 . -1) (undo-tree-id2666 . -1) (undo-tree-id2667 . -1) (undo-tree-id2668 . -1) (undo-tree-id2669 . -1) (undo-tree-id2670 . -1) (undo-tree-id2671 . -1) (undo-tree-id2672 . -1) (undo-tree-id2673 . -1) (undo-tree-id2674 . -1) (undo-tree-id2675 . -1) (undo-tree-id2676 . -1) (undo-tree-id2677 . -1) (undo-tree-id2678 . -1) (undo-tree-id2679 . -1) (undo-tree-id2680 . -1) (undo-tree-id2681 . -1) (undo-tree-id2682 . -1) (undo-tree-id2683 . -1) (#("V" 0 1 (fontified t)) . -1545) (undo-tree-id2684 . -1) (undo-tree-id2685 . -1) (undo-tree-id2686 . -1) (undo-tree-id2687 . -1) (undo-tree-id2688 . -1) (undo-tree-id2689 . -1) (undo-tree-id2690 . -1) (undo-tree-id2691 . -1) (undo-tree-id2692 . -1) (undo-tree-id2693 . -1) (undo-tree-id2694 . -1) (undo-tree-id2695 . -1) (undo-tree-id2696 . -1) (undo-tree-id2697 . -1) (undo-tree-id2698 . -1) (undo-tree-id2699 . -1) (undo-tree-id2700 . -1) (undo-tree-id2701 . -1) (undo-tree-id2702 . -1) (undo-tree-id2703 . -1) (undo-tree-id2704 . -1) (undo-tree-id2705 . -1) (undo-tree-id2706 . -1) (undo-tree-id2707 . -1) (undo-tree-id2708 . -1) (undo-tree-id2709 . -1) (undo-tree-id2710 . -1) (undo-tree-id2711 . -1) (undo-tree-id2712 . -1) (undo-tree-id2713 . -1) (undo-tree-id2714 . -1) (undo-tree-id2715 . -1) (undo-tree-id2716 . -1) (undo-tree-id2717 . -1) (undo-tree-id2718 . -1) (undo-tree-id2719 . -1) (undo-tree-id2720 . -1) (undo-tree-id2721 . -1) (undo-tree-id2722 . -1) (undo-tree-id2723 . -1) (undo-tree-id2724 . -1) (undo-tree-id2725 . -1) (undo-tree-id2726 . -1) (undo-tree-id2727 . -1) (undo-tree-id2728 . -1) (undo-tree-id2729 . -1) (undo-tree-id2730 . -1) (undo-tree-id2731 . -1) (undo-tree-id2732 . -1) (undo-tree-id2733 . -1) (undo-tree-id2734 . -1) (undo-tree-id2735 . -1) (undo-tree-id2736 . -1) (undo-tree-id2737 . -1) (undo-tree-id2738 . -1) (undo-tree-id2739 . -1) (undo-tree-id2740 . -1) (undo-tree-id2741 . -1) (undo-tree-id2742 . -1) (undo-tree-id2743 . -1) (undo-tree-id2744 . -1) (undo-tree-id2745 . -1) (undo-tree-id2746 . -1) (undo-tree-id2747 . -1) (undo-tree-id2748 . -1) (undo-tree-id2749 . -1) (undo-tree-id2750 . -1) (undo-tree-id2751 . -1) (undo-tree-id2752 . -1) (undo-tree-id2753 . -1) (undo-tree-id2754 . -1) (undo-tree-id2755 . -1) (undo-tree-id2756 . -1) (undo-tree-id2757 . -1) (undo-tree-id2758 . -1) (undo-tree-id2759 . -1) (undo-tree-id2760 . -1) (undo-tree-id2761 . -1) (undo-tree-id2762 . -1) (undo-tree-id2763 . -1) (#("E" 0 1 (fontified t)) . -1546) (undo-tree-id2764 . -1) (undo-tree-id2765 . -1) (undo-tree-id2766 . -1) (undo-tree-id2767 . -1) (undo-tree-id2768 . -1) (undo-tree-id2769 . -1) (undo-tree-id2770 . -1) (undo-tree-id2771 . -1) (undo-tree-id2772 . -1) (undo-tree-id2773 . -1) (undo-tree-id2774 . -1) (undo-tree-id2775 . -1) (undo-tree-id2776 . -1) (undo-tree-id2777 . -1) (undo-tree-id2778 . -1) (undo-tree-id2779 . -1) (undo-tree-id2780 . -1) (undo-tree-id2781 . -1) (undo-tree-id2782 . -1) (undo-tree-id2783 . -1) (undo-tree-id2784 . -1) (undo-tree-id2785 . -1) (undo-tree-id2786 . -1) (undo-tree-id2787 . -1) (undo-tree-id2788 . -1) (undo-tree-id2789 . -1) (undo-tree-id2790 . -1) (undo-tree-id2791 . -1) (undo-tree-id2792 . -1) (undo-tree-id2793 . -1) (undo-tree-id2794 . -1) (undo-tree-id2795 . -1) (undo-tree-id2796 . -1) (undo-tree-id2797 . -1) (undo-tree-id2798 . -1) (undo-tree-id2799 . -1) (undo-tree-id2800 . -1) (undo-tree-id2801 . -1) (undo-tree-id2802 . -1) (undo-tree-id2803 . -1) (undo-tree-id2804 . -1) (undo-tree-id2805 . -1) (undo-tree-id2806 . -1) (undo-tree-id2807 . -1) (undo-tree-id2808 . -1) (undo-tree-id2809 . -1) (undo-tree-id2810 . -1) (undo-tree-id2811 . -1) (undo-tree-id2812 . -1) (undo-tree-id2813 . -1) (undo-tree-id2814 . -1) (undo-tree-id2815 . -1) (undo-tree-id2816 . -1) (undo-tree-id2817 . -1) (undo-tree-id2818 . -1) (undo-tree-id2819 . -1) (undo-tree-id2820 . -1) (undo-tree-id2821 . -1) (undo-tree-id2822 . -1) (undo-tree-id2823 . -1) (undo-tree-id2824 . -1) (undo-tree-id2825 . -1) (undo-tree-id2826 . -1) (undo-tree-id2827 . -1) (undo-tree-id2828 . -1) (undo-tree-id2829 . -1) (undo-tree-id2830 . -1) (undo-tree-id2831 . -1) (undo-tree-id2832 . -1) (undo-tree-id2833 . -1) (#("(" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . -1547) (undo-tree-id2834 . -1) (undo-tree-id2835 . -1) (undo-tree-id2836 . -1) (undo-tree-id2837 . -1) (undo-tree-id2838 . -1) (undo-tree-id2839 . -1) (undo-tree-id2840 . -1) (undo-tree-id2841 . -1) (undo-tree-id2842 . -1) (undo-tree-id2843 . -1) (undo-tree-id2844 . -1) (undo-tree-id2845 . -1) (undo-tree-id2846 . -1) (undo-tree-id2847 . -1) (undo-tree-id2848 . -1) (undo-tree-id2849 . -1) (undo-tree-id2850 . -1) (undo-tree-id2851 . -1) (undo-tree-id2852 . -1) (undo-tree-id2853 . -1) (undo-tree-id2854 . -1) (undo-tree-id2855 . -1) (undo-tree-id2856 . -1) (undo-tree-id2857 . -1) (undo-tree-id2858 . -1) (undo-tree-id2859 . -1) (undo-tree-id2860 . -1) (undo-tree-id2861 . -1) (undo-tree-id2862 . -1) (undo-tree-id2863 . -1) (undo-tree-id2864 . -1) (undo-tree-id2865 . -1) (undo-tree-id2866 . -1) (undo-tree-id2867 . -1) (undo-tree-id2868 . -1) (undo-tree-id2869 . -1) (undo-tree-id2870 . -1) (undo-tree-id2871 . -1) (undo-tree-id2872 . -1) (undo-tree-id2873 . -1) (undo-tree-id2874 . -1) (undo-tree-id2875 . -1) (undo-tree-id2876 . -1) (undo-tree-id2877 . -1) (undo-tree-id2878 . -1) (undo-tree-id2879 . -1) (undo-tree-id2880 . -1) (undo-tree-id2881 . -1) (undo-tree-id2882 . -1) (undo-tree-id2883 . -1) (undo-tree-id2884 . -1) (undo-tree-id2885 . -1) (undo-tree-id2886 . -1) (undo-tree-id2887 . -1) (undo-tree-id2888 . -1) (undo-tree-id2889 . -1) (undo-tree-id2890 . -1) (undo-tree-id2891 . -1) (#("a" 0 1 (fontified t)) . -1548) (undo-tree-id2892 . -1) (undo-tree-id2893 . -1) (undo-tree-id2894 . -1) (undo-tree-id2895 . -1) (undo-tree-id2896 . -1) (undo-tree-id2897 . -1) (undo-tree-id2898 . -1) (undo-tree-id2899 . -1) (undo-tree-id2900 . -1) (undo-tree-id2901 . -1) (undo-tree-id2902 . -1) (undo-tree-id2903 . -1) (undo-tree-id2904 . -1) (undo-tree-id2905 . -1) (undo-tree-id2906 . -1) (undo-tree-id2907 . -1) (undo-tree-id2908 . -1) (undo-tree-id2909 . -1) (undo-tree-id2910 . -1) (undo-tree-id2911 . -1) (undo-tree-id2912 . -1) (undo-tree-id2913 . -1) (undo-tree-id2914 . -1) (undo-tree-id2915 . -1) (undo-tree-id2916 . -1) (undo-tree-id2917 . -1) (undo-tree-id2918 . -1) (undo-tree-id2919 . -1) (undo-tree-id2920 . -1) (undo-tree-id2921 . -1) (undo-tree-id2922 . -1) (undo-tree-id2923 . -1) (undo-tree-id2924 . -1) (undo-tree-id2925 . -1) (undo-tree-id2926 . -1) (undo-tree-id2927 . -1) (undo-tree-id2928 . -1) (undo-tree-id2929 . -1) (undo-tree-id2930 . -1) (undo-tree-id2931 . -1) (undo-tree-id2932 . -1) (undo-tree-id2933 . -1) (undo-tree-id2934 . -1) (undo-tree-id2935 . -1) (undo-tree-id2936 . -1) (undo-tree-id2937 . -1) (#("a" 0 1 (fontified t)) . -1549) (undo-tree-id2938 . -1) (undo-tree-id2939 . -1) (undo-tree-id2940 . -1) (undo-tree-id2941 . -1) (undo-tree-id2942 . -1) (undo-tree-id2943 . -1) (undo-tree-id2944 . -1) (undo-tree-id2945 . -1) (undo-tree-id2946 . -1) (undo-tree-id2947 . -1) (undo-tree-id2948 . -1) (undo-tree-id2949 . -1) (undo-tree-id2950 . -1) (undo-tree-id2951 . -1) (undo-tree-id2952 . -1) (undo-tree-id2953 . -1) (undo-tree-id2954 . -1) (undo-tree-id2955 . -1) (undo-tree-id2956 . -1) (undo-tree-id2957 . -1) (undo-tree-id2958 . -1) (undo-tree-id2959 . -1) (undo-tree-id2960 . -1) (undo-tree-id2961 . -1) (undo-tree-id2962 . -1) (undo-tree-id2963 . -1) (undo-tree-id2964 . -1) (undo-tree-id2965 . -1) (undo-tree-id2966 . -1) (undo-tree-id2967 . -1) (undo-tree-id2968 . -1) (undo-tree-id2969 . -1) (undo-tree-id2970 . -1) (undo-tree-id2971 . -1) (undo-tree-id2972 . -1) (undo-tree-id2973 . -1) (#("v" 0 1 (fontified t)) . -1550) (undo-tree-id2974 . -1) (undo-tree-id2975 . -1) (undo-tree-id2976 . -1) (undo-tree-id2977 . -1) (undo-tree-id2978 . -1) (undo-tree-id2979 . -1) (undo-tree-id2980 . -1) (undo-tree-id2981 . -1) (undo-tree-id2982 . -1) (undo-tree-id2983 . -1) (undo-tree-id2984 . -1) (undo-tree-id2985 . -1) (undo-tree-id2986 . -1) (undo-tree-id2987 . -1) (undo-tree-id2988 . -1) (undo-tree-id2989 . -1) (undo-tree-id2990 . -1) (undo-tree-id2991 . -1) (undo-tree-id2992 . -1) (undo-tree-id2993 . -1) (undo-tree-id2994 . -1) (undo-tree-id2995 . -1) (undo-tree-id2996 . -1) (undo-tree-id2997 . -1) (undo-tree-id2998 . -1) (#("e" 0 1 (fontified t)) . -1551) (undo-tree-id2999 . -1) (undo-tree-id3000 . -1) (undo-tree-id3001 . -1) (undo-tree-id3002 . -1) (undo-tree-id3003 . -1) (undo-tree-id3004 . -1) (undo-tree-id3005 . -1) (undo-tree-id3006 . -1) (undo-tree-id3007 . -1) (undo-tree-id3008 . -1) (undo-tree-id3009 . -1) (undo-tree-id3010 . -1) (undo-tree-id3011 . -1) (undo-tree-id3012 . -1) (undo-tree-id3013 . -1) (#("A" 0 1 (fontified t)) . -1552) (undo-tree-id3014 . -1) (undo-tree-id3015 . -1) (undo-tree-id3016 . -1) (undo-tree-id3017 . -1) (undo-tree-id3018 . -1) (#("d" 0 1 (fontified t)) . -1553) (undo-tree-id3019 . -1) (undo-tree-id3020 . -1) (#("d" 0 1 (fontified t)) . -1554) (undo-tree-id3021 . -1) (undo-tree-id3022 . -1) (#("r" 0 1 (fontified t)) . -1555) (undo-tree-id3023 . -1) (undo-tree-id3024 . -1) (#("e" 0 1 (fontified t)) . -1556) (undo-tree-id3025 . -1) (undo-tree-id3026 . -1) (#("s" 0 1 (fontified t)) . -1557) (undo-tree-id3027 . -1) (undo-tree-id3028 . -1) (#("s" 0 1 (fontified t)) . -1558) (undo-tree-id3029 . -1) (undo-tree-id3030 . -1) (#(")" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . -1559) (undo-tree-id3031 . -1) (undo-tree-id3032 . 1) (undo-tree-id3033 . -1) 1560 (t 25192 8485 777302 305000)) nil (25192 8494 481325 0) 0 nil])
([nil nil ((1542 . 1546)) nil (25192 8494 481040 0) 0 nil])
([nil nil ((1542 . 1546) (#("aa" 0 2 (fontified nil ws-butler-chg chg)) . -1542) (1542 . 1544) (#("aave" 0 4 (fontified t ws-butler-chg chg)) . -1542) (undo-tree-id2304 . -4) (undo-tree-id2305 . -4) (undo-tree-id2306 . -1) (undo-tree-id2307 . -1) (undo-tree-id2308 . -1) (undo-tree-id2309 . -1) (undo-tree-id2310 . -1) (undo-tree-id2311 . -1) (undo-tree-id2312 . -1) (undo-tree-id2313 . -1) (undo-tree-id2314 . -1) (undo-tree-id2315 . -2) (undo-tree-id2316 . -2) (undo-tree-id2317 . -1) (undo-tree-id2318 . -2) (undo-tree-id2319 . -2) (undo-tree-id2320 . -2) (undo-tree-id2321 . -2) (undo-tree-id2322 . -2) (undo-tree-id2323 . -2) (undo-tree-id2324 . -2) (undo-tree-id2325 . -2) (undo-tree-id2326 . -2) (undo-tree-id2327 . -2) (undo-tree-id2328 . -2) (undo-tree-id2329 . -2) (undo-tree-id2330 . -2) (undo-tree-id2331 . -2) (undo-tree-id2332 . -2) (undo-tree-id2333 . -2) (undo-tree-id2334 . -2) (undo-tree-id2335 . -2) (undo-tree-id2336 . -2) (undo-tree-id2337 . -2) (undo-tree-id2338 . -2) (undo-tree-id2339 . -2) (undo-tree-id2340 . -2) (undo-tree-id2341 . -2) (undo-tree-id2342 . -2) (undo-tree-id2343 . -2) (undo-tree-id2344 . -2) (undo-tree-id2345 . -3) (undo-tree-id2346 . -3) (undo-tree-id2347 . -3) (undo-tree-id2348 . -3) (undo-tree-id2349 . -3) (undo-tree-id2350 . -3) (undo-tree-id2351 . -3) (undo-tree-id2352 . -2) (undo-tree-id2353 . -3) (undo-tree-id2354 . -3) (undo-tree-id2355 . -3) (undo-tree-id2356 . -3) (undo-tree-id2357 . -3) (undo-tree-id2358 . -3) (undo-tree-id2359 . -3) (undo-tree-id2360 . -3) (undo-tree-id2361 . -4) (undo-tree-id2362 . -4) (undo-tree-id2363 . -4) (undo-tree-id2364 . -4) (undo-tree-id2365 . -4) (undo-tree-id2366 . -4) (undo-tree-id2367 . -4) (undo-tree-id2368 . -3) (undo-tree-id2369 . -4) (undo-tree-id2370 . -4) (undo-tree-id2371 . -4) (undo-tree-id2372 . -4) (undo-tree-id2373 . -4) (undo-tree-id2374 . -4) (undo-tree-id2375 . -4) (undo-tree-id2376 . -4) (undo-tree-id2377 . -4) (undo-tree-id2378 . -4) (undo-tree-id2379 . -4) (undo-tree-id2380 . -4) (undo-tree-id2381 . -4) (undo-tree-id2382 . -4) (undo-tree-id2383 . -4) 1546) nil (25192 8494 481035 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -1566) (undo-tree-id3034 . -1) (undo-tree-id3035 . -1) (undo-tree-id3036 . -1) (undo-tree-id3037 . -1) (undo-tree-id3038 . -1) (undo-tree-id3039 . -1) (undo-tree-id3040 . -1) (undo-tree-id3041 . -1) (undo-tree-id3042 . -1) (undo-tree-id3043 . -1) (undo-tree-id3044 . -1) (undo-tree-id3045 . -1) (undo-tree-id3046 . -1) (undo-tree-id3047 . -1) (undo-tree-id3048 . -1) (undo-tree-id3049 . -1) (undo-tree-id3050 . -1) (#("d" 0 1 (fontified t)) . -1567) (undo-tree-id3051 . -1) (undo-tree-id3052 . -1) (#("d" 0 1 (fontified t)) . -1568) (undo-tree-id3053 . -1) (#("r" 0 1 (fontified t)) . -1569) (undo-tree-id3054 . -1) (#("e" 0 1 (fontified t)) . -1570) (undo-tree-id3055 . -1) (#("s" 0 1 (fontified t)) . -1571) (undo-tree-id3056 . -1) (#("s" 0 1 (fontified t)) . -1572) (undo-tree-id3057 . -1) (#("(" 0 1 (fontified nil face (rainbow-delimiters-depth-2-face))) . -1573) (undo-tree-id3058 . -1) (#(")" 0 1 (fontified t ws-butler-chg delete face (rainbow-delimiters-depth-2-face))) . 1574) (#("t" 0 1 (fontified t)) . -1574) (undo-tree-id3059 . -1) (#("h" 0 1 (fontified t)) . -1575) (undo-tree-id3060 . -1) (#("i" 0 1 (fontified t)) . -1576) (undo-tree-id3061 . -1) (#("s" 0 1 (fontified t)) . -1577) (undo-tree-id3062 . -1) (#(")" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . -1578) (undo-tree-id3063 . -1) (undo-tree-id3064 . 1) (undo-tree-id3065 . -1) 1579 (t 25192 8494 485291 359000)) nil (25192 8502 828227 0) 0 nil])
([nil nil ((1566 . 1567)) nil (25192 8502 828194 0) 0 nil])
([nil nil ((1566 . 1578) (#(");" 0 1 (fontified t face (rainbow-delimiters-depth-1-face)) 1 2 (fontified t)) . 1566) (undo-tree-id3066 . -1) (undo-tree-id3067 . -1) (undo-tree-id3068 . -1) (undo-tree-id3069 . -1) (undo-tree-id3070 . -1) (undo-tree-id3071 . -1) (undo-tree-id3072 . -1) (undo-tree-id3073 . -1) (undo-tree-id3074 . -1) (undo-tree-id3075 . -1) (undo-tree-id3076 . -1) (undo-tree-id3077 . -1) (undo-tree-id3078 . -1) (undo-tree-id3079 . -1) (undo-tree-id3080 . -1) (undo-tree-id3081 . -1) (undo-tree-id3082 . -1) (undo-tree-id3083 . -1) (undo-tree-id3084 . -1) (undo-tree-id3085 . -1) (undo-tree-id3086 . -1) (undo-tree-id3087 . -1) (undo-tree-id3088 . -1) (undo-tree-id3089 . -1) (undo-tree-id3090 . -1) (undo-tree-id3091 . -1) (undo-tree-id3092 . -1) (undo-tree-id3093 . -1) (undo-tree-id3094 . -1) (undo-tree-id3095 . -1) (undo-tree-id3096 . -1) (undo-tree-id3097 . -1) (undo-tree-id3098 . -1) (undo-tree-id3099 . -1) (undo-tree-id3100 . -1) (undo-tree-id3101 . -1) (undo-tree-id3102 . -1) (undo-tree-id3103 . -1) (undo-tree-id3104 . -1) (undo-tree-id3105 . -1) (undo-tree-id3106 . -1) (undo-tree-id3107 . -1) (undo-tree-id3108 . -1) (undo-tree-id3109 . -1) (undo-tree-id3110 . -1) (undo-tree-id3111 . -1) (undo-tree-id3112 . -1) (undo-tree-id3113 . -1) (undo-tree-id3114 . -1) (undo-tree-id3115 . -1) (undo-tree-id3116 . -1) (undo-tree-id3117 . -1) (undo-tree-id3118 . -1) (undo-tree-id3119 . -1) (undo-tree-id3120 . -1) (undo-tree-id3121 . -1) (undo-tree-id3122 . -1) (undo-tree-id3123 . -1) (undo-tree-id3124 . -1) (undo-tree-id3125 . -1) (undo-tree-id3126 . -1) (undo-tree-id3127 . -1) (undo-tree-id3128 . -1) (undo-tree-id3129 . -1) (undo-tree-id3130 . -1) (undo-tree-id3131 . -1) (undo-tree-id3132 . -1) (undo-tree-id3133 . -1) (undo-tree-id3134 . -1) (undo-tree-id3135 . -1) (undo-tree-id3136 . -1) (undo-tree-id3137 . -1) (undo-tree-id3138 . -1) (undo-tree-id3139 . -1) (undo-tree-id3140 . -1) (undo-tree-id3141 . -1) (undo-tree-id3142 . -1) (undo-tree-id3143 . -1) (undo-tree-id3144 . -1) (undo-tree-id3145 . -1) (undo-tree-id3146 . -1) (undo-tree-id3147 . -1) (undo-tree-id3148 . -1) (undo-tree-id3149 . -1) (undo-tree-id3150 . -1) (undo-tree-id3151 . -1) (undo-tree-id3152 . -1) (undo-tree-id3153 . -1) (undo-tree-id3154 . -1) (undo-tree-id3155 . -1) (undo-tree-id3156 . -1) (undo-tree-id3157 . -1) (undo-tree-id3158 . -1) (undo-tree-id3159 . -1) (undo-tree-id3160 . -1) (undo-tree-id3161 . -1) (t 25192 8502 832037 253000)) nil (25192 8508 929351 0) 0 nil])
([nil nil ((1578 . 1583) (t 25192 8508 933267 642000)) nil (25192 8552 945651 0) 0 nil])
([nil nil ((1351 . 1359) (#("             " 0 3 (fontified nil) 3 12 (fontified nil) 12 13 (fontified nil)) . 1350) (undo-tree-id3375 . -13) (undo-tree-id3376 . -12) (1363 . 1364)) nil (25192 8552 945650 0) 0 nil])
([nil nil ((1380 . 1388) (#("             " 0 12 (fontified nil) 12 13 (fontified nil)) . 1379) (undo-tree-id3373 . -13) (undo-tree-id3374 . -12) (1392 . 1393)) nil (25192 8552 945649 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1349) (undo-tree-id3369 . -1) (undo-tree-id3370 . -1) (undo-tree-id3371 . -1) (undo-tree-id3372 . -1)) nil (25192 8552 945647 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 1349) (undo-tree-id3368 . -1)) nil (25192 8552 945645 0) 0 nil])
([nil nil ((#("        " 0 1 (ws-butler-chg delete fontified t) 1 8 (ws-butler-chg chg fontified t)) . -1349) (undo-tree-id3367 . -8) 1357) nil (25192 8552 945644 0) 0 nil])
([nil nil ((#("        " 0 8 (ws-butler-chg chg fontified t)) . -1370) (undo-tree-id3366 . -8) 1378) nil (25192 8552 945642 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1368) (undo-tree-id3359 . -1) (undo-tree-id3360 . -1) (undo-tree-id3361 . -1) (undo-tree-id3362 . -1) (undo-tree-id3363 . -1) (#("
" 0 1 (ws-butler-chg delete fontified t)) . -1369) (undo-tree-id3364 . -1) (undo-tree-id3365 . -1) 1370) nil (25192 8552 945641 0) 0 nil])
([nil nil ((#("             " 0 12 (fontified t) 12 13 (fontified t)) . -1382) (undo-tree-id3357 . -13) (undo-tree-id3358 . -12) 1395) nil (25192 8552 945637 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1381) (undo-tree-id3352 . -1) (undo-tree-id3353 . -1) (undo-tree-id3354 . -1) (undo-tree-id3355 . -1) (undo-tree-id3356 . -1) 1382) nil (25192 8552 945636 0) 0 nil])
([nil nil ((#("             " 0 12 (fontified t) 12 13 (fontified t)) . -1402) (undo-tree-id3350 . -13) (undo-tree-id3351 . -12) 1415) nil (25192 8552 945633 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1401) (undo-tree-id3345 . -1) (undo-tree-id3346 . -1) (undo-tree-id3347 . -1) (undo-tree-id3348 . -1) (undo-tree-id3349 . -1) 1402) nil (25192 8552 945632 0) 0 nil])
([nil nil ((#("             " 0 12 (fontified t) 12 13 (fontified t)) . -1430) (undo-tree-id3343 . -13) (undo-tree-id3344 . -12) 1443) nil (25192 8552 945629 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1429) (undo-tree-id3337 . -1) (undo-tree-id3338 . -1) (undo-tree-id3339 . -1) (undo-tree-id3340 . -1) (undo-tree-id3341 . -1) (undo-tree-id3342 . -1) 1430) nil (25192 8552 945627 0) 0 nil])
([nil nil ((#("             " 0 12 (fontified t) 12 13 (fontified t)) . -1434) (undo-tree-id3315 . -13) (undo-tree-id3316 . -12) (undo-tree-id3317 . -13) (undo-tree-id3318 . -13) (undo-tree-id3319 . -13) (undo-tree-id3320 . -13) (undo-tree-id3321 . -13) (undo-tree-id3322 . -13) (undo-tree-id3323 . -13) (undo-tree-id3324 . -13) (undo-tree-id3325 . -13) (undo-tree-id3326 . -13) (undo-tree-id3327 . -13) (undo-tree-id3328 . -13) (undo-tree-id3329 . -13) (undo-tree-id3330 . -13) (undo-tree-id3331 . -13) (undo-tree-id3332 . -13) (undo-tree-id3333 . -13) (undo-tree-id3334 . -13) (undo-tree-id3335 . -13) (undo-tree-id3336 . -13) 1447) nil (25192 8552 945624 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1433) (undo-tree-id3277 . -1) (undo-tree-id3278 . -1) (undo-tree-id3279 . -1) (undo-tree-id3280 . -1) (undo-tree-id3281 . -1) (undo-tree-id3282 . -1) (undo-tree-id3283 . -1) (undo-tree-id3284 . -1) (undo-tree-id3285 . -1) (undo-tree-id3286 . -1) (undo-tree-id3287 . -1) (undo-tree-id3288 . -1) (undo-tree-id3289 . -1) (undo-tree-id3290 . -1) (undo-tree-id3291 . -1) (undo-tree-id3292 . -1) (undo-tree-id3293 . -1) (undo-tree-id3294 . -1) (undo-tree-id3295 . -1) (undo-tree-id3296 . -1) (undo-tree-id3297 . -1) (undo-tree-id3298 . -1) (undo-tree-id3299 . -1) (undo-tree-id3300 . -1) (undo-tree-id3301 . -1) (undo-tree-id3302 . -1) (undo-tree-id3303 . -1) (undo-tree-id3304 . -1) (undo-tree-id3305 . -1) (undo-tree-id3306 . -1) (undo-tree-id3307 . -1) (undo-tree-id3308 . -1) (undo-tree-id3309 . -1) (undo-tree-id3310 . -1) (undo-tree-id3311 . -1) (undo-tree-id3312 . -1) (undo-tree-id3313 . -1) (undo-tree-id3314 . -1) 1434) nil (25192 8552 945614 0) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -1446) (undo-tree-id3233 . -8) (undo-tree-id3234 . -8) (undo-tree-id3235 . -8) (undo-tree-id3236 . -8) (undo-tree-id3237 . -8) (undo-tree-id3238 . -8) (undo-tree-id3239 . -8) (undo-tree-id3240 . -8) (undo-tree-id3241 . -8) (undo-tree-id3242 . -8) (undo-tree-id3243 . -8) (undo-tree-id3244 . -8) (undo-tree-id3245 . -8) (undo-tree-id3246 . -8) (undo-tree-id3247 . -8) (undo-tree-id3248 . -8) (undo-tree-id3249 . -8) (undo-tree-id3250 . -8) (undo-tree-id3251 . -8) (undo-tree-id3252 . -8) (undo-tree-id3253 . -8) (undo-tree-id3254 . -8) (undo-tree-id3255 . -8) (undo-tree-id3256 . -8) (undo-tree-id3257 . -8) (undo-tree-id3258 . -8) (undo-tree-id3259 . -8) (undo-tree-id3260 . -8) (undo-tree-id3261 . -8) (undo-tree-id3262 . -8) (undo-tree-id3263 . -8) (undo-tree-id3264 . -8) (undo-tree-id3265 . -8) (undo-tree-id3266 . -8) (undo-tree-id3267 . -8) (undo-tree-id3268 . -8) (undo-tree-id3269 . -8) (undo-tree-id3270 . -8) (undo-tree-id3271 . -8) (undo-tree-id3272 . -8) (undo-tree-id3273 . -8) (undo-tree-id3274 . -8) (undo-tree-id3275 . -8) (undo-tree-id3276 . -8) 1454) nil (25192 8552 945597 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1445) (undo-tree-id3166 . -1) (undo-tree-id3167 . -1) (undo-tree-id3168 . -1) (undo-tree-id3169 . -1) (undo-tree-id3170 . -1) (undo-tree-id3171 . -1) (undo-tree-id3172 . -1) (undo-tree-id3173 . -1) (undo-tree-id3174 . -1) (undo-tree-id3175 . -1) (undo-tree-id3176 . -1) (undo-tree-id3177 . -1) (undo-tree-id3178 . -1) (undo-tree-id3179 . -1) (undo-tree-id3180 . -1) (undo-tree-id3181 . -1) (undo-tree-id3182 . -1) (undo-tree-id3183 . -1) (undo-tree-id3184 . -1) (undo-tree-id3185 . -1) (undo-tree-id3186 . -1) (undo-tree-id3187 . -1) (undo-tree-id3188 . -1) (undo-tree-id3189 . -1) (undo-tree-id3190 . -1) (undo-tree-id3191 . -1) (undo-tree-id3192 . -1) (undo-tree-id3193 . -1) (undo-tree-id3194 . -1) (undo-tree-id3195 . -1) (undo-tree-id3196 . -1) (undo-tree-id3197 . -1) (undo-tree-id3198 . -1) (undo-tree-id3199 . -1) (undo-tree-id3200 . -1) (undo-tree-id3201 . -1) (undo-tree-id3202 . -1) (undo-tree-id3203 . -1) (undo-tree-id3204 . -1) (undo-tree-id3205 . -1) (undo-tree-id3206 . -1) (undo-tree-id3207 . -1) (undo-tree-id3208 . -1) (undo-tree-id3209 . -1) (undo-tree-id3210 . -1) (undo-tree-id3211 . -1) (undo-tree-id3212 . -1) (undo-tree-id3213 . -1) (undo-tree-id3214 . -1) (undo-tree-id3215 . -1) (undo-tree-id3216 . -1) (undo-tree-id3217 . -1) (undo-tree-id3218 . -1) (undo-tree-id3219 . -1) (undo-tree-id3220 . -1) (undo-tree-id3221 . -1) (undo-tree-id3222 . -1) (undo-tree-id3223 . -1) (undo-tree-id3224 . -1) (undo-tree-id3225 . -1) (undo-tree-id3226 . -1) (undo-tree-id3227 . -1) (undo-tree-id3228 . -1) (undo-tree-id3229 . -1) (undo-tree-id3230 . -1) (undo-tree-id3231 . -1) (undo-tree-id3232 . -1) 1446) nil (25192 8552 945574 0) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified nil ws-butler-chg delete)) . 1486) (undo-tree-id3162 . -1) (undo-tree-id3163 . -1) (undo-tree-id3164 . -1) (undo-tree-id3165 . -1) (#("    " 0 4 (ws-butler-chg chg fontified t)) . 1486) 1445) nil (25192 8552 945539 0) 0 nil])
([nil nil ((1447 . 1451) (#(" " 0 1 (fontified nil)) . 1446) (undo-tree-id3377 . -1) (undo-tree-id3378 . -1) (undo-tree-id3379 . -1) (undo-tree-id3380 . -1) (undo-tree-id3381 . -1) (undo-tree-id3382 . -1) (undo-tree-id3383 . -1) (undo-tree-id3384 . -1) (undo-tree-id3385 . -1) (undo-tree-id3386 . -1) (undo-tree-id3387 . -1) (undo-tree-id3388 . -1) (undo-tree-id3389 . -1) (undo-tree-id3390 . -1) (undo-tree-id3391 . -1) (undo-tree-id3392 . -1) (undo-tree-id3393 . -1) (undo-tree-id3394 . -1) (undo-tree-id3395 . -1) (undo-tree-id3396 . -1) (undo-tree-id3397 . -1) (undo-tree-id3398 . -1) (undo-tree-id3399 . -1) (undo-tree-id3400 . -1) (undo-tree-id3401 . -1) (undo-tree-id3402 . -1) (undo-tree-id3403 . -1) (undo-tree-id3404 . -1) (undo-tree-id3405 . -1) (undo-tree-id3406 . -1) (undo-tree-id3407 . -1) (undo-tree-id3408 . -1) (undo-tree-id3409 . -1) (undo-tree-id3410 . -1) (undo-tree-id3411 . -1) (undo-tree-id3412 . -1) (undo-tree-id3413 . -1) (undo-tree-id3414 . -1) (undo-tree-id3415 . -1) (undo-tree-id3416 . -1) (undo-tree-id3417 . -1) (undo-tree-id3418 . -1) (undo-tree-id3419 . -1) (undo-tree-id3420 . -1) (undo-tree-id3421 . -1) (undo-tree-id3422 . -1) (undo-tree-id3423 . -1) (undo-tree-id3424 . -1) (undo-tree-id3425 . -1) (undo-tree-id3426 . -1) (undo-tree-id3427 . -1) (undo-tree-id3428 . -1) (undo-tree-id3429 . -1) (undo-tree-id3430 . -1) (undo-tree-id3431 . -1) (undo-tree-id3432 . -1) (undo-tree-id3433 . -1) (undo-tree-id3434 . -1) (undo-tree-id3435 . -1) (undo-tree-id3436 . -1) (undo-tree-id3437 . -1) (undo-tree-id3438 . -1) (undo-tree-id3439 . -1) (undo-tree-id3440 . -1) (undo-tree-id3441 . -1) (undo-tree-id3442 . -1) (undo-tree-id3443 . -1) (undo-tree-id3444 . -1) (undo-tree-id3445 . -1) (undo-tree-id3446 . -1) (undo-tree-id3447 . -1) (undo-tree-id3448 . -1) (undo-tree-id3449 . -1) (undo-tree-id3450 . -1) (undo-tree-id3451 . -1) (undo-tree-id3452 . -1) (undo-tree-id3453 . -1) (undo-tree-id3454 . -1) (undo-tree-id3455 . -1) (undo-tree-id3456 . -1) (undo-tree-id3457 . -1) (undo-tree-id3458 . -1) (undo-tree-id3459 . -1) (undo-tree-id3460 . -1) (undo-tree-id3461 . -1) (undo-tree-id3462 . -1) (undo-tree-id3463 . -1) (1447 . 1448) (t 25192 8552 949368 252000)) nil (25192 8555 961772 0) 0 nil])
([nil nil ((1490 . 1491) 1451 (t 25192 8555 965543 269000)) nil (25192 8560 154015 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1447) (undo-tree-id3471 . -4) (undo-tree-id3472 . -4) (undo-tree-id3473 . -4) 1451) nil (25192 8560 154013 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1446) (undo-tree-id3464 . -1) (undo-tree-id3465 . -1) (undo-tree-id3466 . -1) (undo-tree-id3467 . -1) (undo-tree-id3468 . -1) (undo-tree-id3469 . -1) (undo-tree-id3470 . -1) 1447) nil (25192 8560 154010 0) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg chg fontified t)) . 1485) 1446) nil (25192 8560 153997 0) 0 nil])
([nil nil ((1484 . 1489) (t 25192 8560 158260 114000)) nil (25192 8567 106144 0) 0 nil])
([nil nil ((1489 . 1515)) nil (25192 8567 106140 0) 0 nil])
([nil nil ((#("assert healthFactor == 100" 0 6 (fontified t face font-lock-keyword-face) 6 26 (fontified t)) . 1489) (undo-tree-id3590 . -26) (undo-tree-id3591 . -26) (undo-tree-id3592 . -26) (undo-tree-id3593 . -26) (undo-tree-id3594 . -26) (undo-tree-id3595 . -26) (t 25192 8567 110215 14000)) nil (25192 8611 656733 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 1489) (undo-tree-id3585 . -1) (undo-tree-id3586 . -1) (undo-tree-id3587 . -1) (undo-tree-id3588 . -1) (undo-tree-id3589 . -1)) nil (25192 8611 656729 0) 0 nil])
([nil nil ((1486 . 1490) (#("    " 0 4 (fontified nil)) . 1485) (undo-tree-id3572 . -4) (undo-tree-id3573 . -4) (undo-tree-id3574 . -4) (undo-tree-id3575 . -4) (undo-tree-id3576 . -4) (undo-tree-id3577 . -4) (undo-tree-id3578 . -4) (undo-tree-id3579 . -4) (undo-tree-id3580 . -4) (undo-tree-id3581 . -4) (undo-tree-id3582 . -4) (undo-tree-id3583 . -4) (undo-tree-id3584 . -4) (1489 . 1490)) nil (25192 8611 656725 0) 0 nil])
([nil nil ((#("

" 0 1 (fontified t ws-butler-chg delete) 1 2 (fontified nil ws-butler-chg delete)) . 1485) (undo-tree-id3474 . -1) (undo-tree-id3475 . -1) (undo-tree-id3476 . -1) (undo-tree-id3477 . -1) (undo-tree-id3478 . -1) (undo-tree-id3479 . -1) (undo-tree-id3480 . -1) (undo-tree-id3481 . -1) (undo-tree-id3482 . -1) (undo-tree-id3483 . -1) (undo-tree-id3484 . -1) (undo-tree-id3485 . -1) (undo-tree-id3486 . -1) (undo-tree-id3487 . -1) (undo-tree-id3488 . -1) (undo-tree-id3489 . -1) (undo-tree-id3490 . -1) (undo-tree-id3491 . -1) (undo-tree-id3492 . -1) (undo-tree-id3493 . -1) (undo-tree-id3494 . -1) (undo-tree-id3495 . -1) (undo-tree-id3496 . -1) (undo-tree-id3497 . -1) (undo-tree-id3498 . -1) (undo-tree-id3499 . -1) (undo-tree-id3500 . -1) (undo-tree-id3501 . -1) (undo-tree-id3502 . -1) (undo-tree-id3503 . -1) (undo-tree-id3504 . -1) (undo-tree-id3505 . -1) (undo-tree-id3506 . -1) (undo-tree-id3507 . -1) (undo-tree-id3508 . -1) (undo-tree-id3509 . -1) (undo-tree-id3510 . -1) (undo-tree-id3511 . -1) (undo-tree-id3512 . -1) (undo-tree-id3513 . -1) (undo-tree-id3514 . -1) (undo-tree-id3515 . -1) (undo-tree-id3516 . -1) (undo-tree-id3517 . -1) (undo-tree-id3518 . -1) (undo-tree-id3519 . -1) (undo-tree-id3520 . -1) (undo-tree-id3521 . -1) (undo-tree-id3522 . -1) (undo-tree-id3523 . -1) (undo-tree-id3524 . -1) (#("    " 0 4 (fontified nil ws-butler-chg chg)) . 1486) (undo-tree-id3525 . -4) (undo-tree-id3526 . -4) (undo-tree-id3527 . -4) (undo-tree-id3528 . -4) (undo-tree-id3529 . -4) (undo-tree-id3530 . -4) (undo-tree-id3531 . -4) (undo-tree-id3532 . -4) (undo-tree-id3533 . -4) (undo-tree-id3534 . -4) (undo-tree-id3535 . -4) (undo-tree-id3536 . -4) (undo-tree-id3537 . -4) (undo-tree-id3538 . -4) (undo-tree-id3539 . -4) (undo-tree-id3540 . -4) (undo-tree-id3541 . -4) (undo-tree-id3542 . -4) (undo-tree-id3543 . -4) (undo-tree-id3544 . -4) (undo-tree-id3545 . -4) (undo-tree-id3546 . -4) (undo-tree-id3547 . -4) (undo-tree-id3548 . -4) (undo-tree-id3549 . -4) (undo-tree-id3550 . -4) (undo-tree-id3551 . -4) (undo-tree-id3552 . -4) (undo-tree-id3553 . -4) (undo-tree-id3554 . -4) (undo-tree-id3555 . -4) (undo-tree-id3556 . -4) (undo-tree-id3557 . -4) (undo-tree-id3558 . -4) (undo-tree-id3559 . -4) (undo-tree-id3560 . -4) (undo-tree-id3561 . -4) (undo-tree-id3562 . -4) (undo-tree-id3563 . -4) (undo-tree-id3564 . -4) (undo-tree-id3565 . -4) (undo-tree-id3566 . -4) (undo-tree-id3567 . -4) (undo-tree-id3568 . -4) (undo-tree-id3569 . -4) (undo-tree-id3570 . -4) (undo-tree-id3571 . -4) (1490 . 1491)) nil (25192 8611 656714 0) 0 nil])
([nil nil ((1485 . 1486) 1490 (t 25192 8611 661053 840000)) nil (25192 8705 400216 0) 0 nil])
([nil nil ((1484 . 1489)) nil (25192 8705 400216 0) 0 nil])
([nil nil ((1489 . 1515)) nil (25192 8705 400215 0) 0 nil])
([nil nil ((#("healthFactor" 0 12 (fontified t ws-butler-chg chg)) . 1496) (undo-tree-id3657 . -12) (undo-tree-id3658 . -6) (undo-tree-id3659 . -6) (undo-tree-id3660 . -12) 1502) nil (25192 8705 400214 0) 0 nil])
([nil nil ((1496 . 1499)) nil (25192 8705 400212 0) 0 nil])
([nil nil ((1496 . 1499) (#("lt" 0 2 (fontified nil ws-butler-chg chg)) . -1496) (1496 . 1498) (#("ltv" 0 3 (fontified t ws-butler-chg chg)) . -1496) (undo-tree-id3597 . -3) (undo-tree-id3598 . -3) (undo-tree-id3599 . -1) (undo-tree-id3600 . -1) (undo-tree-id3601 . -2) (undo-tree-id3602 . -2) (undo-tree-id3603 . -1) (undo-tree-id3604 . -2) (undo-tree-id3605 . -2) (undo-tree-id3606 . -2) (undo-tree-id3607 . -2) (undo-tree-id3608 . -2) (undo-tree-id3609 . -2) (undo-tree-id3610 . -2) (undo-tree-id3611 . -2) (undo-tree-id3612 . -2) (undo-tree-id3613 . -2) (undo-tree-id3614 . -2) (undo-tree-id3615 . -2) (undo-tree-id3616 . -2) (undo-tree-id3617 . -2) (undo-tree-id3618 . -2) (undo-tree-id3619 . -2) (undo-tree-id3620 . -2) (undo-tree-id3621 . -2) (undo-tree-id3622 . -2) (undo-tree-id3623 . -2) (undo-tree-id3624 . -2) (undo-tree-id3625 . -2) (undo-tree-id3626 . -2) (undo-tree-id3627 . -2) (undo-tree-id3628 . -2) (undo-tree-id3629 . -2) (undo-tree-id3630 . -2) (undo-tree-id3631 . -2) (undo-tree-id3632 . -2) (undo-tree-id3633 . -2) (undo-tree-id3634 . -3) (undo-tree-id3635 . -3) (undo-tree-id3636 . -3) (undo-tree-id3637 . -3) (undo-tree-id3638 . -3) (undo-tree-id3639 . -3) (undo-tree-id3640 . -3) (undo-tree-id3641 . -2) (undo-tree-id3642 . -3) (undo-tree-id3643 . -3) (undo-tree-id3644 . -3) (undo-tree-id3645 . -3) (undo-tree-id3646 . -3) (undo-tree-id3647 . -3) (undo-tree-id3648 . -3) (undo-tree-id3649 . -3) (undo-tree-id3650 . -3) (undo-tree-id3651 . -3) (undo-tree-id3652 . -3) (undo-tree-id3653 . -3) (undo-tree-id3654 . -3) (undo-tree-id3655 . -3) (undo-tree-id3656 . -3) 1499) nil (25192 8705 400210 0) 0 nil])
([nil nil ((#("100" 0 3 (fontified t ws-butler-chg chg)) . 1503) (undo-tree-id3596 . -3)) nil (25192 8705 400184 0) 0 nil])
([nil nil ((1503 . 1507)) nil (25192 8705 400173 0) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg chg fontified t)) . 1508) 1507) nil (25192 8705 400168 0) 0 nil])
([nil nil ((526 . 531) (t 25192 8705 404703 728000)) nil (25192 10668 680856 0) 0 nil])
([nil nil ((536 . 541) (#("c" 0 1 (fontified t ws-butler-chg chg)) . -536) (undo-tree-id3663 . -1) (531 . 537)) nil (25192 10668 680855 0) 0 nil])
([nil nil ((#("VariableDebtToken" 0 16 (fontified t) 16 17 (rear-nonsticky t fontified t)) . 546) (undo-tree-id3662 . -12)) nil (25192 10668 680853 0) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 542) (undo-tree-id3661 . -4) 1216) nil (25192 10668 680850 0) 0 nil])
([nil nil ((#("Wei(\"1 ether\")" 0 3 (fontified t) 3 4 (fontified t face (rainbow-delimiters-depth-1-face)) 4 5 (fontified t face font-lock-string-face) 5 6 (fontified t face font-lock-string-face) 6 7 (fontified t face font-lock-string-face) 7 12 (fontified t face font-lock-string-face) 12 13 (fontified t face font-lock-string-face) 13 14 (fontified t face (rainbow-delimiters-depth-1-face))) . 1057) (undo-tree-id3664 . -4) (undo-tree-id3665 . -3) (undo-tree-id3666 . -4) (undo-tree-id3667 . -12) (undo-tree-id3668 . -5) (undo-tree-id3669 . -14) (undo-tree-id3670 . -12) (undo-tree-id3671 . -13) (undo-tree-id3672 . -12) (undo-tree-id3673 . -13) (undo-tree-id3674 . -14) (t 25192 10668 690215 44000)) nil (25192 10749 557082 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1070 . 1071) (nil fontified nil 1070 . 1071) (nil fontified nil 1069 . 1070) (nil fontified nil 1064 . 1069) (nil fontified nil 1063 . 1064) (nil fontified nil 1062 . 1063) (nil fontified nil 1061 . 1062) (nil fontified nil 1060 . 1061) (nil fontified nil 1057 . 1060) (1057 . 1071)) nil (25192 10749 557063 0) 0 nil])
([nil nil ((#("i" 0 1 (fontified t face font-lock-variable-name-face)) . -1045) (undo-tree-id3675 . -1) (undo-tree-id3676 . -1) (undo-tree-id3677 . -1) (undo-tree-id3678 . -1) (undo-tree-id3679 . -1) (undo-tree-id3680 . -1) (undo-tree-id3681 . -1) (undo-tree-id3682 . -1) (undo-tree-id3683 . -1) (undo-tree-id3684 . -1) (undo-tree-id3685 . -1) (undo-tree-id3686 . -1) (undo-tree-id3687 . -1) (undo-tree-id3688 . -1) (undo-tree-id3689 . -1) (undo-tree-id3690 . -1) (undo-tree-id3691 . -1) (undo-tree-id3692 . -1) (undo-tree-id3693 . -1) (undo-tree-id3694 . -1) (undo-tree-id3695 . -1) (undo-tree-id3696 . -1) (undo-tree-id3697 . -1) (undo-tree-id3698 . -1) (undo-tree-id3699 . -1) (undo-tree-id3700 . -1) (undo-tree-id3701 . -1) (undo-tree-id3702 . -1) (undo-tree-id3703 . -1) (undo-tree-id3704 . -1) (undo-tree-id3705 . -1) (undo-tree-id3706 . -1) (undo-tree-id3707 . -1) (undo-tree-id3708 . -1) (undo-tree-id3709 . -1) (undo-tree-id3710 . -1) (undo-tree-id3711 . -1) (undo-tree-id3712 . -1) (undo-tree-id3713 . -1) (undo-tree-id3714 . -1) (undo-tree-id3715 . -1) (undo-tree-id3716 . -1) (undo-tree-id3717 . -1) (undo-tree-id3718 . -1) (undo-tree-id3719 . -1) (undo-tree-id3720 . -1) (undo-tree-id3721 . -1) (#("n" 0 1 (fontified t face font-lock-variable-name-face)) . -1046) (undo-tree-id3722 . -1) (undo-tree-id3723 . -1) (undo-tree-id3724 . -1) (undo-tree-id3725 . -1) (undo-tree-id3726 . -1) (undo-tree-id3727 . -1) (undo-tree-id3728 . -1) (undo-tree-id3729 . -1) (undo-tree-id3730 . -1) (undo-tree-id3731 . -1) (undo-tree-id3732 . -1) (undo-tree-id3733 . -1) (undo-tree-id3734 . -1) (undo-tree-id3735 . -1) (undo-tree-id3736 . -1) (undo-tree-id3737 . -1) (undo-tree-id3738 . -1) (undo-tree-id3739 . -1) (undo-tree-id3740 . -1) (undo-tree-id3741 . -1) (undo-tree-id3742 . -1) (undo-tree-id3743 . -1) (undo-tree-id3744 . -1) (undo-tree-id3745 . -1) (undo-tree-id3746 . -1) (undo-tree-id3747 . -1) (undo-tree-id3748 . -1) (undo-tree-id3749 . -1) (undo-tree-id3750 . -1) (undo-tree-id3751 . -1) (undo-tree-id3752 . -1) (undo-tree-id3753 . -1) (undo-tree-id3754 . -1) (undo-tree-id3755 . -1) (undo-tree-id3756 . -1) (undo-tree-id3757 . -1) (undo-tree-id3758 . -1) (#("t" 0 1 (fontified t face font-lock-variable-name-face)) . -1047) (undo-tree-id3759 . -1) (undo-tree-id3760 . -1) (undo-tree-id3761 . -1) (undo-tree-id3762 . -1) (undo-tree-id3763 . -1) (undo-tree-id3764 . -1) (undo-tree-id3765 . -1) (undo-tree-id3766 . -1) (undo-tree-id3767 . -1) (undo-tree-id3768 . -1) (undo-tree-id3769 . -1) (undo-tree-id3770 . -1) (undo-tree-id3771 . -1) (undo-tree-id3772 . -1) (undo-tree-id3773 . -1) (undo-tree-id3774 . -1) (undo-tree-id3775 . -1) (undo-tree-id3776 . -1) (undo-tree-id3777 . -1) (undo-tree-id3778 . -1) (undo-tree-id3779 . -1) (undo-tree-id3780 . -1) (undo-tree-id3781 . -1) (undo-tree-id3782 . -1) (undo-tree-id3783 . -1) (undo-tree-id3784 . -1) (undo-tree-id3785 . -1) (#(" " 0 1 (fontified t)) . -1048) (undo-tree-id3786 . -1) (undo-tree-id3787 . -1) (undo-tree-id3788 . -1) (undo-tree-id3789 . -1) (undo-tree-id3790 . -1) (undo-tree-id3791 . -1) (undo-tree-id3792 . -1) (undo-tree-id3793 . -1) 1049 (t 25192 10749 561317 314000)) nil (25192 10816 849222 0) 0 nil])
([nil nil ((#("i" 0 1 (fontified t face font-lock-variable-name-face)) . -1072) (undo-tree-id3794 . -1) (undo-tree-id3795 . -1) (#("n" 0 1 (fontified t face font-lock-variable-name-face)) . -1073) (undo-tree-id3796 . -1) (#("t" 0 1 (fontified t face font-lock-variable-name-face)) . -1074) (undo-tree-id3797 . -1) (#(" " 0 1 (fontified t)) . -1075) (undo-tree-id3798 . -1) (t 25192 10816 853447 324000)) nil (25192 10838 531412 0) 0 nil])
([nil nil ((#("    address," 0 7 (fontified t) 7 12 (fontified t)) . 461) (undo-tree-id3803 . -4) (undo-tree-id3804 . -4) (undo-tree-id3805 . -4) (undo-tree-id3806 . -4) (undo-tree-id3807 . -4) (undo-tree-id3808 . -4) (undo-tree-id3809 . -4) (undo-tree-id3810 . -4) (undo-tree-id3811 . -4) (undo-tree-id3812 . -12) (t 25192 10838 536296 692000)) nil (25192 10891 348311 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 461) (undo-tree-id3799 . -1) (undo-tree-id3800 . -1) (undo-tree-id3801 . -1) (undo-tree-id3802 . -1)) nil (25192 10891 348300 0) 0 nil])
([nil nil ((#("variabledebttoken" 0 1 (fontified t face font-lock-string-face) 1 2 (fontified t face font-lock-string-face) 2 9 (fontified t face font-lock-string-face) 9 10 (fontified t face font-lock-string-face) 10 13 (fontified t face font-lock-string-face) 13 14 (fontified t face font-lock-string-face) 14 16 (fontified t face font-lock-string-face) 16 17 (rear-nonsticky t fontified t face font-lock-string-face)) . 784) (undo-tree-id3813 . -17) (undo-tree-id3814 . 17) (undo-tree-id3815 . -17) (undo-tree-id3816 . -17) (undo-tree-id3817 . -17) (undo-tree-id3818 . -17) (undo-tree-id3819 . -17) (undo-tree-id3820 . -17) (undo-tree-id3821 . -17) (undo-tree-id3822 . -17) (undo-tree-id3823 . -17) (undo-tree-id3824 . -17) (undo-tree-id3825 . -17) (undo-tree-id3826 . -17) (undo-tree-id3827 . -17) (undo-tree-id3828 . -17) (undo-tree-id3829 . -17) (undo-tree-id3830 . -17) (undo-tree-id3831 . -17) (undo-tree-id3832 . -17) (undo-tree-id3833 . -17) (undo-tree-id3834 . -17) (undo-tree-id3835 . -17) (undo-tree-id3836 . -17) (undo-tree-id3837 . -17) (undo-tree-id3838 . -17) (undo-tree-id3839 . -17) (undo-tree-id3840 . -17) (undo-tree-id3841 . -17) (undo-tree-id3842 . -16) (undo-tree-id3843 . -17) (undo-tree-id3844 . -16) (undo-tree-id3845 . -16) (undo-tree-id3846 . -16) (undo-tree-id3847 . -16) (undo-tree-id3848 . -16) (undo-tree-id3849 . -16) (undo-tree-id3850 . -16) (undo-tree-id3851 . -16) (undo-tree-id3852 . -16) (undo-tree-id3853 . -16) (undo-tree-id3854 . -16) (undo-tree-id3855 . -16) (undo-tree-id3856 . -15) (undo-tree-id3857 . -16) (undo-tree-id3858 . -15) (undo-tree-id3859 . -15) (undo-tree-id3860 . -15) (undo-tree-id3861 . -15) (undo-tree-id3862 . -15) (undo-tree-id3863 . -15) (undo-tree-id3864 . -15) (undo-tree-id3865 . -14) (undo-tree-id3866 . -15) (undo-tree-id3867 . -14) (undo-tree-id3868 . -14) (undo-tree-id3869 . -14) (undo-tree-id3870 . -14) (undo-tree-id3871 . -14) (undo-tree-id3872 . -14) (undo-tree-id3873 . -14) (undo-tree-id3874 . -14) (undo-tree-id3875 . -14) (undo-tree-id3876 . -14) (undo-tree-id3877 . -14) (undo-tree-id3878 . -17) (undo-tree-id3879 . 17) (undo-tree-id3880 . -17) (t 25192 10891 352505 185000)) nil (25192 10977 69718 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 806 . 807) (nil fontified nil 784 . 807) (784 . 807)) nil (25192 10977 69669 0) 0 nil])
([nil nil ((1462 . 1463) (t 25192 10977 73971 839000)) nil (25192 11086 346228 0) 0 nil])
([nil nil ((1463 . 1485) (#(")" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . 1463) (undo-tree-id3881 . -1) (undo-tree-id3882 . -1) (undo-tree-id3883 . -1) (undo-tree-id3884 . -1) (undo-tree-id3885 . -1) (undo-tree-id3886 . -1) (undo-tree-id3887 . -1)) nil (25192 11086 346224 0) 0 nil])
([nil nil ((1485 . 1490) (t 25192 11086 351276 451000)) nil (25192 11110 244746 0) 0 nil])
([nil nil ((1490 . 1493)) nil (25192 11110 244745 0) 0 nil])
([nil nil ((1490 . 1493) (#("lo" 0 2 (fontified nil ws-butler-chg chg)) . -1490) (1490 . 1492) (#("log(text, desc)" 0 15 (fontified nil ws-butler-chg chg)) . -1490) (1490 . 1505) (#("log" 0 3 (fontified t ws-butler-chg chg)) . -1490) (undo-tree-id3888 . -3) (undo-tree-id3889 . -3) (undo-tree-id3890 . -1) (undo-tree-id3891 . -1) (undo-tree-id3892 . -1) (undo-tree-id3893 . -1) (undo-tree-id3894 . -1) (undo-tree-id3895 . -1) (undo-tree-id3896 . -1) (undo-tree-id3897 . -1) (undo-tree-id3898 . -1) (undo-tree-id3899 . -2) (undo-tree-id3900 . -2) (undo-tree-id3901 . -1) (undo-tree-id3902 . -2) (undo-tree-id3903 . -2) (undo-tree-id3904 . -2) (undo-tree-id3905 . -2) (undo-tree-id3906 . -2) (undo-tree-id3907 . -2) (undo-tree-id3908 . -2) (undo-tree-id3909 . -2) (undo-tree-id3910 . -2) (undo-tree-id3911 . -2) (undo-tree-id3912 . -2) (undo-tree-id3913 . -2) (undo-tree-id3914 . -2) (undo-tree-id3915 . -2) (undo-tree-id3916 . -2) (undo-tree-id3917 . -2) (undo-tree-id3918 . -2) (undo-tree-id3919 . -2) (undo-tree-id3920 . -2) (undo-tree-id3921 . -2) (undo-tree-id3922 . -2) (undo-tree-id3923 . -2) (undo-tree-id3924 . -2) (undo-tree-id3925 . -2) (undo-tree-id3926 . -2) (undo-tree-id3927 . -2) (undo-tree-id3928 . -2) (undo-tree-id3929 . -2) (undo-tree-id3930 . -2) (undo-tree-id3931 . -2) (undo-tree-id3932 . -2) (undo-tree-id3933 . -2) (undo-tree-id3934 . -2) (undo-tree-id3935 . -2) (undo-tree-id3936 . -2) (undo-tree-id3937 . -2) (undo-tree-id3938 . -2) (undo-tree-id3939 . -2) (undo-tree-id3940 . -2) (undo-tree-id3941 . -2) (undo-tree-id3942 . -2) (undo-tree-id3943 . -3) (undo-tree-id3944 . -3) (undo-tree-id3945 . -3) (undo-tree-id3946 . -3) (undo-tree-id3947 . -3) (undo-tree-id3948 . -3) (undo-tree-id3949 . -3) (undo-tree-id3950 . -2) (undo-tree-id3951 . -3) (undo-tree-id3952 . -3) (undo-tree-id3953 . -3) (undo-tree-id3954 . -3) (undo-tree-id3955 . -3) (undo-tree-id3956 . -3) (undo-tree-id3957 . -3) (undo-tree-id3958 . -3) (undo-tree-id3959 . -3) (undo-tree-id3960 . -3) (undo-tree-id3961 . -3) (undo-tree-id3962 . -3) (undo-tree-id3963 . -3) (undo-tree-id3964 . -3) (undo-tree-id3965 . -3) (undo-tree-id3966 . -3) 1493) nil (25192 11110 244742 0) 0 nil])
([nil nil ((1493 . 1543)) nil (25192 11110 244691 0) 0 nil])
([nil nil ((1543 . 1548) (t 25192 11110 248992 253000)) nil (25192 11128 169824 0) 0 nil])
([nil nil ((1548 . 1589)) nil (25192 11128 169823 0) 0 nil])
([nil nil ((1589 . 1594)) nil (25192 11128 169823 0) 0 nil])
([nil nil ((1594 . 1649)) nil (25192 11128 169822 0) 0 nil])
([nil nil ((1649 . 1654)) nil (25192 11128 169821 0) 0 nil])
([nil nil ((1654 . 1725)) nil (25192 11128 169821 0) 0 nil])
([nil nil ((1725 . 1730)) nil (25192 11128 169820 0) 0 nil])
([nil nil ((1730 . 1753)) nil (25192 11128 169819 0) 0 nil])
([nil nil ((1753 . 1758)) nil (25192 11128 169817 0) 0 nil])
([nil nil ((1758 . 1799)) nil (25192 11128 169814 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . 1823) (undo-tree-id3967 . 1) (undo-tree-id3968 . 1) (1823 . 1824) (t 25192 11128 174303 789000)) nil (25192 11208 437364 0) 0 nil])
([nil nil ((1823 . 1824) (t 25192 11208 442173 533000)) nil (25192 11248 40310 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . 1823) (undo-tree-id3969 . -1) (undo-tree-id3970 . 1) (undo-tree-id3971 . 1)) nil (25192 11248 40307 0) 0 nil])
([nil nil ((1823 . 1824) (t 25192 11248 44982 378000)) nil (25192 11303 272741 0) 0 nil])
([nil nil ((#("{'from': accounts[0]}" 0 1 (fontified t face (rainbow-delimiters-depth-2-face)) 1 7 (fontified t face font-lock-string-face) 7 17 (fontified t) 17 18 (fontified t face (rainbow-delimiters-depth-3-face)) 18 19 (fontified t) 19 20 (fontified t face (rainbow-delimiters-depth-3-face)) 20 21 (fontified t face (rainbow-delimiters-depth-2-face))) . 1463) (undo-tree-id4188 . -21) (undo-tree-id4189 . -2) (undo-tree-id4190 . -2) (undo-tree-id4191 . -21) (undo-tree-id4192 . -1) (undo-tree-id4193 . -1) (undo-tree-id4194 . -1) (undo-tree-id4195 . -1) (undo-tree-id4196 . -1) (undo-tree-id4197 . -1) (undo-tree-id4198 . -1) (undo-tree-id4199 . -1) (undo-tree-id4200 . -1) (undo-tree-id4201 . -1) (undo-tree-id4202 . -1) (undo-tree-id4203 . -1) (undo-tree-id4204 . -1) (undo-tree-id4205 . -1) (undo-tree-id4206 . -1) (undo-tree-id4207 . -1) (undo-tree-id4208 . -1) (undo-tree-id4209 . -1) (undo-tree-id4210 . -1) (undo-tree-id4211 . -1) (undo-tree-id4212 . -1) (undo-tree-id4213 . -1) (undo-tree-id4214 . -1) (undo-tree-id4215 . -1) (undo-tree-id4216 . -1) (undo-tree-id4217 . -1) (undo-tree-id4218 . -1) (undo-tree-id4219 . -1) (undo-tree-id4220 . -1) (undo-tree-id4221 . -1) (undo-tree-id4222 . -1) (undo-tree-id4223 . -1) (undo-tree-id4224 . -1) (undo-tree-id4225 . -1) (undo-tree-id4226 . -1) (undo-tree-id4227 . -1) (undo-tree-id4228 . -1) (undo-tree-id4229 . -1) (undo-tree-id4230 . -1) (undo-tree-id4231 . -1) (undo-tree-id4232 . -1) (undo-tree-id4233 . -1) (undo-tree-id4234 . -1) (undo-tree-id4235 . -1) (undo-tree-id4236 . -1) (undo-tree-id4237 . -1) (undo-tree-id4238 . -2) (undo-tree-id4239 . 21) (undo-tree-id4240 . -1) (undo-tree-id4241 . 20) (undo-tree-id4242 . -20) (undo-tree-id4243 . 1) (undo-tree-id4244 . -21) (undo-tree-id4245 . 21) (undo-tree-id4246 . -1) (undo-tree-id4247 . 1) (undo-tree-id4248 . -21)) nil (25192 11303 272739 0) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -1462) (undo-tree-id3973 . -1) (undo-tree-id3974 . -1) (undo-tree-id3975 . -1) (undo-tree-id3976 . -1) (undo-tree-id3977 . -1) (undo-tree-id3978 . -1) (undo-tree-id3979 . -1) (undo-tree-id3980 . -1) (undo-tree-id3981 . -1) (undo-tree-id3982 . -1) (undo-tree-id3983 . -1) (undo-tree-id3984 . -1) (undo-tree-id3985 . -1) (undo-tree-id3986 . -1) (undo-tree-id3987 . -1) (undo-tree-id3988 . -1) (undo-tree-id3989 . -1) (undo-tree-id3990 . -1) (undo-tree-id3991 . -1) (undo-tree-id3992 . -1) (undo-tree-id3993 . -1) (undo-tree-id3994 . -1) (undo-tree-id3995 . -1) (undo-tree-id3996 . -1) (undo-tree-id3997 . -1) (undo-tree-id3998 . -1) (undo-tree-id3999 . -1) (undo-tree-id4000 . -1) (undo-tree-id4001 . -1) (undo-tree-id4002 . -1) (undo-tree-id4003 . -1) (undo-tree-id4004 . -1) (undo-tree-id4005 . -1) (undo-tree-id4006 . -1) (undo-tree-id4007 . -1) (undo-tree-id4008 . -1) (undo-tree-id4009 . -1) (undo-tree-id4010 . -1) (undo-tree-id4011 . -1) (undo-tree-id4012 . -1) (undo-tree-id4013 . -1) (undo-tree-id4014 . -1) (undo-tree-id4015 . -1) (undo-tree-id4016 . -1) (undo-tree-id4017 . -1) (undo-tree-id4018 . -1) (undo-tree-id4019 . -1) (undo-tree-id4020 . -1) (undo-tree-id4021 . -1) (undo-tree-id4022 . -1) (undo-tree-id4023 . -1) (undo-tree-id4024 . -1) (undo-tree-id4025 . -1) (undo-tree-id4026 . -1) (undo-tree-id4027 . -1) (undo-tree-id4028 . -1) (undo-tree-id4029 . -1) (undo-tree-id4030 . -1) (undo-tree-id4031 . -1) (undo-tree-id4032 . -1) (undo-tree-id4033 . -1) (undo-tree-id4034 . -1) (undo-tree-id4035 . -1) (undo-tree-id4036 . -1) (undo-tree-id4037 . -1) (undo-tree-id4038 . -1) (undo-tree-id4039 . -1) (undo-tree-id4040 . -1) (undo-tree-id4041 . -1) (undo-tree-id4042 . -1) (undo-tree-id4043 . -1) (undo-tree-id4044 . -1) (undo-tree-id4045 . -1) (undo-tree-id4046 . -1) (undo-tree-id4047 . -1) (undo-tree-id4048 . -1) (undo-tree-id4049 . -1) (undo-tree-id4050 . -1) (undo-tree-id4051 . -1) (undo-tree-id4052 . -1) (undo-tree-id4053 . -1) (undo-tree-id4054 . -1) (undo-tree-id4055 . -1) (undo-tree-id4056 . -1) (undo-tree-id4057 . -1) (undo-tree-id4058 . -1) (undo-tree-id4059 . -1) (undo-tree-id4060 . -1) (undo-tree-id4061 . -1) (undo-tree-id4062 . -1) (undo-tree-id4063 . -1) (undo-tree-id4064 . -1) (undo-tree-id4065 . -1) (undo-tree-id4066 . -1) (undo-tree-id4067 . -1) (undo-tree-id4068 . -1) (undo-tree-id4069 . -1) (undo-tree-id4070 . -1) (undo-tree-id4071 . -1) (undo-tree-id4072 . -1) (undo-tree-id4073 . -1) (undo-tree-id4074 . -1) (undo-tree-id4075 . -1) (undo-tree-id4076 . -1) (undo-tree-id4077 . -1) (undo-tree-id4078 . -1) (undo-tree-id4079 . -1) (undo-tree-id4080 . -1) (undo-tree-id4081 . -1) (undo-tree-id4082 . -1) (undo-tree-id4083 . -1) (undo-tree-id4084 . -1) (undo-tree-id4085 . -1) (undo-tree-id4086 . -1) (undo-tree-id4087 . -1) (undo-tree-id4088 . -1) (undo-tree-id4089 . -1) (undo-tree-id4090 . -1) (undo-tree-id4091 . -1) (undo-tree-id4092 . -1) (undo-tree-id4093 . -1) (undo-tree-id4094 . -1) (undo-tree-id4095 . -1) (undo-tree-id4096 . -1) (undo-tree-id4097 . -1) (undo-tree-id4098 . -1) (undo-tree-id4099 . -1) (undo-tree-id4100 . -1) (undo-tree-id4101 . -1) (undo-tree-id4102 . -1) (undo-tree-id4103 . -1) (undo-tree-id4104 . -1) (undo-tree-id4105 . -1) (undo-tree-id4106 . -1) (undo-tree-id4107 . -1) (undo-tree-id4108 . -1) (undo-tree-id4109 . -1) (undo-tree-id4110 . -1) (undo-tree-id4111 . -1) (undo-tree-id4112 . -1) (undo-tree-id4113 . -1) (undo-tree-id4114 . -1) (undo-tree-id4115 . -1) (undo-tree-id4116 . -1) (undo-tree-id4117 . -1) (undo-tree-id4118 . -1) (undo-tree-id4119 . -1) (undo-tree-id4120 . -1) (undo-tree-id4121 . -1) (undo-tree-id4122 . -1) (undo-tree-id4123 . -1) (undo-tree-id4124 . -1) (undo-tree-id4125 . -1) (undo-tree-id4126 . -1) (undo-tree-id4127 . -1) (undo-tree-id4128 . -1) (undo-tree-id4129 . -1) (undo-tree-id4130 . -1) (undo-tree-id4131 . -1) (undo-tree-id4132 . -1) (undo-tree-id4133 . -1) (undo-tree-id4134 . -1) (undo-tree-id4135 . -1) (undo-tree-id4136 . -1) (undo-tree-id4137 . -1) (undo-tree-id4138 . -1) (undo-tree-id4139 . -1) (undo-tree-id4140 . -1) (undo-tree-id4141 . -1) (undo-tree-id4142 . -1) (undo-tree-id4143 . -1) (undo-tree-id4144 . -1) (undo-tree-id4145 . -1) (undo-tree-id4146 . -1) (undo-tree-id4147 . -1) (undo-tree-id4148 . -1) (undo-tree-id4149 . -1) (undo-tree-id4150 . -1) (undo-tree-id4151 . -1) (undo-tree-id4152 . -1) (undo-tree-id4153 . -1) (undo-tree-id4154 . -1) (undo-tree-id4155 . -1) (undo-tree-id4156 . -1) (undo-tree-id4157 . -1) (undo-tree-id4158 . -1) (undo-tree-id4159 . -1) (undo-tree-id4160 . -1) (undo-tree-id4161 . -1) (undo-tree-id4162 . -1) (undo-tree-id4163 . -1) (undo-tree-id4164 . -1) (undo-tree-id4165 . -1) (undo-tree-id4166 . -1) (undo-tree-id4167 . -1) (undo-tree-id4168 . -1) (undo-tree-id4169 . -1) (undo-tree-id4170 . -1) (undo-tree-id4171 . -1) (undo-tree-id4172 . -1) (undo-tree-id4173 . -1) (undo-tree-id4174 . -1) (undo-tree-id4175 . -1) (undo-tree-id4176 . -1) (undo-tree-id4177 . -1) (undo-tree-id4178 . -1) (undo-tree-id4179 . -1) (undo-tree-id4180 . -1) (undo-tree-id4181 . -1) (undo-tree-id4182 . -1) (undo-tree-id4183 . -1) (undo-tree-id4184 . -1) (undo-tree-id4185 . -1) (undo-tree-id4186 . -1) (undo-tree-id4187 . -1) 1463) nil (25192 11303 272710 0) 0 nil])
([nil current ((#("
" 0 1 (ws-butler-chg chg fontified t)) . 1801) (undo-tree-id3972 . -1) 1462) nil (25192 11303 272616 0) 0 nil])
nil
